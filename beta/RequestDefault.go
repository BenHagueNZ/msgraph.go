// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// DefaultColumnValueRequestBuilder is request builder for DefaultColumnValue
type DefaultColumnValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DefaultColumnValueRequest
func (b *DefaultColumnValueRequestBuilder) Request() *DefaultColumnValueRequest {
	return &DefaultColumnValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DefaultColumnValueRequest is request for DefaultColumnValue
type DefaultColumnValueRequest struct{ BaseRequest }

// Get performs GET request for DefaultColumnValue
func (r *DefaultColumnValueRequest) Get(ctx context.Context) (resObj *DefaultColumnValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DefaultColumnValue
func (r *DefaultColumnValueRequest) Update(ctx context.Context, reqObj *DefaultColumnValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DefaultColumnValue
func (r *DefaultColumnValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DefaultDeviceCompliancePolicyRequestBuilder is request builder for DefaultDeviceCompliancePolicy
type DefaultDeviceCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DefaultDeviceCompliancePolicyRequest
func (b *DefaultDeviceCompliancePolicyRequestBuilder) Request() *DefaultDeviceCompliancePolicyRequest {
	return &DefaultDeviceCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DefaultDeviceCompliancePolicyRequest is request for DefaultDeviceCompliancePolicy
type DefaultDeviceCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for DefaultDeviceCompliancePolicy
func (r *DefaultDeviceCompliancePolicyRequest) Get(ctx context.Context) (resObj *DefaultDeviceCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DefaultDeviceCompliancePolicy
func (r *DefaultDeviceCompliancePolicyRequest) Update(ctx context.Context, reqObj *DefaultDeviceCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DefaultDeviceCompliancePolicy
func (r *DefaultDeviceCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DefaultManagedAppProtectionRequestBuilder is request builder for DefaultManagedAppProtection
type DefaultManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DefaultManagedAppProtectionRequest
func (b *DefaultManagedAppProtectionRequestBuilder) Request() *DefaultManagedAppProtectionRequest {
	return &DefaultManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DefaultManagedAppProtectionRequest is request for DefaultManagedAppProtection
type DefaultManagedAppProtectionRequest struct{ BaseRequest }

// Get performs GET request for DefaultManagedAppProtection
func (r *DefaultManagedAppProtectionRequest) Get(ctx context.Context) (resObj *DefaultManagedAppProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DefaultManagedAppProtection
func (r *DefaultManagedAppProtectionRequest) Update(ctx context.Context, reqObj *DefaultManagedAppProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DefaultManagedAppProtection
func (r *DefaultManagedAppProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DefaultUserRoleOverrideRequestBuilder is request builder for DefaultUserRoleOverride
type DefaultUserRoleOverrideRequestBuilder struct{ BaseRequestBuilder }

// Request returns DefaultUserRoleOverrideRequest
func (b *DefaultUserRoleOverrideRequestBuilder) Request() *DefaultUserRoleOverrideRequest {
	return &DefaultUserRoleOverrideRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DefaultUserRoleOverrideRequest is request for DefaultUserRoleOverride
type DefaultUserRoleOverrideRequest struct{ BaseRequest }

// Get performs GET request for DefaultUserRoleOverride
func (r *DefaultUserRoleOverrideRequest) Get(ctx context.Context) (resObj *DefaultUserRoleOverride, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DefaultUserRoleOverride
func (r *DefaultUserRoleOverrideRequest) Update(ctx context.Context, reqObj *DefaultUserRoleOverride) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DefaultUserRoleOverride
func (r *DefaultUserRoleOverrideRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DefaultUserRolePermissionsRequestBuilder is request builder for DefaultUserRolePermissions
type DefaultUserRolePermissionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DefaultUserRolePermissionsRequest
func (b *DefaultUserRolePermissionsRequestBuilder) Request() *DefaultUserRolePermissionsRequest {
	return &DefaultUserRolePermissionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DefaultUserRolePermissionsRequest is request for DefaultUserRolePermissions
type DefaultUserRolePermissionsRequest struct{ BaseRequest }

// Get performs GET request for DefaultUserRolePermissions
func (r *DefaultUserRolePermissionsRequest) Get(ctx context.Context) (resObj *DefaultUserRolePermissions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DefaultUserRolePermissions
func (r *DefaultUserRolePermissionsRequest) Update(ctx context.Context, reqObj *DefaultUserRolePermissions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DefaultUserRolePermissions
func (r *DefaultUserRolePermissionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
