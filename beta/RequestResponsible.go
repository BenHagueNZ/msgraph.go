// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ResponsiblePolicyRequestBuilder is request builder for ResponsiblePolicy
type ResponsiblePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ResponsiblePolicyRequest
func (b *ResponsiblePolicyRequestBuilder) Request() *ResponsiblePolicyRequest {
	return &ResponsiblePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ResponsiblePolicyRequest is request for ResponsiblePolicy
type ResponsiblePolicyRequest struct{ BaseRequest }

// Get performs GET request for ResponsiblePolicy
func (r *ResponsiblePolicyRequest) Get(ctx context.Context) (resObj *ResponsiblePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ResponsiblePolicy
func (r *ResponsiblePolicyRequest) Update(ctx context.Context, reqObj *ResponsiblePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ResponsiblePolicy
func (r *ResponsiblePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ResponsibleSensitiveTypeRequestBuilder is request builder for ResponsibleSensitiveType
type ResponsibleSensitiveTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns ResponsibleSensitiveTypeRequest
func (b *ResponsibleSensitiveTypeRequestBuilder) Request() *ResponsibleSensitiveTypeRequest {
	return &ResponsibleSensitiveTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ResponsibleSensitiveTypeRequest is request for ResponsibleSensitiveType
type ResponsibleSensitiveTypeRequest struct{ BaseRequest }

// Get performs GET request for ResponsibleSensitiveType
func (r *ResponsibleSensitiveTypeRequest) Get(ctx context.Context) (resObj *ResponsibleSensitiveType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ResponsibleSensitiveType
func (r *ResponsibleSensitiveTypeRequest) Update(ctx context.Context, reqObj *ResponsibleSensitiveType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ResponsibleSensitiveType
func (r *ResponsibleSensitiveTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
