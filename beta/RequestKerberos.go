// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// KerberosSignOnSettingsRequestBuilder is request builder for KerberosSignOnSettings
type KerberosSignOnSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns KerberosSignOnSettingsRequest
func (b *KerberosSignOnSettingsRequestBuilder) Request() *KerberosSignOnSettingsRequest {
	return &KerberosSignOnSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KerberosSignOnSettingsRequest is request for KerberosSignOnSettings
type KerberosSignOnSettingsRequest struct{ BaseRequest }

// Get performs GET request for KerberosSignOnSettings
func (r *KerberosSignOnSettingsRequest) Get(ctx context.Context) (resObj *KerberosSignOnSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KerberosSignOnSettings
func (r *KerberosSignOnSettingsRequest) Update(ctx context.Context, reqObj *KerberosSignOnSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KerberosSignOnSettings
func (r *KerberosSignOnSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KerberosSingleSignOnExtensionRequestBuilder is request builder for KerberosSingleSignOnExtension
type KerberosSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns KerberosSingleSignOnExtensionRequest
func (b *KerberosSingleSignOnExtensionRequestBuilder) Request() *KerberosSingleSignOnExtensionRequest {
	return &KerberosSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KerberosSingleSignOnExtensionRequest is request for KerberosSingleSignOnExtension
type KerberosSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for KerberosSingleSignOnExtension
func (r *KerberosSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *KerberosSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KerberosSingleSignOnExtension
func (r *KerberosSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *KerberosSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KerberosSingleSignOnExtension
func (r *KerberosSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
