// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// IOSAvailableUpdateVersionRequestBuilder is request builder for IOSAvailableUpdateVersion
type IOSAvailableUpdateVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSAvailableUpdateVersionRequest
func (b *IOSAvailableUpdateVersionRequestBuilder) Request() *IOSAvailableUpdateVersionRequest {
	return &IOSAvailableUpdateVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSAvailableUpdateVersionRequest is request for IOSAvailableUpdateVersion
type IOSAvailableUpdateVersionRequest struct{ BaseRequest }

// Get performs GET request for IOSAvailableUpdateVersion
func (r *IOSAvailableUpdateVersionRequest) Get(ctx context.Context) (resObj *IOSAvailableUpdateVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSAvailableUpdateVersion
func (r *IOSAvailableUpdateVersionRequest) Update(ctx context.Context, reqObj *IOSAvailableUpdateVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSAvailableUpdateVersion
func (r *IOSAvailableUpdateVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSAzureAdSingleSignOnExtensionRequestBuilder is request builder for IOSAzureAdSingleSignOnExtension
type IOSAzureAdSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSAzureAdSingleSignOnExtensionRequest
func (b *IOSAzureAdSingleSignOnExtensionRequestBuilder) Request() *IOSAzureAdSingleSignOnExtensionRequest {
	return &IOSAzureAdSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSAzureAdSingleSignOnExtensionRequest is request for IOSAzureAdSingleSignOnExtension
type IOSAzureAdSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for IOSAzureAdSingleSignOnExtension
func (r *IOSAzureAdSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *IOSAzureAdSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSAzureAdSingleSignOnExtension
func (r *IOSAzureAdSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *IOSAzureAdSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSAzureAdSingleSignOnExtension
func (r *IOSAzureAdSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSBookmarkRequestBuilder is request builder for IOSBookmark
type IOSBookmarkRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSBookmarkRequest
func (b *IOSBookmarkRequestBuilder) Request() *IOSBookmarkRequest {
	return &IOSBookmarkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSBookmarkRequest is request for IOSBookmark
type IOSBookmarkRequest struct{ BaseRequest }

// Get performs GET request for IOSBookmark
func (r *IOSBookmarkRequest) Get(ctx context.Context) (resObj *IOSBookmark, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSBookmark
func (r *IOSBookmarkRequest) Update(ctx context.Context, reqObj *IOSBookmark) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSBookmark
func (r *IOSBookmarkRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCertificateProfileRequestBuilder is request builder for IOSCertificateProfile
type IOSCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCertificateProfileRequest
func (b *IOSCertificateProfileRequestBuilder) Request() *IOSCertificateProfileRequest {
	return &IOSCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCertificateProfileRequest is request for IOSCertificateProfile
type IOSCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Get(ctx context.Context) (resObj *IOSCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Update(ctx context.Context, reqObj *IOSCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCertificateProfileBaseRequestBuilder is request builder for IOSCertificateProfileBase
type IOSCertificateProfileBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCertificateProfileBaseRequest
func (b *IOSCertificateProfileBaseRequestBuilder) Request() *IOSCertificateProfileBaseRequest {
	return &IOSCertificateProfileBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCertificateProfileBaseRequest is request for IOSCertificateProfileBase
type IOSCertificateProfileBaseRequest struct{ BaseRequest }

// Get performs GET request for IOSCertificateProfileBase
func (r *IOSCertificateProfileBaseRequest) Get(ctx context.Context) (resObj *IOSCertificateProfileBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCertificateProfileBase
func (r *IOSCertificateProfileBaseRequest) Update(ctx context.Context, reqObj *IOSCertificateProfileBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCertificateProfileBase
func (r *IOSCertificateProfileBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCompliancePolicyRequestBuilder is request builder for IOSCompliancePolicy
type IOSCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCompliancePolicyRequest
func (b *IOSCompliancePolicyRequestBuilder) Request() *IOSCompliancePolicyRequest {
	return &IOSCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCompliancePolicyRequest is request for IOSCompliancePolicy
type IOSCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Get(ctx context.Context) (resObj *IOSCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Update(ctx context.Context, reqObj *IOSCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCredentialSingleSignOnExtensionRequestBuilder is request builder for IOSCredentialSingleSignOnExtension
type IOSCredentialSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCredentialSingleSignOnExtensionRequest
func (b *IOSCredentialSingleSignOnExtensionRequestBuilder) Request() *IOSCredentialSingleSignOnExtensionRequest {
	return &IOSCredentialSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCredentialSingleSignOnExtensionRequest is request for IOSCredentialSingleSignOnExtension
type IOSCredentialSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for IOSCredentialSingleSignOnExtension
func (r *IOSCredentialSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *IOSCredentialSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCredentialSingleSignOnExtension
func (r *IOSCredentialSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *IOSCredentialSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCredentialSingleSignOnExtension
func (r *IOSCredentialSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCustomConfigurationRequestBuilder is request builder for IOSCustomConfiguration
type IOSCustomConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCustomConfigurationRequest
func (b *IOSCustomConfigurationRequestBuilder) Request() *IOSCustomConfigurationRequest {
	return &IOSCustomConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCustomConfigurationRequest is request for IOSCustomConfiguration
type IOSCustomConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Get(ctx context.Context) (resObj *IOSCustomConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Update(ctx context.Context, reqObj *IOSCustomConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSDerivedCredentialAuthenticationConfigurationRequestBuilder is request builder for IOSDerivedCredentialAuthenticationConfiguration
type IOSDerivedCredentialAuthenticationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSDerivedCredentialAuthenticationConfigurationRequest
func (b *IOSDerivedCredentialAuthenticationConfigurationRequestBuilder) Request() *IOSDerivedCredentialAuthenticationConfigurationRequest {
	return &IOSDerivedCredentialAuthenticationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSDerivedCredentialAuthenticationConfigurationRequest is request for IOSDerivedCredentialAuthenticationConfiguration
type IOSDerivedCredentialAuthenticationConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSDerivedCredentialAuthenticationConfiguration
func (r *IOSDerivedCredentialAuthenticationConfigurationRequest) Get(ctx context.Context) (resObj *IOSDerivedCredentialAuthenticationConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSDerivedCredentialAuthenticationConfiguration
func (r *IOSDerivedCredentialAuthenticationConfigurationRequest) Update(ctx context.Context, reqObj *IOSDerivedCredentialAuthenticationConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSDerivedCredentialAuthenticationConfiguration
func (r *IOSDerivedCredentialAuthenticationConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSDeviceFeaturesConfigurationRequestBuilder is request builder for IOSDeviceFeaturesConfiguration
type IOSDeviceFeaturesConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSDeviceFeaturesConfigurationRequest
func (b *IOSDeviceFeaturesConfigurationRequestBuilder) Request() *IOSDeviceFeaturesConfigurationRequest {
	return &IOSDeviceFeaturesConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSDeviceFeaturesConfigurationRequest is request for IOSDeviceFeaturesConfiguration
type IOSDeviceFeaturesConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Get(ctx context.Context) (resObj *IOSDeviceFeaturesConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Update(ctx context.Context, reqObj *IOSDeviceFeaturesConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSDeviceTypeRequestBuilder is request builder for IOSDeviceType
type IOSDeviceTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSDeviceTypeRequest
func (b *IOSDeviceTypeRequestBuilder) Request() *IOSDeviceTypeRequest {
	return &IOSDeviceTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSDeviceTypeRequest is request for IOSDeviceType
type IOSDeviceTypeRequest struct{ BaseRequest }

// Get performs GET request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Get(ctx context.Context) (resObj *IOSDeviceType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Update(ctx context.Context, reqObj *IOSDeviceType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSEasEmailProfileConfigurationRequestBuilder is request builder for IOSEasEmailProfileConfiguration
type IOSEasEmailProfileConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSEasEmailProfileConfigurationRequest
func (b *IOSEasEmailProfileConfigurationRequestBuilder) Request() *IOSEasEmailProfileConfigurationRequest {
	return &IOSEasEmailProfileConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSEasEmailProfileConfigurationRequest is request for IOSEasEmailProfileConfiguration
type IOSEasEmailProfileConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSEasEmailProfileConfiguration
func (r *IOSEasEmailProfileConfigurationRequest) Get(ctx context.Context) (resObj *IOSEasEmailProfileConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSEasEmailProfileConfiguration
func (r *IOSEasEmailProfileConfigurationRequest) Update(ctx context.Context, reqObj *IOSEasEmailProfileConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSEasEmailProfileConfiguration
func (r *IOSEasEmailProfileConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSEduCertificateSettingsRequestBuilder is request builder for IOSEduCertificateSettings
type IOSEduCertificateSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSEduCertificateSettingsRequest
func (b *IOSEduCertificateSettingsRequestBuilder) Request() *IOSEduCertificateSettingsRequest {
	return &IOSEduCertificateSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSEduCertificateSettingsRequest is request for IOSEduCertificateSettings
type IOSEduCertificateSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSEduCertificateSettings
func (r *IOSEduCertificateSettingsRequest) Get(ctx context.Context) (resObj *IOSEduCertificateSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSEduCertificateSettings
func (r *IOSEduCertificateSettingsRequest) Update(ctx context.Context, reqObj *IOSEduCertificateSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSEduCertificateSettings
func (r *IOSEduCertificateSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSEduDeviceConfigurationRequestBuilder is request builder for IOSEduDeviceConfiguration
type IOSEduDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSEduDeviceConfigurationRequest
func (b *IOSEduDeviceConfigurationRequestBuilder) Request() *IOSEduDeviceConfigurationRequest {
	return &IOSEduDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSEduDeviceConfigurationRequest is request for IOSEduDeviceConfiguration
type IOSEduDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSEduDeviceConfiguration
func (r *IOSEduDeviceConfigurationRequest) Get(ctx context.Context) (resObj *IOSEduDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSEduDeviceConfiguration
func (r *IOSEduDeviceConfigurationRequest) Update(ctx context.Context, reqObj *IOSEduDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSEduDeviceConfiguration
func (r *IOSEduDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSEducationDeviceConfigurationRequestBuilder is request builder for IOSEducationDeviceConfiguration
type IOSEducationDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSEducationDeviceConfigurationRequest
func (b *IOSEducationDeviceConfigurationRequestBuilder) Request() *IOSEducationDeviceConfigurationRequest {
	return &IOSEducationDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSEducationDeviceConfigurationRequest is request for IOSEducationDeviceConfiguration
type IOSEducationDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSEducationDeviceConfiguration
func (r *IOSEducationDeviceConfigurationRequest) Get(ctx context.Context) (resObj *IOSEducationDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSEducationDeviceConfiguration
func (r *IOSEducationDeviceConfigurationRequest) Update(ctx context.Context, reqObj *IOSEducationDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSEducationDeviceConfiguration
func (r *IOSEducationDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSEnterpriseWiFiConfigurationRequestBuilder is request builder for IOSEnterpriseWiFiConfiguration
type IOSEnterpriseWiFiConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSEnterpriseWiFiConfigurationRequest
func (b *IOSEnterpriseWiFiConfigurationRequestBuilder) Request() *IOSEnterpriseWiFiConfigurationRequest {
	return &IOSEnterpriseWiFiConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSEnterpriseWiFiConfigurationRequest is request for IOSEnterpriseWiFiConfiguration
type IOSEnterpriseWiFiConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSEnterpriseWiFiConfiguration
func (r *IOSEnterpriseWiFiConfigurationRequest) Get(ctx context.Context) (resObj *IOSEnterpriseWiFiConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSEnterpriseWiFiConfiguration
func (r *IOSEnterpriseWiFiConfigurationRequest) Update(ctx context.Context, reqObj *IOSEnterpriseWiFiConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSEnterpriseWiFiConfiguration
func (r *IOSEnterpriseWiFiConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSExpeditedCheckinConfigurationRequestBuilder is request builder for IOSExpeditedCheckinConfiguration
type IOSExpeditedCheckinConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSExpeditedCheckinConfigurationRequest
func (b *IOSExpeditedCheckinConfigurationRequestBuilder) Request() *IOSExpeditedCheckinConfigurationRequest {
	return &IOSExpeditedCheckinConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSExpeditedCheckinConfigurationRequest is request for IOSExpeditedCheckinConfiguration
type IOSExpeditedCheckinConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSExpeditedCheckinConfiguration
func (r *IOSExpeditedCheckinConfigurationRequest) Get(ctx context.Context) (resObj *IOSExpeditedCheckinConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSExpeditedCheckinConfiguration
func (r *IOSExpeditedCheckinConfigurationRequest) Update(ctx context.Context, reqObj *IOSExpeditedCheckinConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSExpeditedCheckinConfiguration
func (r *IOSExpeditedCheckinConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSGeneralDeviceConfigurationRequestBuilder is request builder for IOSGeneralDeviceConfiguration
type IOSGeneralDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSGeneralDeviceConfigurationRequest
func (b *IOSGeneralDeviceConfigurationRequestBuilder) Request() *IOSGeneralDeviceConfigurationRequest {
	return &IOSGeneralDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSGeneralDeviceConfigurationRequest is request for IOSGeneralDeviceConfiguration
type IOSGeneralDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Get(ctx context.Context) (resObj *IOSGeneralDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Update(ctx context.Context, reqObj *IOSGeneralDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenAppRequestBuilder is request builder for IOSHomeScreenApp
type IOSHomeScreenAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenAppRequest
func (b *IOSHomeScreenAppRequestBuilder) Request() *IOSHomeScreenAppRequest {
	return &IOSHomeScreenAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenAppRequest is request for IOSHomeScreenApp
type IOSHomeScreenAppRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Get(ctx context.Context) (resObj *IOSHomeScreenApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Update(ctx context.Context, reqObj *IOSHomeScreenApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenFolderRequestBuilder is request builder for IOSHomeScreenFolder
type IOSHomeScreenFolderRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenFolderRequest
func (b *IOSHomeScreenFolderRequestBuilder) Request() *IOSHomeScreenFolderRequest {
	return &IOSHomeScreenFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenFolderRequest is request for IOSHomeScreenFolder
type IOSHomeScreenFolderRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Get(ctx context.Context) (resObj *IOSHomeScreenFolder, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Update(ctx context.Context, reqObj *IOSHomeScreenFolder) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenFolderPageRequestBuilder is request builder for IOSHomeScreenFolderPage
type IOSHomeScreenFolderPageRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenFolderPageRequest
func (b *IOSHomeScreenFolderPageRequestBuilder) Request() *IOSHomeScreenFolderPageRequest {
	return &IOSHomeScreenFolderPageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenFolderPageRequest is request for IOSHomeScreenFolderPage
type IOSHomeScreenFolderPageRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Get(ctx context.Context) (resObj *IOSHomeScreenFolderPage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Update(ctx context.Context, reqObj *IOSHomeScreenFolderPage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenItemRequestBuilder is request builder for IOSHomeScreenItem
type IOSHomeScreenItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenItemRequest
func (b *IOSHomeScreenItemRequestBuilder) Request() *IOSHomeScreenItemRequest {
	return &IOSHomeScreenItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenItemRequest is request for IOSHomeScreenItem
type IOSHomeScreenItemRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Get(ctx context.Context) (resObj *IOSHomeScreenItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Update(ctx context.Context, reqObj *IOSHomeScreenItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenPageRequestBuilder is request builder for IOSHomeScreenPage
type IOSHomeScreenPageRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenPageRequest
func (b *IOSHomeScreenPageRequestBuilder) Request() *IOSHomeScreenPageRequest {
	return &IOSHomeScreenPageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenPageRequest is request for IOSHomeScreenPage
type IOSHomeScreenPageRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Get(ctx context.Context) (resObj *IOSHomeScreenPage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Update(ctx context.Context, reqObj *IOSHomeScreenPage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSImportedPFXCertificateProfileRequestBuilder is request builder for IOSImportedPFXCertificateProfile
type IOSImportedPFXCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSImportedPFXCertificateProfileRequest
func (b *IOSImportedPFXCertificateProfileRequestBuilder) Request() *IOSImportedPFXCertificateProfileRequest {
	return &IOSImportedPFXCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSImportedPFXCertificateProfileRequest is request for IOSImportedPFXCertificateProfile
type IOSImportedPFXCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for IOSImportedPFXCertificateProfile
func (r *IOSImportedPFXCertificateProfileRequest) Get(ctx context.Context) (resObj *IOSImportedPFXCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSImportedPFXCertificateProfile
func (r *IOSImportedPFXCertificateProfileRequest) Update(ctx context.Context, reqObj *IOSImportedPFXCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSImportedPFXCertificateProfile
func (r *IOSImportedPFXCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSKerberosSingleSignOnExtensionRequestBuilder is request builder for IOSKerberosSingleSignOnExtension
type IOSKerberosSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSKerberosSingleSignOnExtensionRequest
func (b *IOSKerberosSingleSignOnExtensionRequestBuilder) Request() *IOSKerberosSingleSignOnExtensionRequest {
	return &IOSKerberosSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSKerberosSingleSignOnExtensionRequest is request for IOSKerberosSingleSignOnExtension
type IOSKerberosSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for IOSKerberosSingleSignOnExtension
func (r *IOSKerberosSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *IOSKerberosSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSKerberosSingleSignOnExtension
func (r *IOSKerberosSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *IOSKerberosSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSKerberosSingleSignOnExtension
func (r *IOSKerberosSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppRequestBuilder is request builder for IOSLobApp
type IOSLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppRequest
func (b *IOSLobAppRequestBuilder) Request() *IOSLobAppRequest {
	return &IOSLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppRequest is request for IOSLobApp
type IOSLobAppRequest struct{ BaseRequest }

// Get performs GET request for IOSLobApp
func (r *IOSLobAppRequest) Get(ctx context.Context) (resObj *IOSLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobApp
func (r *IOSLobAppRequest) Update(ctx context.Context, reqObj *IOSLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobApp
func (r *IOSLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppAssignmentSettingsRequestBuilder is request builder for IOSLobAppAssignmentSettings
type IOSLobAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppAssignmentSettingsRequest
func (b *IOSLobAppAssignmentSettingsRequestBuilder) Request() *IOSLobAppAssignmentSettingsRequest {
	return &IOSLobAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppAssignmentSettingsRequest is request for IOSLobAppAssignmentSettings
type IOSLobAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSLobAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSLobAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppProvisioningConfigurationRequestBuilder is request builder for IOSLobAppProvisioningConfiguration
type IOSLobAppProvisioningConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppProvisioningConfigurationRequest
func (b *IOSLobAppProvisioningConfigurationRequestBuilder) Request() *IOSLobAppProvisioningConfigurationRequest {
	return &IOSLobAppProvisioningConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppProvisioningConfigurationRequest is request for IOSLobAppProvisioningConfiguration
type IOSLobAppProvisioningConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppProvisioningConfiguration
func (r *IOSLobAppProvisioningConfigurationRequest) Get(ctx context.Context) (resObj *IOSLobAppProvisioningConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppProvisioningConfiguration
func (r *IOSLobAppProvisioningConfigurationRequest) Update(ctx context.Context, reqObj *IOSLobAppProvisioningConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppProvisioningConfiguration
func (r *IOSLobAppProvisioningConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppProvisioningConfigurationAssignmentRequestBuilder is request builder for IOSLobAppProvisioningConfigurationAssignment
type IOSLobAppProvisioningConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppProvisioningConfigurationAssignmentRequest
func (b *IOSLobAppProvisioningConfigurationAssignmentRequestBuilder) Request() *IOSLobAppProvisioningConfigurationAssignmentRequest {
	return &IOSLobAppProvisioningConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppProvisioningConfigurationAssignmentRequest is request for IOSLobAppProvisioningConfigurationAssignment
type IOSLobAppProvisioningConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *IOSLobAppProvisioningConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *IOSLobAppProvisioningConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppProvisioningConfigurationPolicySetItemRequestBuilder is request builder for IOSLobAppProvisioningConfigurationPolicySetItem
type IOSLobAppProvisioningConfigurationPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppProvisioningConfigurationPolicySetItemRequest
func (b *IOSLobAppProvisioningConfigurationPolicySetItemRequestBuilder) Request() *IOSLobAppProvisioningConfigurationPolicySetItemRequest {
	return &IOSLobAppProvisioningConfigurationPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppProvisioningConfigurationPolicySetItemRequest is request for IOSLobAppProvisioningConfigurationPolicySetItem
type IOSLobAppProvisioningConfigurationPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppProvisioningConfigurationPolicySetItem
func (r *IOSLobAppProvisioningConfigurationPolicySetItemRequest) Get(ctx context.Context) (resObj *IOSLobAppProvisioningConfigurationPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppProvisioningConfigurationPolicySetItem
func (r *IOSLobAppProvisioningConfigurationPolicySetItemRequest) Update(ctx context.Context, reqObj *IOSLobAppProvisioningConfigurationPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppProvisioningConfigurationPolicySetItem
func (r *IOSLobAppProvisioningConfigurationPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSManagedAppProtectionRequestBuilder is request builder for IOSManagedAppProtection
type IOSManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSManagedAppProtectionRequest
func (b *IOSManagedAppProtectionRequestBuilder) Request() *IOSManagedAppProtectionRequest {
	return &IOSManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSManagedAppProtectionRequest is request for IOSManagedAppProtection
type IOSManagedAppProtectionRequest struct{ BaseRequest }

// Get performs GET request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Get(ctx context.Context) (resObj *IOSManagedAppProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Update(ctx context.Context, reqObj *IOSManagedAppProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSManagedAppRegistrationRequestBuilder is request builder for IOSManagedAppRegistration
type IOSManagedAppRegistrationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSManagedAppRegistrationRequest
func (b *IOSManagedAppRegistrationRequestBuilder) Request() *IOSManagedAppRegistrationRequest {
	return &IOSManagedAppRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSManagedAppRegistrationRequest is request for IOSManagedAppRegistration
type IOSManagedAppRegistrationRequest struct{ BaseRequest }

// Get performs GET request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Get(ctx context.Context) (resObj *IOSManagedAppRegistration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Update(ctx context.Context, reqObj *IOSManagedAppRegistration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMinimumOperatingSystemRequestBuilder is request builder for IOSMinimumOperatingSystem
type IOSMinimumOperatingSystemRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMinimumOperatingSystemRequest
func (b *IOSMinimumOperatingSystemRequestBuilder) Request() *IOSMinimumOperatingSystemRequest {
	return &IOSMinimumOperatingSystemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMinimumOperatingSystemRequest is request for IOSMinimumOperatingSystem
type IOSMinimumOperatingSystemRequest struct{ BaseRequest }

// Get performs GET request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Get(ctx context.Context) (resObj *IOSMinimumOperatingSystem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Update(ctx context.Context, reqObj *IOSMinimumOperatingSystem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMobileAppConfigurationRequestBuilder is request builder for IOSMobileAppConfiguration
type IOSMobileAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMobileAppConfigurationRequest
func (b *IOSMobileAppConfigurationRequestBuilder) Request() *IOSMobileAppConfigurationRequest {
	return &IOSMobileAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMobileAppConfigurationRequest is request for IOSMobileAppConfiguration
type IOSMobileAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Get(ctx context.Context) (resObj *IOSMobileAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Update(ctx context.Context, reqObj *IOSMobileAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMobileAppIdentifierRequestBuilder is request builder for IOSMobileAppIdentifier
type IOSMobileAppIdentifierRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMobileAppIdentifierRequest
func (b *IOSMobileAppIdentifierRequestBuilder) Request() *IOSMobileAppIdentifierRequest {
	return &IOSMobileAppIdentifierRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMobileAppIdentifierRequest is request for IOSMobileAppIdentifier
type IOSMobileAppIdentifierRequest struct{ BaseRequest }

// Get performs GET request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Get(ctx context.Context) (resObj *IOSMobileAppIdentifier, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Update(ctx context.Context, reqObj *IOSMobileAppIdentifier) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSNetworkUsageRuleRequestBuilder is request builder for IOSNetworkUsageRule
type IOSNetworkUsageRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSNetworkUsageRuleRequest
func (b *IOSNetworkUsageRuleRequestBuilder) Request() *IOSNetworkUsageRuleRequest {
	return &IOSNetworkUsageRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSNetworkUsageRuleRequest is request for IOSNetworkUsageRule
type IOSNetworkUsageRuleRequest struct{ BaseRequest }

// Get performs GET request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Get(ctx context.Context) (resObj *IOSNetworkUsageRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Update(ctx context.Context, reqObj *IOSNetworkUsageRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSNotificationSettingsRequestBuilder is request builder for IOSNotificationSettings
type IOSNotificationSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSNotificationSettingsRequest
func (b *IOSNotificationSettingsRequestBuilder) Request() *IOSNotificationSettingsRequest {
	return &IOSNotificationSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSNotificationSettingsRequest is request for IOSNotificationSettings
type IOSNotificationSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Get(ctx context.Context) (resObj *IOSNotificationSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Update(ctx context.Context, reqObj *IOSNotificationSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSPkcsCertificateProfileRequestBuilder is request builder for IOSPkcsCertificateProfile
type IOSPkcsCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSPkcsCertificateProfileRequest
func (b *IOSPkcsCertificateProfileRequestBuilder) Request() *IOSPkcsCertificateProfileRequest {
	return &IOSPkcsCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSPkcsCertificateProfileRequest is request for IOSPkcsCertificateProfile
type IOSPkcsCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for IOSPkcsCertificateProfile
func (r *IOSPkcsCertificateProfileRequest) Get(ctx context.Context) (resObj *IOSPkcsCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSPkcsCertificateProfile
func (r *IOSPkcsCertificateProfileRequest) Update(ctx context.Context, reqObj *IOSPkcsCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSPkcsCertificateProfile
func (r *IOSPkcsCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSRedirectSingleSignOnExtensionRequestBuilder is request builder for IOSRedirectSingleSignOnExtension
type IOSRedirectSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSRedirectSingleSignOnExtensionRequest
func (b *IOSRedirectSingleSignOnExtensionRequestBuilder) Request() *IOSRedirectSingleSignOnExtensionRequest {
	return &IOSRedirectSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSRedirectSingleSignOnExtensionRequest is request for IOSRedirectSingleSignOnExtension
type IOSRedirectSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for IOSRedirectSingleSignOnExtension
func (r *IOSRedirectSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *IOSRedirectSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSRedirectSingleSignOnExtension
func (r *IOSRedirectSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *IOSRedirectSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSRedirectSingleSignOnExtension
func (r *IOSRedirectSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSScepCertificateProfileRequestBuilder is request builder for IOSScepCertificateProfile
type IOSScepCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSScepCertificateProfileRequest
func (b *IOSScepCertificateProfileRequestBuilder) Request() *IOSScepCertificateProfileRequest {
	return &IOSScepCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSScepCertificateProfileRequest is request for IOSScepCertificateProfile
type IOSScepCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for IOSScepCertificateProfile
func (r *IOSScepCertificateProfileRequest) Get(ctx context.Context) (resObj *IOSScepCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSScepCertificateProfile
func (r *IOSScepCertificateProfileRequest) Update(ctx context.Context, reqObj *IOSScepCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSScepCertificateProfile
func (r *IOSScepCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSSingleSignOnExtensionRequestBuilder is request builder for IOSSingleSignOnExtension
type IOSSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSSingleSignOnExtensionRequest
func (b *IOSSingleSignOnExtensionRequestBuilder) Request() *IOSSingleSignOnExtensionRequest {
	return &IOSSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSSingleSignOnExtensionRequest is request for IOSSingleSignOnExtension
type IOSSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for IOSSingleSignOnExtension
func (r *IOSSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *IOSSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSSingleSignOnExtension
func (r *IOSSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *IOSSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSSingleSignOnExtension
func (r *IOSSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSSingleSignOnSettingsRequestBuilder is request builder for IOSSingleSignOnSettings
type IOSSingleSignOnSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSSingleSignOnSettingsRequest
func (b *IOSSingleSignOnSettingsRequestBuilder) Request() *IOSSingleSignOnSettingsRequest {
	return &IOSSingleSignOnSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSSingleSignOnSettingsRequest is request for IOSSingleSignOnSettings
type IOSSingleSignOnSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSSingleSignOnSettings
func (r *IOSSingleSignOnSettingsRequest) Get(ctx context.Context) (resObj *IOSSingleSignOnSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSSingleSignOnSettings
func (r *IOSSingleSignOnSettingsRequest) Update(ctx context.Context, reqObj *IOSSingleSignOnSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSSingleSignOnSettings
func (r *IOSSingleSignOnSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSStoreAppRequestBuilder is request builder for IOSStoreApp
type IOSStoreAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSStoreAppRequest
func (b *IOSStoreAppRequestBuilder) Request() *IOSStoreAppRequest {
	return &IOSStoreAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSStoreAppRequest is request for IOSStoreApp
type IOSStoreAppRequest struct{ BaseRequest }

// Get performs GET request for IOSStoreApp
func (r *IOSStoreAppRequest) Get(ctx context.Context) (resObj *IOSStoreApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSStoreApp
func (r *IOSStoreAppRequest) Update(ctx context.Context, reqObj *IOSStoreApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSStoreApp
func (r *IOSStoreAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSStoreAppAssignmentSettingsRequestBuilder is request builder for IOSStoreAppAssignmentSettings
type IOSStoreAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSStoreAppAssignmentSettingsRequest
func (b *IOSStoreAppAssignmentSettingsRequestBuilder) Request() *IOSStoreAppAssignmentSettingsRequest {
	return &IOSStoreAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSStoreAppAssignmentSettingsRequest is request for IOSStoreAppAssignmentSettings
type IOSStoreAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSStoreAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSStoreAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSTrustedRootCertificateRequestBuilder is request builder for IOSTrustedRootCertificate
type IOSTrustedRootCertificateRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSTrustedRootCertificateRequest
func (b *IOSTrustedRootCertificateRequestBuilder) Request() *IOSTrustedRootCertificateRequest {
	return &IOSTrustedRootCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSTrustedRootCertificateRequest is request for IOSTrustedRootCertificate
type IOSTrustedRootCertificateRequest struct{ BaseRequest }

// Get performs GET request for IOSTrustedRootCertificate
func (r *IOSTrustedRootCertificateRequest) Get(ctx context.Context) (resObj *IOSTrustedRootCertificate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSTrustedRootCertificate
func (r *IOSTrustedRootCertificateRequest) Update(ctx context.Context, reqObj *IOSTrustedRootCertificate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSTrustedRootCertificate
func (r *IOSTrustedRootCertificateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSUpdateConfigurationRequestBuilder is request builder for IOSUpdateConfiguration
type IOSUpdateConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSUpdateConfigurationRequest
func (b *IOSUpdateConfigurationRequestBuilder) Request() *IOSUpdateConfigurationRequest {
	return &IOSUpdateConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSUpdateConfigurationRequest is request for IOSUpdateConfiguration
type IOSUpdateConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Get(ctx context.Context) (resObj *IOSUpdateConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Update(ctx context.Context, reqObj *IOSUpdateConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSUpdateDeviceStatusRequestBuilder is request builder for IOSUpdateDeviceStatus
type IOSUpdateDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSUpdateDeviceStatusRequest
func (b *IOSUpdateDeviceStatusRequestBuilder) Request() *IOSUpdateDeviceStatusRequest {
	return &IOSUpdateDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSUpdateDeviceStatusRequest is request for IOSUpdateDeviceStatus
type IOSUpdateDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Get(ctx context.Context) (resObj *IOSUpdateDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Update(ctx context.Context, reqObj *IOSUpdateDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPNConfigurationRequestBuilder is request builder for IOSVPNConfiguration
type IOSVPNConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPNConfigurationRequest
func (b *IOSVPNConfigurationRequestBuilder) Request() *IOSVPNConfigurationRequest {
	return &IOSVPNConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPNConfigurationRequest is request for IOSVPNConfiguration
type IOSVPNConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSVPNConfiguration
func (r *IOSVPNConfigurationRequest) Get(ctx context.Context) (resObj *IOSVPNConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPNConfiguration
func (r *IOSVPNConfigurationRequest) Update(ctx context.Context, reqObj *IOSVPNConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPNConfiguration
func (r *IOSVPNConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPNSecurityAssociationParametersRequestBuilder is request builder for IOSVPNSecurityAssociationParameters
type IOSVPNSecurityAssociationParametersRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPNSecurityAssociationParametersRequest
func (b *IOSVPNSecurityAssociationParametersRequestBuilder) Request() *IOSVPNSecurityAssociationParametersRequest {
	return &IOSVPNSecurityAssociationParametersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPNSecurityAssociationParametersRequest is request for IOSVPNSecurityAssociationParameters
type IOSVPNSecurityAssociationParametersRequest struct{ BaseRequest }

// Get performs GET request for IOSVPNSecurityAssociationParameters
func (r *IOSVPNSecurityAssociationParametersRequest) Get(ctx context.Context) (resObj *IOSVPNSecurityAssociationParameters, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPNSecurityAssociationParameters
func (r *IOSVPNSecurityAssociationParametersRequest) Update(ctx context.Context, reqObj *IOSVPNSecurityAssociationParameters) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPNSecurityAssociationParameters
func (r *IOSVPNSecurityAssociationParametersRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppRequestBuilder is request builder for IOSVPPApp
type IOSVPPAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppRequest
func (b *IOSVPPAppRequestBuilder) Request() *IOSVPPAppRequest {
	return &IOSVPPAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppRequest is request for IOSVPPApp
type IOSVPPAppRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPApp
func (r *IOSVPPAppRequest) Get(ctx context.Context) (resObj *IOSVPPApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPApp
func (r *IOSVPPAppRequest) Update(ctx context.Context, reqObj *IOSVPPApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPApp
func (r *IOSVPPAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppAssignedDeviceLicenseRequestBuilder is request builder for IOSVPPAppAssignedDeviceLicense
type IOSVPPAppAssignedDeviceLicenseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppAssignedDeviceLicenseRequest
func (b *IOSVPPAppAssignedDeviceLicenseRequestBuilder) Request() *IOSVPPAppAssignedDeviceLicenseRequest {
	return &IOSVPPAppAssignedDeviceLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppAssignedDeviceLicenseRequest is request for IOSVPPAppAssignedDeviceLicense
type IOSVPPAppAssignedDeviceLicenseRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppAssignedDeviceLicense
func (r *IOSVPPAppAssignedDeviceLicenseRequest) Get(ctx context.Context) (resObj *IOSVPPAppAssignedDeviceLicense, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppAssignedDeviceLicense
func (r *IOSVPPAppAssignedDeviceLicenseRequest) Update(ctx context.Context, reqObj *IOSVPPAppAssignedDeviceLicense) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppAssignedDeviceLicense
func (r *IOSVPPAppAssignedDeviceLicenseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppAssignedLicenseRequestBuilder is request builder for IOSVPPAppAssignedLicense
type IOSVPPAppAssignedLicenseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppAssignedLicenseRequest
func (b *IOSVPPAppAssignedLicenseRequestBuilder) Request() *IOSVPPAppAssignedLicenseRequest {
	return &IOSVPPAppAssignedLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppAssignedLicenseRequest is request for IOSVPPAppAssignedLicense
type IOSVPPAppAssignedLicenseRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppAssignedLicense
func (r *IOSVPPAppAssignedLicenseRequest) Get(ctx context.Context) (resObj *IOSVPPAppAssignedLicense, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppAssignedLicense
func (r *IOSVPPAppAssignedLicenseRequest) Update(ctx context.Context, reqObj *IOSVPPAppAssignedLicense) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppAssignedLicense
func (r *IOSVPPAppAssignedLicenseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppAssignedUserLicenseRequestBuilder is request builder for IOSVPPAppAssignedUserLicense
type IOSVPPAppAssignedUserLicenseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppAssignedUserLicenseRequest
func (b *IOSVPPAppAssignedUserLicenseRequestBuilder) Request() *IOSVPPAppAssignedUserLicenseRequest {
	return &IOSVPPAppAssignedUserLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppAssignedUserLicenseRequest is request for IOSVPPAppAssignedUserLicense
type IOSVPPAppAssignedUserLicenseRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppAssignedUserLicense
func (r *IOSVPPAppAssignedUserLicenseRequest) Get(ctx context.Context) (resObj *IOSVPPAppAssignedUserLicense, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppAssignedUserLicense
func (r *IOSVPPAppAssignedUserLicenseRequest) Update(ctx context.Context, reqObj *IOSVPPAppAssignedUserLicense) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppAssignedUserLicense
func (r *IOSVPPAppAssignedUserLicenseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppAssignmentSettingsRequestBuilder is request builder for IOSVPPAppAssignmentSettings
type IOSVPPAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppAssignmentSettingsRequest
func (b *IOSVPPAppAssignmentSettingsRequestBuilder) Request() *IOSVPPAppAssignmentSettingsRequest {
	return &IOSVPPAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppAssignmentSettingsRequest is request for IOSVPPAppAssignmentSettings
type IOSVPPAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSVPPAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSVPPAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppRevokeLicensesActionResultRequestBuilder is request builder for IOSVPPAppRevokeLicensesActionResult
type IOSVPPAppRevokeLicensesActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppRevokeLicensesActionResultRequest
func (b *IOSVPPAppRevokeLicensesActionResultRequestBuilder) Request() *IOSVPPAppRevokeLicensesActionResultRequest {
	return &IOSVPPAppRevokeLicensesActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppRevokeLicensesActionResultRequest is request for IOSVPPAppRevokeLicensesActionResult
type IOSVPPAppRevokeLicensesActionResultRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppRevokeLicensesActionResult
func (r *IOSVPPAppRevokeLicensesActionResultRequest) Get(ctx context.Context) (resObj *IOSVPPAppRevokeLicensesActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppRevokeLicensesActionResult
func (r *IOSVPPAppRevokeLicensesActionResultRequest) Update(ctx context.Context, reqObj *IOSVPPAppRevokeLicensesActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppRevokeLicensesActionResult
func (r *IOSVPPAppRevokeLicensesActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPEBookRequestBuilder is request builder for IOSVPPEBook
type IOSVPPEBookRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPEBookRequest
func (b *IOSVPPEBookRequestBuilder) Request() *IOSVPPEBookRequest {
	return &IOSVPPEBookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPEBookRequest is request for IOSVPPEBook
type IOSVPPEBookRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Get(ctx context.Context) (resObj *IOSVPPEBook, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Update(ctx context.Context, reqObj *IOSVPPEBook) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPEBookAssignmentRequestBuilder is request builder for IOSVPPEBookAssignment
type IOSVPPEBookAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPEBookAssignmentRequest
func (b *IOSVPPEBookAssignmentRequestBuilder) Request() *IOSVPPEBookAssignmentRequest {
	return &IOSVPPEBookAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPEBookAssignmentRequest is request for IOSVPPEBookAssignment
type IOSVPPEBookAssignmentRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Get(ctx context.Context) (resObj *IOSVPPEBookAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Update(ctx context.Context, reqObj *IOSVPPEBookAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSWebContentFilterAutoFilterRequestBuilder is request builder for IOSWebContentFilterAutoFilter
type IOSWebContentFilterAutoFilterRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSWebContentFilterAutoFilterRequest
func (b *IOSWebContentFilterAutoFilterRequestBuilder) Request() *IOSWebContentFilterAutoFilterRequest {
	return &IOSWebContentFilterAutoFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSWebContentFilterAutoFilterRequest is request for IOSWebContentFilterAutoFilter
type IOSWebContentFilterAutoFilterRequest struct{ BaseRequest }

// Get performs GET request for IOSWebContentFilterAutoFilter
func (r *IOSWebContentFilterAutoFilterRequest) Get(ctx context.Context) (resObj *IOSWebContentFilterAutoFilter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSWebContentFilterAutoFilter
func (r *IOSWebContentFilterAutoFilterRequest) Update(ctx context.Context, reqObj *IOSWebContentFilterAutoFilter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSWebContentFilterAutoFilter
func (r *IOSWebContentFilterAutoFilterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSWebContentFilterBaseRequestBuilder is request builder for IOSWebContentFilterBase
type IOSWebContentFilterBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSWebContentFilterBaseRequest
func (b *IOSWebContentFilterBaseRequestBuilder) Request() *IOSWebContentFilterBaseRequest {
	return &IOSWebContentFilterBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSWebContentFilterBaseRequest is request for IOSWebContentFilterBase
type IOSWebContentFilterBaseRequest struct{ BaseRequest }

// Get performs GET request for IOSWebContentFilterBase
func (r *IOSWebContentFilterBaseRequest) Get(ctx context.Context) (resObj *IOSWebContentFilterBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSWebContentFilterBase
func (r *IOSWebContentFilterBaseRequest) Update(ctx context.Context, reqObj *IOSWebContentFilterBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSWebContentFilterBase
func (r *IOSWebContentFilterBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSWebContentFilterSpecificWebsitesAccessRequestBuilder is request builder for IOSWebContentFilterSpecificWebsitesAccess
type IOSWebContentFilterSpecificWebsitesAccessRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSWebContentFilterSpecificWebsitesAccessRequest
func (b *IOSWebContentFilterSpecificWebsitesAccessRequestBuilder) Request() *IOSWebContentFilterSpecificWebsitesAccessRequest {
	return &IOSWebContentFilterSpecificWebsitesAccessRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSWebContentFilterSpecificWebsitesAccessRequest is request for IOSWebContentFilterSpecificWebsitesAccess
type IOSWebContentFilterSpecificWebsitesAccessRequest struct{ BaseRequest }

// Get performs GET request for IOSWebContentFilterSpecificWebsitesAccess
func (r *IOSWebContentFilterSpecificWebsitesAccessRequest) Get(ctx context.Context) (resObj *IOSWebContentFilterSpecificWebsitesAccess, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSWebContentFilterSpecificWebsitesAccess
func (r *IOSWebContentFilterSpecificWebsitesAccessRequest) Update(ctx context.Context, reqObj *IOSWebContentFilterSpecificWebsitesAccess) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSWebContentFilterSpecificWebsitesAccess
func (r *IOSWebContentFilterSpecificWebsitesAccessRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSWiFiConfigurationRequestBuilder is request builder for IOSWiFiConfiguration
type IOSWiFiConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSWiFiConfigurationRequest
func (b *IOSWiFiConfigurationRequestBuilder) Request() *IOSWiFiConfigurationRequest {
	return &IOSWiFiConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSWiFiConfigurationRequest is request for IOSWiFiConfiguration
type IOSWiFiConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSWiFiConfiguration
func (r *IOSWiFiConfigurationRequest) Get(ctx context.Context) (resObj *IOSWiFiConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSWiFiConfiguration
func (r *IOSWiFiConfigurationRequest) Update(ctx context.Context, reqObj *IOSWiFiConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSWiFiConfiguration
func (r *IOSWiFiConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceAppManagementIOSLobAppProvisioningConfigurationsCollectionRequestBuilder) HasPayloadLinks(reqObj *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequestParameter) *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequestBuilder {
	bb := &IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequestBuilder) Request() *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest {
	return &IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *IOSLobAppProvisioningConfigurationCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type IOSManagedAppProtectionCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceAppManagementIOSManagedAppProtectionsCollectionRequestBuilder) HasPayloadLinks(reqObj *IOSManagedAppProtectionCollectionHasPayloadLinksRequestParameter) *IOSManagedAppProtectionCollectionHasPayloadLinksRequestBuilder {
	bb := &IOSManagedAppProtectionCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSManagedAppProtectionCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *IOSManagedAppProtectionCollectionHasPayloadLinksRequestBuilder) Request() *IOSManagedAppProtectionCollectionHasPayloadLinksRequest {
	return &IOSManagedAppProtectionCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSManagedAppProtectionCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *IOSManagedAppProtectionCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *IOSManagedAppProtectionCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type IOSLobAppProvisioningConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *IOSLobAppProvisioningConfigurationRequestBuilder) Assign(reqObj *IOSLobAppProvisioningConfigurationAssignRequestParameter) *IOSLobAppProvisioningConfigurationAssignRequestBuilder {
	bb := &IOSLobAppProvisioningConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSLobAppProvisioningConfigurationAssignRequest struct{ BaseRequest }

func (b *IOSLobAppProvisioningConfigurationAssignRequestBuilder) Request() *IOSLobAppProvisioningConfigurationAssignRequest {
	return &IOSLobAppProvisioningConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSLobAppProvisioningConfigurationAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type IOSVPPAppRevokeAllLicensesRequestBuilder struct{ BaseRequestBuilder }

// RevokeAllLicenses action undocumentedrav
func (b *IOSVPPAppRequestBuilder) RevokeAllLicenses(reqObj *IOSVPPAppRevokeAllLicensesRequestParameter) *IOSVPPAppRevokeAllLicensesRequestBuilder {
	bb := &IOSVPPAppRevokeAllLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeAllLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSVPPAppRevokeAllLicensesRequest struct{ BaseRequest }

func (b *IOSVPPAppRevokeAllLicensesRequestBuilder) Request() *IOSVPPAppRevokeAllLicensesRequest {
	return &IOSVPPAppRevokeAllLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSVPPAppRevokeAllLicensesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type IOSVPPAppRevokeDeviceLicenseRequestBuilder struct{ BaseRequestBuilder }

// RevokeDeviceLicense action undocumentedrav
func (b *IOSVPPAppRequestBuilder) RevokeDeviceLicense(reqObj *IOSVPPAppRevokeDeviceLicenseRequestParameter) *IOSVPPAppRevokeDeviceLicenseRequestBuilder {
	bb := &IOSVPPAppRevokeDeviceLicenseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeDeviceLicense"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSVPPAppRevokeDeviceLicenseRequest struct{ BaseRequest }

func (b *IOSVPPAppRevokeDeviceLicenseRequestBuilder) Request() *IOSVPPAppRevokeDeviceLicenseRequest {
	return &IOSVPPAppRevokeDeviceLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSVPPAppRevokeDeviceLicenseRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type IOSVPPAppRevokeUserLicenseRequestBuilder struct{ BaseRequestBuilder }

// RevokeUserLicense action undocumentedrav
func (b *IOSVPPAppRequestBuilder) RevokeUserLicense(reqObj *IOSVPPAppRevokeUserLicenseRequestParameter) *IOSVPPAppRevokeUserLicenseRequestBuilder {
	bb := &IOSVPPAppRevokeUserLicenseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeUserLicense"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IOSVPPAppRevokeUserLicenseRequest struct{ BaseRequest }

func (b *IOSVPPAppRevokeUserLicenseRequestBuilder) Request() *IOSVPPAppRevokeUserLicenseRequest {
	return &IOSVPPAppRevokeUserLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IOSVPPAppRevokeUserLicenseRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
