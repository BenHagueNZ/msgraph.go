// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// DepOnboardingSettingGenerateEncryptionPublicKeyRequestParameter undocumented
type DepOnboardingSettingGenerateEncryptionPublicKeyRequestParameter struct {
}

// DepOnboardingSettingShareForSchoolDataSyncServiceRequestParameter undocumented
type DepOnboardingSettingShareForSchoolDataSyncServiceRequestParameter struct {
}

// DepOnboardingSettingSyncWithAppleDeviceEnrollmentProgramRequestParameter undocumented
type DepOnboardingSettingSyncWithAppleDeviceEnrollmentProgramRequestParameter struct {
}

// DepOnboardingSettingUnshareForSchoolDataSyncServiceRequestParameter undocumented
type DepOnboardingSettingUnshareForSchoolDataSyncServiceRequestParameter struct {
}

// DepOnboardingSettingUploadDepTokenRequestParameter undocumented
type DepOnboardingSettingUploadDepTokenRequestParameter struct {
	// AppleID undocumented
	AppleID *string `json:"appleId,omitempty"`
	// DepToken undocumented
	DepToken *string `json:"depToken,omitempty"`
}

// DefaultIOSEnrollmentProfile is navigation property rn
func (b *DepOnboardingSettingRequestBuilder) DefaultIOSEnrollmentProfile() *DepIOSEnrollmentProfileRequestBuilder {
	bb := &DepIOSEnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/defaultIosEnrollmentProfile"
	return bb
}

// DefaultMacOsEnrollmentProfile is navigation property rn
func (b *DepOnboardingSettingRequestBuilder) DefaultMacOsEnrollmentProfile() *DepMacOSEnrollmentProfileRequestBuilder {
	bb := &DepMacOSEnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/defaultMacOsEnrollmentProfile"
	return bb
}

// EnrollmentProfiles returns request builder for EnrollmentProfile collection
func (b *DepOnboardingSettingRequestBuilder) EnrollmentProfiles() *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder {
	bb := &DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/enrollmentProfiles"
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder is request builder for EnrollmentProfile collection rcn
type DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for EnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) Request() *DepOnboardingSettingEnrollmentProfilesCollectionRequest {
	return &DepOnboardingSettingEnrollmentProfilesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for EnrollmentProfile item
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) ID(id string) *EnrollmentProfileRequestBuilder {
	bb := &EnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionRequest is request for EnrollmentProfile collection
type DepOnboardingSettingEnrollmentProfilesCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for EnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]EnrollmentProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EnrollmentProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []EnrollmentProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for EnrollmentProfile collection, max N pages
func (r *DepOnboardingSettingEnrollmentProfilesCollectionRequest) GetN(ctx context.Context, n int) ([]EnrollmentProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for EnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionRequest) Get(ctx context.Context) ([]EnrollmentProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for EnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionRequest) Add(ctx context.Context, reqObj *EnrollmentProfile) (resObj *EnrollmentProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// ImportedAppleDeviceIdentities returns request builder for ImportedAppleDeviceIdentity collection
func (b *DepOnboardingSettingRequestBuilder) ImportedAppleDeviceIdentities() *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder {
	bb := &DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/importedAppleDeviceIdentities"
	return bb
}

// DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder is request builder for ImportedAppleDeviceIdentity collection rcn
type DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for ImportedAppleDeviceIdentity collection
func (b *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder) Request() *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest {
	return &DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for ImportedAppleDeviceIdentity item
func (b *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequestBuilder) ID(id string) *ImportedAppleDeviceIdentityRequestBuilder {
	bb := &ImportedAppleDeviceIdentityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest is request for ImportedAppleDeviceIdentity collection
type DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for ImportedAppleDeviceIdentity collection
func (r *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ImportedAppleDeviceIdentity, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ImportedAppleDeviceIdentity
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ImportedAppleDeviceIdentity
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for ImportedAppleDeviceIdentity collection, max N pages
func (r *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest) GetN(ctx context.Context, n int) ([]ImportedAppleDeviceIdentity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for ImportedAppleDeviceIdentity collection
func (r *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest) Get(ctx context.Context) ([]ImportedAppleDeviceIdentity, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for ImportedAppleDeviceIdentity collection
func (r *DepOnboardingSettingImportedAppleDeviceIdentitiesCollectionRequest) Add(ctx context.Context, reqObj *ImportedAppleDeviceIdentity) (resObj *ImportedAppleDeviceIdentity, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// DepEnrollmentBaseProfile returns request builder for DepEnrollmentBaseProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) DepEnrollmentBaseProfile() *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder {
	bb := &DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder is request builder for DepEnrollmentBaseProfile collection rcn
type DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for DepEnrollmentBaseProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder) Request() *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest {
	return &DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for DepEnrollmentBaseProfile item
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequestBuilder) ID(id string) *DepEnrollmentBaseProfileRequestBuilder {
	bb := &DepEnrollmentBaseProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest is request for DepEnrollmentBaseProfile collection
type DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for DepEnrollmentBaseProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DepEnrollmentBaseProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DepEnrollmentBaseProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DepEnrollmentBaseProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for DepEnrollmentBaseProfile collection, max N pages
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest) GetN(ctx context.Context, n int) ([]DepEnrollmentBaseProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for DepEnrollmentBaseProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest) Get(ctx context.Context) ([]DepEnrollmentBaseProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for DepEnrollmentBaseProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentBaseProfileCollectionRequest) Add(ctx context.Context, reqObj *DepEnrollmentBaseProfile) (resObj *DepEnrollmentBaseProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// DepEnrollmentProfile returns request builder for DepEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) DepEnrollmentProfile() *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder {
	bb := &DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder is request builder for DepEnrollmentProfile collection rcn
type DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for DepEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder) Request() *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest {
	return &DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for DepEnrollmentProfile item
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequestBuilder) ID(id string) *DepEnrollmentProfileRequestBuilder {
	bb := &DepEnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest is request for DepEnrollmentProfile collection
type DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for DepEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DepEnrollmentProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DepEnrollmentProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DepEnrollmentProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for DepEnrollmentProfile collection, max N pages
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest) GetN(ctx context.Context, n int) ([]DepEnrollmentProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for DepEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest) Get(ctx context.Context) ([]DepEnrollmentProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for DepEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepEnrollmentProfileCollectionRequest) Add(ctx context.Context, reqObj *DepEnrollmentProfile) (resObj *DepEnrollmentProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// DepIOSEnrollmentProfile returns request builder for DepIOSEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) DepIOSEnrollmentProfile() *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder {
	bb := &DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder is request builder for DepIOSEnrollmentProfile collection rcn
type DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for DepIOSEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder) Request() *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest {
	return &DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for DepIOSEnrollmentProfile item
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequestBuilder) ID(id string) *DepIOSEnrollmentProfileRequestBuilder {
	bb := &DepIOSEnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest is request for DepIOSEnrollmentProfile collection
type DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for DepIOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DepIOSEnrollmentProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DepIOSEnrollmentProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DepIOSEnrollmentProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for DepIOSEnrollmentProfile collection, max N pages
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest) GetN(ctx context.Context, n int) ([]DepIOSEnrollmentProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for DepIOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest) Get(ctx context.Context) ([]DepIOSEnrollmentProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for DepIOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepIOSEnrollmentProfileCollectionRequest) Add(ctx context.Context, reqObj *DepIOSEnrollmentProfile) (resObj *DepIOSEnrollmentProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// DepMacOSEnrollmentProfile returns request builder for DepMacOSEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionRequestBuilder) DepMacOSEnrollmentProfile() *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder {
	bb := &DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder is request builder for DepMacOSEnrollmentProfile collection rcn
type DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for DepMacOSEnrollmentProfile collection
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder) Request() *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest {
	return &DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for DepMacOSEnrollmentProfile item
func (b *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequestBuilder) ID(id string) *DepMacOSEnrollmentProfileRequestBuilder {
	bb := &DepMacOSEnrollmentProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest is request for DepMacOSEnrollmentProfile collection
type DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for DepMacOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DepMacOSEnrollmentProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DepMacOSEnrollmentProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DepMacOSEnrollmentProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for DepMacOSEnrollmentProfile collection, max N pages
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest) GetN(ctx context.Context, n int) ([]DepMacOSEnrollmentProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for DepMacOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest) Get(ctx context.Context) ([]DepMacOSEnrollmentProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for DepMacOSEnrollmentProfile collection
func (r *DepOnboardingSettingEnrollmentProfilesCollectionDepMacOSEnrollmentProfileCollectionRequest) Add(ctx context.Context, reqObj *DepMacOSEnrollmentProfile) (resObj *DepMacOSEnrollmentProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Entity is navigation property rn
func (b *DepOnboardingSettingRequestBuilder) Entity() *EntityRequestBuilder {
	bb := &EntityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Entity"
	return bb
}
