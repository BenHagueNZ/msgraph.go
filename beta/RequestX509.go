// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// X509CertificateAuthenticationMethodConfigurationRequestBuilder is request builder for X509CertificateAuthenticationMethodConfiguration
type X509CertificateAuthenticationMethodConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns X509CertificateAuthenticationMethodConfigurationRequest
func (b *X509CertificateAuthenticationMethodConfigurationRequestBuilder) Request() *X509CertificateAuthenticationMethodConfigurationRequest {
	return &X509CertificateAuthenticationMethodConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// X509CertificateAuthenticationMethodConfigurationRequest is request for X509CertificateAuthenticationMethodConfiguration
type X509CertificateAuthenticationMethodConfigurationRequest struct{ BaseRequest }

// Get performs GET request for X509CertificateAuthenticationMethodConfiguration
func (r *X509CertificateAuthenticationMethodConfigurationRequest) Get(ctx context.Context) (resObj *X509CertificateAuthenticationMethodConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for X509CertificateAuthenticationMethodConfiguration
func (r *X509CertificateAuthenticationMethodConfigurationRequest) Update(ctx context.Context, reqObj *X509CertificateAuthenticationMethodConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for X509CertificateAuthenticationMethodConfiguration
func (r *X509CertificateAuthenticationMethodConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// X509CertificateAuthenticationModeConfigurationRequestBuilder is request builder for X509CertificateAuthenticationModeConfiguration
type X509CertificateAuthenticationModeConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns X509CertificateAuthenticationModeConfigurationRequest
func (b *X509CertificateAuthenticationModeConfigurationRequestBuilder) Request() *X509CertificateAuthenticationModeConfigurationRequest {
	return &X509CertificateAuthenticationModeConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// X509CertificateAuthenticationModeConfigurationRequest is request for X509CertificateAuthenticationModeConfiguration
type X509CertificateAuthenticationModeConfigurationRequest struct{ BaseRequest }

// Get performs GET request for X509CertificateAuthenticationModeConfiguration
func (r *X509CertificateAuthenticationModeConfigurationRequest) Get(ctx context.Context) (resObj *X509CertificateAuthenticationModeConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for X509CertificateAuthenticationModeConfiguration
func (r *X509CertificateAuthenticationModeConfigurationRequest) Update(ctx context.Context, reqObj *X509CertificateAuthenticationModeConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for X509CertificateAuthenticationModeConfiguration
func (r *X509CertificateAuthenticationModeConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// X509CertificateRuleRequestBuilder is request builder for X509CertificateRule
type X509CertificateRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns X509CertificateRuleRequest
func (b *X509CertificateRuleRequestBuilder) Request() *X509CertificateRuleRequest {
	return &X509CertificateRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// X509CertificateRuleRequest is request for X509CertificateRule
type X509CertificateRuleRequest struct{ BaseRequest }

// Get performs GET request for X509CertificateRule
func (r *X509CertificateRuleRequest) Get(ctx context.Context) (resObj *X509CertificateRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for X509CertificateRule
func (r *X509CertificateRuleRequest) Update(ctx context.Context, reqObj *X509CertificateRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for X509CertificateRule
func (r *X509CertificateRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// X509CertificateUserBindingRequestBuilder is request builder for X509CertificateUserBinding
type X509CertificateUserBindingRequestBuilder struct{ BaseRequestBuilder }

// Request returns X509CertificateUserBindingRequest
func (b *X509CertificateUserBindingRequestBuilder) Request() *X509CertificateUserBindingRequest {
	return &X509CertificateUserBindingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// X509CertificateUserBindingRequest is request for X509CertificateUserBinding
type X509CertificateUserBindingRequest struct{ BaseRequest }

// Get performs GET request for X509CertificateUserBinding
func (r *X509CertificateUserBindingRequest) Get(ctx context.Context) (resObj *X509CertificateUserBinding, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for X509CertificateUserBinding
func (r *X509CertificateUserBindingRequest) Update(ctx context.Context, reqObj *X509CertificateUserBinding) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for X509CertificateUserBinding
func (r *X509CertificateUserBindingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
