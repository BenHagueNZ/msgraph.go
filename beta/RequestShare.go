// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ShareActionRequestBuilder is request builder for ShareAction
type ShareActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ShareActionRequest
func (b *ShareActionRequestBuilder) Request() *ShareActionRequest {
	return &ShareActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ShareActionRequest is request for ShareAction
type ShareActionRequest struct{ BaseRequest }

// Get performs GET request for ShareAction
func (r *ShareActionRequest) Get(ctx context.Context) (resObj *ShareAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ShareAction
func (r *ShareActionRequest) Update(ctx context.Context, reqObj *ShareAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ShareAction
func (r *ShareActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharePointIdentityRequestBuilder is request builder for SharePointIdentity
type SharePointIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharePointIdentityRequest
func (b *SharePointIdentityRequestBuilder) Request() *SharePointIdentityRequest {
	return &SharePointIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharePointIdentityRequest is request for SharePointIdentity
type SharePointIdentityRequest struct{ BaseRequest }

// Get performs GET request for SharePointIdentity
func (r *SharePointIdentityRequest) Get(ctx context.Context) (resObj *SharePointIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharePointIdentity
func (r *SharePointIdentityRequest) Update(ctx context.Context, reqObj *SharePointIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharePointIdentity
func (r *SharePointIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharePointIdentitySetRequestBuilder is request builder for SharePointIdentitySet
type SharePointIdentitySetRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharePointIdentitySetRequest
func (b *SharePointIdentitySetRequestBuilder) Request() *SharePointIdentitySetRequest {
	return &SharePointIdentitySetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharePointIdentitySetRequest is request for SharePointIdentitySet
type SharePointIdentitySetRequest struct{ BaseRequest }

// Get performs GET request for SharePointIdentitySet
func (r *SharePointIdentitySetRequest) Get(ctx context.Context) (resObj *SharePointIdentitySet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharePointIdentitySet
func (r *SharePointIdentitySetRequest) Update(ctx context.Context, reqObj *SharePointIdentitySet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharePointIdentitySet
func (r *SharePointIdentitySetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharePointOneDriveOptionsRequestBuilder is request builder for SharePointOneDriveOptions
type SharePointOneDriveOptionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharePointOneDriveOptionsRequest
func (b *SharePointOneDriveOptionsRequestBuilder) Request() *SharePointOneDriveOptionsRequest {
	return &SharePointOneDriveOptionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharePointOneDriveOptionsRequest is request for SharePointOneDriveOptions
type SharePointOneDriveOptionsRequest struct{ BaseRequest }

// Get performs GET request for SharePointOneDriveOptions
func (r *SharePointOneDriveOptionsRequest) Get(ctx context.Context) (resObj *SharePointOneDriveOptions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharePointOneDriveOptions
func (r *SharePointOneDriveOptionsRequest) Update(ctx context.Context, reqObj *SharePointOneDriveOptions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharePointOneDriveOptions
func (r *SharePointOneDriveOptionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
