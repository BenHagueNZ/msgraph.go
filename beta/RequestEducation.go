// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// EducationAssignmentRequestBuilder is request builder for EducationAssignment
type EducationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentRequest
func (b *EducationAssignmentRequestBuilder) Request() *EducationAssignmentRequest {
	return &EducationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentRequest is request for EducationAssignment
type EducationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignment
func (r *EducationAssignmentRequest) Get(ctx context.Context) (resObj *EducationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignment
func (r *EducationAssignmentRequest) Update(ctx context.Context, reqObj *EducationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignment
func (r *EducationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentClassRecipientRequestBuilder is request builder for EducationAssignmentClassRecipient
type EducationAssignmentClassRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentClassRecipientRequest
func (b *EducationAssignmentClassRecipientRequestBuilder) Request() *EducationAssignmentClassRecipientRequest {
	return &EducationAssignmentClassRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentClassRecipientRequest is request for EducationAssignmentClassRecipient
type EducationAssignmentClassRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentClassRecipient
func (r *EducationAssignmentClassRecipientRequest) Get(ctx context.Context) (resObj *EducationAssignmentClassRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentClassRecipient
func (r *EducationAssignmentClassRecipientRequest) Update(ctx context.Context, reqObj *EducationAssignmentClassRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentClassRecipient
func (r *EducationAssignmentClassRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentDefaultsRequestBuilder is request builder for EducationAssignmentDefaults
type EducationAssignmentDefaultsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentDefaultsRequest
func (b *EducationAssignmentDefaultsRequestBuilder) Request() *EducationAssignmentDefaultsRequest {
	return &EducationAssignmentDefaultsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentDefaultsRequest is request for EducationAssignmentDefaults
type EducationAssignmentDefaultsRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentDefaults
func (r *EducationAssignmentDefaultsRequest) Get(ctx context.Context) (resObj *EducationAssignmentDefaults, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentDefaults
func (r *EducationAssignmentDefaultsRequest) Update(ctx context.Context, reqObj *EducationAssignmentDefaults) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentDefaults
func (r *EducationAssignmentDefaultsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentGradeRequestBuilder is request builder for EducationAssignmentGrade
type EducationAssignmentGradeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentGradeRequest
func (b *EducationAssignmentGradeRequestBuilder) Request() *EducationAssignmentGradeRequest {
	return &EducationAssignmentGradeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentGradeRequest is request for EducationAssignmentGrade
type EducationAssignmentGradeRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentGrade
func (r *EducationAssignmentGradeRequest) Get(ctx context.Context) (resObj *EducationAssignmentGrade, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentGrade
func (r *EducationAssignmentGradeRequest) Update(ctx context.Context, reqObj *EducationAssignmentGrade) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentGrade
func (r *EducationAssignmentGradeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentGradeTypeRequestBuilder is request builder for EducationAssignmentGradeType
type EducationAssignmentGradeTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentGradeTypeRequest
func (b *EducationAssignmentGradeTypeRequestBuilder) Request() *EducationAssignmentGradeTypeRequest {
	return &EducationAssignmentGradeTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentGradeTypeRequest is request for EducationAssignmentGradeType
type EducationAssignmentGradeTypeRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentGradeType
func (r *EducationAssignmentGradeTypeRequest) Get(ctx context.Context) (resObj *EducationAssignmentGradeType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentGradeType
func (r *EducationAssignmentGradeTypeRequest) Update(ctx context.Context, reqObj *EducationAssignmentGradeType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentGradeType
func (r *EducationAssignmentGradeTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentGroupRecipientRequestBuilder is request builder for EducationAssignmentGroupRecipient
type EducationAssignmentGroupRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentGroupRecipientRequest
func (b *EducationAssignmentGroupRecipientRequestBuilder) Request() *EducationAssignmentGroupRecipientRequest {
	return &EducationAssignmentGroupRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentGroupRecipientRequest is request for EducationAssignmentGroupRecipient
type EducationAssignmentGroupRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentGroupRecipient
func (r *EducationAssignmentGroupRecipientRequest) Get(ctx context.Context) (resObj *EducationAssignmentGroupRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentGroupRecipient
func (r *EducationAssignmentGroupRecipientRequest) Update(ctx context.Context, reqObj *EducationAssignmentGroupRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentGroupRecipient
func (r *EducationAssignmentGroupRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentIndividualRecipientRequestBuilder is request builder for EducationAssignmentIndividualRecipient
type EducationAssignmentIndividualRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentIndividualRecipientRequest
func (b *EducationAssignmentIndividualRecipientRequestBuilder) Request() *EducationAssignmentIndividualRecipientRequest {
	return &EducationAssignmentIndividualRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentIndividualRecipientRequest is request for EducationAssignmentIndividualRecipient
type EducationAssignmentIndividualRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentIndividualRecipient
func (r *EducationAssignmentIndividualRecipientRequest) Get(ctx context.Context) (resObj *EducationAssignmentIndividualRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentIndividualRecipient
func (r *EducationAssignmentIndividualRecipientRequest) Update(ctx context.Context, reqObj *EducationAssignmentIndividualRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentIndividualRecipient
func (r *EducationAssignmentIndividualRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentPointsGradeRequestBuilder is request builder for EducationAssignmentPointsGrade
type EducationAssignmentPointsGradeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentPointsGradeRequest
func (b *EducationAssignmentPointsGradeRequestBuilder) Request() *EducationAssignmentPointsGradeRequest {
	return &EducationAssignmentPointsGradeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentPointsGradeRequest is request for EducationAssignmentPointsGrade
type EducationAssignmentPointsGradeRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentPointsGrade
func (r *EducationAssignmentPointsGradeRequest) Get(ctx context.Context) (resObj *EducationAssignmentPointsGrade, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentPointsGrade
func (r *EducationAssignmentPointsGradeRequest) Update(ctx context.Context, reqObj *EducationAssignmentPointsGrade) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentPointsGrade
func (r *EducationAssignmentPointsGradeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentPointsGradeTypeRequestBuilder is request builder for EducationAssignmentPointsGradeType
type EducationAssignmentPointsGradeTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentPointsGradeTypeRequest
func (b *EducationAssignmentPointsGradeTypeRequestBuilder) Request() *EducationAssignmentPointsGradeTypeRequest {
	return &EducationAssignmentPointsGradeTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentPointsGradeTypeRequest is request for EducationAssignmentPointsGradeType
type EducationAssignmentPointsGradeTypeRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentPointsGradeType
func (r *EducationAssignmentPointsGradeTypeRequest) Get(ctx context.Context) (resObj *EducationAssignmentPointsGradeType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentPointsGradeType
func (r *EducationAssignmentPointsGradeTypeRequest) Update(ctx context.Context, reqObj *EducationAssignmentPointsGradeType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentPointsGradeType
func (r *EducationAssignmentPointsGradeTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentRecipientRequestBuilder is request builder for EducationAssignmentRecipient
type EducationAssignmentRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentRecipientRequest
func (b *EducationAssignmentRecipientRequestBuilder) Request() *EducationAssignmentRecipientRequest {
	return &EducationAssignmentRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentRecipientRequest is request for EducationAssignmentRecipient
type EducationAssignmentRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentRecipient
func (r *EducationAssignmentRecipientRequest) Get(ctx context.Context) (resObj *EducationAssignmentRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentRecipient
func (r *EducationAssignmentRecipientRequest) Update(ctx context.Context, reqObj *EducationAssignmentRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentRecipient
func (r *EducationAssignmentRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentResourceRequestBuilder is request builder for EducationAssignmentResource
type EducationAssignmentResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentResourceRequest
func (b *EducationAssignmentResourceRequestBuilder) Request() *EducationAssignmentResourceRequest {
	return &EducationAssignmentResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentResourceRequest is request for EducationAssignmentResource
type EducationAssignmentResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentResource
func (r *EducationAssignmentResourceRequest) Get(ctx context.Context) (resObj *EducationAssignmentResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentResource
func (r *EducationAssignmentResourceRequest) Update(ctx context.Context, reqObj *EducationAssignmentResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentResource
func (r *EducationAssignmentResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationAssignmentSettingsRequestBuilder is request builder for EducationAssignmentSettings
type EducationAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationAssignmentSettingsRequest
func (b *EducationAssignmentSettingsRequestBuilder) Request() *EducationAssignmentSettingsRequest {
	return &EducationAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationAssignmentSettingsRequest is request for EducationAssignmentSettings
type EducationAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for EducationAssignmentSettings
func (r *EducationAssignmentSettingsRequest) Get(ctx context.Context) (resObj *EducationAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationAssignmentSettings
func (r *EducationAssignmentSettingsRequest) Update(ctx context.Context, reqObj *EducationAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationAssignmentSettings
func (r *EducationAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationCategoryRequestBuilder is request builder for EducationCategory
type EducationCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationCategoryRequest
func (b *EducationCategoryRequestBuilder) Request() *EducationCategoryRequest {
	return &EducationCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationCategoryRequest is request for EducationCategory
type EducationCategoryRequest struct{ BaseRequest }

// Get performs GET request for EducationCategory
func (r *EducationCategoryRequest) Get(ctx context.Context) (resObj *EducationCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationCategory
func (r *EducationCategoryRequest) Update(ctx context.Context, reqObj *EducationCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationCategory
func (r *EducationCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationClassRequestBuilder is request builder for EducationClass
type EducationClassRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationClassRequest
func (b *EducationClassRequestBuilder) Request() *EducationClassRequest {
	return &EducationClassRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationClassRequest is request for EducationClass
type EducationClassRequest struct{ BaseRequest }

// Get performs GET request for EducationClass
func (r *EducationClassRequest) Get(ctx context.Context) (resObj *EducationClass, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationClass
func (r *EducationClassRequest) Update(ctx context.Context, reqObj *EducationClass) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationClass
func (r *EducationClassRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationCourseRequestBuilder is request builder for EducationCourse
type EducationCourseRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationCourseRequest
func (b *EducationCourseRequestBuilder) Request() *EducationCourseRequest {
	return &EducationCourseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationCourseRequest is request for EducationCourse
type EducationCourseRequest struct{ BaseRequest }

// Get performs GET request for EducationCourse
func (r *EducationCourseRequest) Get(ctx context.Context) (resObj *EducationCourse, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationCourse
func (r *EducationCourseRequest) Update(ctx context.Context, reqObj *EducationCourse) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationCourse
func (r *EducationCourseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationCsvDataProviderRequestBuilder is request builder for EducationCsvDataProvider
type EducationCsvDataProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationCsvDataProviderRequest
func (b *EducationCsvDataProviderRequestBuilder) Request() *EducationCsvDataProviderRequest {
	return &EducationCsvDataProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationCsvDataProviderRequest is request for EducationCsvDataProvider
type EducationCsvDataProviderRequest struct{ BaseRequest }

// Get performs GET request for EducationCsvDataProvider
func (r *EducationCsvDataProviderRequest) Get(ctx context.Context) (resObj *EducationCsvDataProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationCsvDataProvider
func (r *EducationCsvDataProviderRequest) Update(ctx context.Context, reqObj *EducationCsvDataProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationCsvDataProvider
func (r *EducationCsvDataProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationExcelResourceRequestBuilder is request builder for EducationExcelResource
type EducationExcelResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationExcelResourceRequest
func (b *EducationExcelResourceRequestBuilder) Request() *EducationExcelResourceRequest {
	return &EducationExcelResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationExcelResourceRequest is request for EducationExcelResource
type EducationExcelResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationExcelResource
func (r *EducationExcelResourceRequest) Get(ctx context.Context) (resObj *EducationExcelResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationExcelResource
func (r *EducationExcelResourceRequest) Update(ctx context.Context, reqObj *EducationExcelResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationExcelResource
func (r *EducationExcelResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationExternalResourceRequestBuilder is request builder for EducationExternalResource
type EducationExternalResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationExternalResourceRequest
func (b *EducationExternalResourceRequestBuilder) Request() *EducationExternalResourceRequest {
	return &EducationExternalResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationExternalResourceRequest is request for EducationExternalResource
type EducationExternalResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationExternalResource
func (r *EducationExternalResourceRequest) Get(ctx context.Context) (resObj *EducationExternalResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationExternalResource
func (r *EducationExternalResourceRequest) Update(ctx context.Context, reqObj *EducationExternalResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationExternalResource
func (r *EducationExternalResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationFeedbackRequestBuilder is request builder for EducationFeedback
type EducationFeedbackRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationFeedbackRequest
func (b *EducationFeedbackRequestBuilder) Request() *EducationFeedbackRequest {
	return &EducationFeedbackRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationFeedbackRequest is request for EducationFeedback
type EducationFeedbackRequest struct{ BaseRequest }

// Get performs GET request for EducationFeedback
func (r *EducationFeedbackRequest) Get(ctx context.Context) (resObj *EducationFeedback, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationFeedback
func (r *EducationFeedbackRequest) Update(ctx context.Context, reqObj *EducationFeedback) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationFeedback
func (r *EducationFeedbackRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationFeedbackOutcomeRequestBuilder is request builder for EducationFeedbackOutcome
type EducationFeedbackOutcomeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationFeedbackOutcomeRequest
func (b *EducationFeedbackOutcomeRequestBuilder) Request() *EducationFeedbackOutcomeRequest {
	return &EducationFeedbackOutcomeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationFeedbackOutcomeRequest is request for EducationFeedbackOutcome
type EducationFeedbackOutcomeRequest struct{ BaseRequest }

// Get performs GET request for EducationFeedbackOutcome
func (r *EducationFeedbackOutcomeRequest) Get(ctx context.Context) (resObj *EducationFeedbackOutcome, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationFeedbackOutcome
func (r *EducationFeedbackOutcomeRequest) Update(ctx context.Context, reqObj *EducationFeedbackOutcome) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationFeedbackOutcome
func (r *EducationFeedbackOutcomeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationFeedbackResourceOutcomeRequestBuilder is request builder for EducationFeedbackResourceOutcome
type EducationFeedbackResourceOutcomeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationFeedbackResourceOutcomeRequest
func (b *EducationFeedbackResourceOutcomeRequestBuilder) Request() *EducationFeedbackResourceOutcomeRequest {
	return &EducationFeedbackResourceOutcomeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationFeedbackResourceOutcomeRequest is request for EducationFeedbackResourceOutcome
type EducationFeedbackResourceOutcomeRequest struct{ BaseRequest }

// Get performs GET request for EducationFeedbackResourceOutcome
func (r *EducationFeedbackResourceOutcomeRequest) Get(ctx context.Context) (resObj *EducationFeedbackResourceOutcome, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationFeedbackResourceOutcome
func (r *EducationFeedbackResourceOutcomeRequest) Update(ctx context.Context, reqObj *EducationFeedbackResourceOutcome) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationFeedbackResourceOutcome
func (r *EducationFeedbackResourceOutcomeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationFileResourceRequestBuilder is request builder for EducationFileResource
type EducationFileResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationFileResourceRequest
func (b *EducationFileResourceRequestBuilder) Request() *EducationFileResourceRequest {
	return &EducationFileResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationFileResourceRequest is request for EducationFileResource
type EducationFileResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationFileResource
func (r *EducationFileResourceRequest) Get(ctx context.Context) (resObj *EducationFileResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationFileResource
func (r *EducationFileResourceRequest) Update(ctx context.Context, reqObj *EducationFileResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationFileResource
func (r *EducationFileResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationFileSynchronizationVerificationMessageRequestBuilder is request builder for EducationFileSynchronizationVerificationMessage
type EducationFileSynchronizationVerificationMessageRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationFileSynchronizationVerificationMessageRequest
func (b *EducationFileSynchronizationVerificationMessageRequestBuilder) Request() *EducationFileSynchronizationVerificationMessageRequest {
	return &EducationFileSynchronizationVerificationMessageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationFileSynchronizationVerificationMessageRequest is request for EducationFileSynchronizationVerificationMessage
type EducationFileSynchronizationVerificationMessageRequest struct{ BaseRequest }

// Get performs GET request for EducationFileSynchronizationVerificationMessage
func (r *EducationFileSynchronizationVerificationMessageRequest) Get(ctx context.Context) (resObj *EducationFileSynchronizationVerificationMessage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationFileSynchronizationVerificationMessage
func (r *EducationFileSynchronizationVerificationMessageRequest) Update(ctx context.Context, reqObj *EducationFileSynchronizationVerificationMessage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationFileSynchronizationVerificationMessage
func (r *EducationFileSynchronizationVerificationMessageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationIdentityCreationConfigurationRequestBuilder is request builder for EducationIdentityCreationConfiguration
type EducationIdentityCreationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationIdentityCreationConfigurationRequest
func (b *EducationIdentityCreationConfigurationRequestBuilder) Request() *EducationIdentityCreationConfigurationRequest {
	return &EducationIdentityCreationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationIdentityCreationConfigurationRequest is request for EducationIdentityCreationConfiguration
type EducationIdentityCreationConfigurationRequest struct{ BaseRequest }

// Get performs GET request for EducationIdentityCreationConfiguration
func (r *EducationIdentityCreationConfigurationRequest) Get(ctx context.Context) (resObj *EducationIdentityCreationConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationIdentityCreationConfiguration
func (r *EducationIdentityCreationConfigurationRequest) Update(ctx context.Context, reqObj *EducationIdentityCreationConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationIdentityCreationConfiguration
func (r *EducationIdentityCreationConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationIdentityDomainRequestBuilder is request builder for EducationIdentityDomain
type EducationIdentityDomainRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationIdentityDomainRequest
func (b *EducationIdentityDomainRequestBuilder) Request() *EducationIdentityDomainRequest {
	return &EducationIdentityDomainRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationIdentityDomainRequest is request for EducationIdentityDomain
type EducationIdentityDomainRequest struct{ BaseRequest }

// Get performs GET request for EducationIdentityDomain
func (r *EducationIdentityDomainRequest) Get(ctx context.Context) (resObj *EducationIdentityDomain, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationIdentityDomain
func (r *EducationIdentityDomainRequest) Update(ctx context.Context, reqObj *EducationIdentityDomain) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationIdentityDomain
func (r *EducationIdentityDomainRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationIdentityMatchingConfigurationRequestBuilder is request builder for EducationIdentityMatchingConfiguration
type EducationIdentityMatchingConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationIdentityMatchingConfigurationRequest
func (b *EducationIdentityMatchingConfigurationRequestBuilder) Request() *EducationIdentityMatchingConfigurationRequest {
	return &EducationIdentityMatchingConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationIdentityMatchingConfigurationRequest is request for EducationIdentityMatchingConfiguration
type EducationIdentityMatchingConfigurationRequest struct{ BaseRequest }

// Get performs GET request for EducationIdentityMatchingConfiguration
func (r *EducationIdentityMatchingConfigurationRequest) Get(ctx context.Context) (resObj *EducationIdentityMatchingConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationIdentityMatchingConfiguration
func (r *EducationIdentityMatchingConfigurationRequest) Update(ctx context.Context, reqObj *EducationIdentityMatchingConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationIdentityMatchingConfiguration
func (r *EducationIdentityMatchingConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationIdentityMatchingOptionsRequestBuilder is request builder for EducationIdentityMatchingOptions
type EducationIdentityMatchingOptionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationIdentityMatchingOptionsRequest
func (b *EducationIdentityMatchingOptionsRequestBuilder) Request() *EducationIdentityMatchingOptionsRequest {
	return &EducationIdentityMatchingOptionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationIdentityMatchingOptionsRequest is request for EducationIdentityMatchingOptions
type EducationIdentityMatchingOptionsRequest struct{ BaseRequest }

// Get performs GET request for EducationIdentityMatchingOptions
func (r *EducationIdentityMatchingOptionsRequest) Get(ctx context.Context) (resObj *EducationIdentityMatchingOptions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationIdentityMatchingOptions
func (r *EducationIdentityMatchingOptionsRequest) Update(ctx context.Context, reqObj *EducationIdentityMatchingOptions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationIdentityMatchingOptions
func (r *EducationIdentityMatchingOptionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationIdentitySynchronizationConfigurationRequestBuilder is request builder for EducationIdentitySynchronizationConfiguration
type EducationIdentitySynchronizationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationIdentitySynchronizationConfigurationRequest
func (b *EducationIdentitySynchronizationConfigurationRequestBuilder) Request() *EducationIdentitySynchronizationConfigurationRequest {
	return &EducationIdentitySynchronizationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationIdentitySynchronizationConfigurationRequest is request for EducationIdentitySynchronizationConfiguration
type EducationIdentitySynchronizationConfigurationRequest struct{ BaseRequest }

// Get performs GET request for EducationIdentitySynchronizationConfiguration
func (r *EducationIdentitySynchronizationConfigurationRequest) Get(ctx context.Context) (resObj *EducationIdentitySynchronizationConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationIdentitySynchronizationConfiguration
func (r *EducationIdentitySynchronizationConfigurationRequest) Update(ctx context.Context, reqObj *EducationIdentitySynchronizationConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationIdentitySynchronizationConfiguration
func (r *EducationIdentitySynchronizationConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationItemBodyRequestBuilder is request builder for EducationItemBody
type EducationItemBodyRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationItemBodyRequest
func (b *EducationItemBodyRequestBuilder) Request() *EducationItemBodyRequest {
	return &EducationItemBodyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationItemBodyRequest is request for EducationItemBody
type EducationItemBodyRequest struct{ BaseRequest }

// Get performs GET request for EducationItemBody
func (r *EducationItemBodyRequest) Get(ctx context.Context) (resObj *EducationItemBody, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationItemBody
func (r *EducationItemBodyRequest) Update(ctx context.Context, reqObj *EducationItemBody) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationItemBody
func (r *EducationItemBodyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationLinkResourceRequestBuilder is request builder for EducationLinkResource
type EducationLinkResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationLinkResourceRequest
func (b *EducationLinkResourceRequestBuilder) Request() *EducationLinkResourceRequest {
	return &EducationLinkResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationLinkResourceRequest is request for EducationLinkResource
type EducationLinkResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationLinkResource
func (r *EducationLinkResourceRequest) Get(ctx context.Context) (resObj *EducationLinkResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationLinkResource
func (r *EducationLinkResourceRequest) Update(ctx context.Context, reqObj *EducationLinkResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationLinkResource
func (r *EducationLinkResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationMediaResourceRequestBuilder is request builder for EducationMediaResource
type EducationMediaResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationMediaResourceRequest
func (b *EducationMediaResourceRequestBuilder) Request() *EducationMediaResourceRequest {
	return &EducationMediaResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationMediaResourceRequest is request for EducationMediaResource
type EducationMediaResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationMediaResource
func (r *EducationMediaResourceRequest) Get(ctx context.Context) (resObj *EducationMediaResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationMediaResource
func (r *EducationMediaResourceRequest) Update(ctx context.Context, reqObj *EducationMediaResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationMediaResource
func (r *EducationMediaResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationOnPremisesInfoRequestBuilder is request builder for EducationOnPremisesInfo
type EducationOnPremisesInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationOnPremisesInfoRequest
func (b *EducationOnPremisesInfoRequestBuilder) Request() *EducationOnPremisesInfoRequest {
	return &EducationOnPremisesInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationOnPremisesInfoRequest is request for EducationOnPremisesInfo
type EducationOnPremisesInfoRequest struct{ BaseRequest }

// Get performs GET request for EducationOnPremisesInfo
func (r *EducationOnPremisesInfoRequest) Get(ctx context.Context) (resObj *EducationOnPremisesInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationOnPremisesInfo
func (r *EducationOnPremisesInfoRequest) Update(ctx context.Context, reqObj *EducationOnPremisesInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationOnPremisesInfo
func (r *EducationOnPremisesInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationOneRosterAPIDataProviderRequestBuilder is request builder for EducationOneRosterAPIDataProvider
type EducationOneRosterAPIDataProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationOneRosterAPIDataProviderRequest
func (b *EducationOneRosterAPIDataProviderRequestBuilder) Request() *EducationOneRosterAPIDataProviderRequest {
	return &EducationOneRosterAPIDataProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationOneRosterAPIDataProviderRequest is request for EducationOneRosterAPIDataProvider
type EducationOneRosterAPIDataProviderRequest struct{ BaseRequest }

// Get performs GET request for EducationOneRosterAPIDataProvider
func (r *EducationOneRosterAPIDataProviderRequest) Get(ctx context.Context) (resObj *EducationOneRosterAPIDataProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationOneRosterAPIDataProvider
func (r *EducationOneRosterAPIDataProviderRequest) Update(ctx context.Context, reqObj *EducationOneRosterAPIDataProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationOneRosterAPIDataProvider
func (r *EducationOneRosterAPIDataProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationOrganizationRequestBuilder is request builder for EducationOrganization
type EducationOrganizationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationOrganizationRequest
func (b *EducationOrganizationRequestBuilder) Request() *EducationOrganizationRequest {
	return &EducationOrganizationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationOrganizationRequest is request for EducationOrganization
type EducationOrganizationRequest struct{ BaseRequest }

// Get performs GET request for EducationOrganization
func (r *EducationOrganizationRequest) Get(ctx context.Context) (resObj *EducationOrganization, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationOrganization
func (r *EducationOrganizationRequest) Update(ctx context.Context, reqObj *EducationOrganization) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationOrganization
func (r *EducationOrganizationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationOutcomeRequestBuilder is request builder for EducationOutcome
type EducationOutcomeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationOutcomeRequest
func (b *EducationOutcomeRequestBuilder) Request() *EducationOutcomeRequest {
	return &EducationOutcomeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationOutcomeRequest is request for EducationOutcome
type EducationOutcomeRequest struct{ BaseRequest }

// Get performs GET request for EducationOutcome
func (r *EducationOutcomeRequest) Get(ctx context.Context) (resObj *EducationOutcome, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationOutcome
func (r *EducationOutcomeRequest) Update(ctx context.Context, reqObj *EducationOutcome) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationOutcome
func (r *EducationOutcomeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationPointsOutcomeRequestBuilder is request builder for EducationPointsOutcome
type EducationPointsOutcomeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationPointsOutcomeRequest
func (b *EducationPointsOutcomeRequestBuilder) Request() *EducationPointsOutcomeRequest {
	return &EducationPointsOutcomeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationPointsOutcomeRequest is request for EducationPointsOutcome
type EducationPointsOutcomeRequest struct{ BaseRequest }

// Get performs GET request for EducationPointsOutcome
func (r *EducationPointsOutcomeRequest) Get(ctx context.Context) (resObj *EducationPointsOutcome, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationPointsOutcome
func (r *EducationPointsOutcomeRequest) Update(ctx context.Context, reqObj *EducationPointsOutcome) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationPointsOutcome
func (r *EducationPointsOutcomeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationPowerPointResourceRequestBuilder is request builder for EducationPowerPointResource
type EducationPowerPointResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationPowerPointResourceRequest
func (b *EducationPowerPointResourceRequestBuilder) Request() *EducationPowerPointResourceRequest {
	return &EducationPowerPointResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationPowerPointResourceRequest is request for EducationPowerPointResource
type EducationPowerPointResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationPowerPointResource
func (r *EducationPowerPointResourceRequest) Get(ctx context.Context) (resObj *EducationPowerPointResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationPowerPointResource
func (r *EducationPowerPointResourceRequest) Update(ctx context.Context, reqObj *EducationPowerPointResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationPowerPointResource
func (r *EducationPowerPointResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationPowerSchoolDataProviderRequestBuilder is request builder for EducationPowerSchoolDataProvider
type EducationPowerSchoolDataProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationPowerSchoolDataProviderRequest
func (b *EducationPowerSchoolDataProviderRequestBuilder) Request() *EducationPowerSchoolDataProviderRequest {
	return &EducationPowerSchoolDataProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationPowerSchoolDataProviderRequest is request for EducationPowerSchoolDataProvider
type EducationPowerSchoolDataProviderRequest struct{ BaseRequest }

// Get performs GET request for EducationPowerSchoolDataProvider
func (r *EducationPowerSchoolDataProviderRequest) Get(ctx context.Context) (resObj *EducationPowerSchoolDataProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationPowerSchoolDataProvider
func (r *EducationPowerSchoolDataProviderRequest) Update(ctx context.Context, reqObj *EducationPowerSchoolDataProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationPowerSchoolDataProvider
func (r *EducationPowerSchoolDataProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationResourceRequestBuilder is request builder for EducationResource
type EducationResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationResourceRequest
func (b *EducationResourceRequestBuilder) Request() *EducationResourceRequest {
	return &EducationResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationResourceRequest is request for EducationResource
type EducationResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationResource
func (r *EducationResourceRequest) Get(ctx context.Context) (resObj *EducationResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationResource
func (r *EducationResourceRequest) Update(ctx context.Context, reqObj *EducationResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationResource
func (r *EducationResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationRootRequestBuilder is request builder for EducationRoot
type EducationRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationRootRequest
func (b *EducationRootRequestBuilder) Request() *EducationRootRequest {
	return &EducationRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationRootRequest is request for EducationRoot
type EducationRootRequest struct{ BaseRequest }

// Get performs GET request for EducationRoot
func (r *EducationRootRequest) Get(ctx context.Context) (resObj *EducationRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationRoot
func (r *EducationRootRequest) Update(ctx context.Context, reqObj *EducationRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationRoot
func (r *EducationRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationRubricRequestBuilder is request builder for EducationRubric
type EducationRubricRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationRubricRequest
func (b *EducationRubricRequestBuilder) Request() *EducationRubricRequest {
	return &EducationRubricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationRubricRequest is request for EducationRubric
type EducationRubricRequest struct{ BaseRequest }

// Get performs GET request for EducationRubric
func (r *EducationRubricRequest) Get(ctx context.Context) (resObj *EducationRubric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationRubric
func (r *EducationRubricRequest) Update(ctx context.Context, reqObj *EducationRubric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationRubric
func (r *EducationRubricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationRubricOutcomeRequestBuilder is request builder for EducationRubricOutcome
type EducationRubricOutcomeRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationRubricOutcomeRequest
func (b *EducationRubricOutcomeRequestBuilder) Request() *EducationRubricOutcomeRequest {
	return &EducationRubricOutcomeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationRubricOutcomeRequest is request for EducationRubricOutcome
type EducationRubricOutcomeRequest struct{ BaseRequest }

// Get performs GET request for EducationRubricOutcome
func (r *EducationRubricOutcomeRequest) Get(ctx context.Context) (resObj *EducationRubricOutcome, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationRubricOutcome
func (r *EducationRubricOutcomeRequest) Update(ctx context.Context, reqObj *EducationRubricOutcome) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationRubricOutcome
func (r *EducationRubricOutcomeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSchoolRequestBuilder is request builder for EducationSchool
type EducationSchoolRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSchoolRequest
func (b *EducationSchoolRequestBuilder) Request() *EducationSchoolRequest {
	return &EducationSchoolRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSchoolRequest is request for EducationSchool
type EducationSchoolRequest struct{ BaseRequest }

// Get performs GET request for EducationSchool
func (r *EducationSchoolRequest) Get(ctx context.Context) (resObj *EducationSchool, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSchool
func (r *EducationSchoolRequest) Update(ctx context.Context, reqObj *EducationSchool) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSchool
func (r *EducationSchoolRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationStudentRequestBuilder is request builder for EducationStudent
type EducationStudentRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationStudentRequest
func (b *EducationStudentRequestBuilder) Request() *EducationStudentRequest {
	return &EducationStudentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationStudentRequest is request for EducationStudent
type EducationStudentRequest struct{ BaseRequest }

// Get performs GET request for EducationStudent
func (r *EducationStudentRequest) Get(ctx context.Context) (resObj *EducationStudent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationStudent
func (r *EducationStudentRequest) Update(ctx context.Context, reqObj *EducationStudent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationStudent
func (r *EducationStudentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSubmissionRequestBuilder is request builder for EducationSubmission
type EducationSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSubmissionRequest
func (b *EducationSubmissionRequestBuilder) Request() *EducationSubmissionRequest {
	return &EducationSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSubmissionRequest is request for EducationSubmission
type EducationSubmissionRequest struct{ BaseRequest }

// Get performs GET request for EducationSubmission
func (r *EducationSubmissionRequest) Get(ctx context.Context) (resObj *EducationSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSubmission
func (r *EducationSubmissionRequest) Update(ctx context.Context, reqObj *EducationSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSubmission
func (r *EducationSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSubmissionIndividualRecipientRequestBuilder is request builder for EducationSubmissionIndividualRecipient
type EducationSubmissionIndividualRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSubmissionIndividualRecipientRequest
func (b *EducationSubmissionIndividualRecipientRequestBuilder) Request() *EducationSubmissionIndividualRecipientRequest {
	return &EducationSubmissionIndividualRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSubmissionIndividualRecipientRequest is request for EducationSubmissionIndividualRecipient
type EducationSubmissionIndividualRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationSubmissionIndividualRecipient
func (r *EducationSubmissionIndividualRecipientRequest) Get(ctx context.Context) (resObj *EducationSubmissionIndividualRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSubmissionIndividualRecipient
func (r *EducationSubmissionIndividualRecipientRequest) Update(ctx context.Context, reqObj *EducationSubmissionIndividualRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSubmissionIndividualRecipient
func (r *EducationSubmissionIndividualRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSubmissionRecipientRequestBuilder is request builder for EducationSubmissionRecipient
type EducationSubmissionRecipientRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSubmissionRecipientRequest
func (b *EducationSubmissionRecipientRequestBuilder) Request() *EducationSubmissionRecipientRequest {
	return &EducationSubmissionRecipientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSubmissionRecipientRequest is request for EducationSubmissionRecipient
type EducationSubmissionRecipientRequest struct{ BaseRequest }

// Get performs GET request for EducationSubmissionRecipient
func (r *EducationSubmissionRecipientRequest) Get(ctx context.Context) (resObj *EducationSubmissionRecipient, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSubmissionRecipient
func (r *EducationSubmissionRecipientRequest) Update(ctx context.Context, reqObj *EducationSubmissionRecipient) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSubmissionRecipient
func (r *EducationSubmissionRecipientRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSubmissionResourceRequestBuilder is request builder for EducationSubmissionResource
type EducationSubmissionResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSubmissionResourceRequest
func (b *EducationSubmissionResourceRequestBuilder) Request() *EducationSubmissionResourceRequest {
	return &EducationSubmissionResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSubmissionResourceRequest is request for EducationSubmissionResource
type EducationSubmissionResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationSubmissionResource
func (r *EducationSubmissionResourceRequest) Get(ctx context.Context) (resObj *EducationSubmissionResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSubmissionResource
func (r *EducationSubmissionResourceRequest) Update(ctx context.Context, reqObj *EducationSubmissionResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSubmissionResource
func (r *EducationSubmissionResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationConnectionSettingsRequestBuilder is request builder for EducationSynchronizationConnectionSettings
type EducationSynchronizationConnectionSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationConnectionSettingsRequest
func (b *EducationSynchronizationConnectionSettingsRequestBuilder) Request() *EducationSynchronizationConnectionSettingsRequest {
	return &EducationSynchronizationConnectionSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationConnectionSettingsRequest is request for EducationSynchronizationConnectionSettings
type EducationSynchronizationConnectionSettingsRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationConnectionSettings
func (r *EducationSynchronizationConnectionSettingsRequest) Get(ctx context.Context) (resObj *EducationSynchronizationConnectionSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationConnectionSettings
func (r *EducationSynchronizationConnectionSettingsRequest) Update(ctx context.Context, reqObj *EducationSynchronizationConnectionSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationConnectionSettings
func (r *EducationSynchronizationConnectionSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationCustomizationRequestBuilder is request builder for EducationSynchronizationCustomization
type EducationSynchronizationCustomizationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationCustomizationRequest
func (b *EducationSynchronizationCustomizationRequestBuilder) Request() *EducationSynchronizationCustomizationRequest {
	return &EducationSynchronizationCustomizationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationCustomizationRequest is request for EducationSynchronizationCustomization
type EducationSynchronizationCustomizationRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationCustomization
func (r *EducationSynchronizationCustomizationRequest) Get(ctx context.Context) (resObj *EducationSynchronizationCustomization, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationCustomization
func (r *EducationSynchronizationCustomizationRequest) Update(ctx context.Context, reqObj *EducationSynchronizationCustomization) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationCustomization
func (r *EducationSynchronizationCustomizationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationCustomizationsRequestBuilder is request builder for EducationSynchronizationCustomizations
type EducationSynchronizationCustomizationsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationCustomizationsRequest
func (b *EducationSynchronizationCustomizationsRequestBuilder) Request() *EducationSynchronizationCustomizationsRequest {
	return &EducationSynchronizationCustomizationsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationCustomizationsRequest is request for EducationSynchronizationCustomizations
type EducationSynchronizationCustomizationsRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationCustomizations
func (r *EducationSynchronizationCustomizationsRequest) Get(ctx context.Context) (resObj *EducationSynchronizationCustomizations, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationCustomizations
func (r *EducationSynchronizationCustomizationsRequest) Update(ctx context.Context, reqObj *EducationSynchronizationCustomizations) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationCustomizations
func (r *EducationSynchronizationCustomizationsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationCustomizationsBaseRequestBuilder is request builder for EducationSynchronizationCustomizationsBase
type EducationSynchronizationCustomizationsBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationCustomizationsBaseRequest
func (b *EducationSynchronizationCustomizationsBaseRequestBuilder) Request() *EducationSynchronizationCustomizationsBaseRequest {
	return &EducationSynchronizationCustomizationsBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationCustomizationsBaseRequest is request for EducationSynchronizationCustomizationsBase
type EducationSynchronizationCustomizationsBaseRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationCustomizationsBase
func (r *EducationSynchronizationCustomizationsBaseRequest) Get(ctx context.Context) (resObj *EducationSynchronizationCustomizationsBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationCustomizationsBase
func (r *EducationSynchronizationCustomizationsBaseRequest) Update(ctx context.Context, reqObj *EducationSynchronizationCustomizationsBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationCustomizationsBase
func (r *EducationSynchronizationCustomizationsBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationDataProviderRequestBuilder is request builder for EducationSynchronizationDataProvider
type EducationSynchronizationDataProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationDataProviderRequest
func (b *EducationSynchronizationDataProviderRequestBuilder) Request() *EducationSynchronizationDataProviderRequest {
	return &EducationSynchronizationDataProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationDataProviderRequest is request for EducationSynchronizationDataProvider
type EducationSynchronizationDataProviderRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationDataProvider
func (r *EducationSynchronizationDataProviderRequest) Get(ctx context.Context) (resObj *EducationSynchronizationDataProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationDataProvider
func (r *EducationSynchronizationDataProviderRequest) Update(ctx context.Context, reqObj *EducationSynchronizationDataProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationDataProvider
func (r *EducationSynchronizationDataProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationErrorRequestBuilder is request builder for EducationSynchronizationError
type EducationSynchronizationErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationErrorRequest
func (b *EducationSynchronizationErrorRequestBuilder) Request() *EducationSynchronizationErrorRequest {
	return &EducationSynchronizationErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationErrorRequest is request for EducationSynchronizationError
type EducationSynchronizationErrorRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationError
func (r *EducationSynchronizationErrorRequest) Get(ctx context.Context) (resObj *EducationSynchronizationError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationError
func (r *EducationSynchronizationErrorRequest) Update(ctx context.Context, reqObj *EducationSynchronizationError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationError
func (r *EducationSynchronizationErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationLicenseAssignmentRequestBuilder is request builder for EducationSynchronizationLicenseAssignment
type EducationSynchronizationLicenseAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationLicenseAssignmentRequest
func (b *EducationSynchronizationLicenseAssignmentRequestBuilder) Request() *EducationSynchronizationLicenseAssignmentRequest {
	return &EducationSynchronizationLicenseAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationLicenseAssignmentRequest is request for EducationSynchronizationLicenseAssignment
type EducationSynchronizationLicenseAssignmentRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationLicenseAssignment
func (r *EducationSynchronizationLicenseAssignmentRequest) Get(ctx context.Context) (resObj *EducationSynchronizationLicenseAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationLicenseAssignment
func (r *EducationSynchronizationLicenseAssignmentRequest) Update(ctx context.Context, reqObj *EducationSynchronizationLicenseAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationLicenseAssignment
func (r *EducationSynchronizationLicenseAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationOAuth1ConnectionSettingsRequestBuilder is request builder for EducationSynchronizationOAuth1ConnectionSettings
type EducationSynchronizationOAuth1ConnectionSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationOAuth1ConnectionSettingsRequest
func (b *EducationSynchronizationOAuth1ConnectionSettingsRequestBuilder) Request() *EducationSynchronizationOAuth1ConnectionSettingsRequest {
	return &EducationSynchronizationOAuth1ConnectionSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationOAuth1ConnectionSettingsRequest is request for EducationSynchronizationOAuth1ConnectionSettings
type EducationSynchronizationOAuth1ConnectionSettingsRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationOAuth1ConnectionSettings
func (r *EducationSynchronizationOAuth1ConnectionSettingsRequest) Get(ctx context.Context) (resObj *EducationSynchronizationOAuth1ConnectionSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationOAuth1ConnectionSettings
func (r *EducationSynchronizationOAuth1ConnectionSettingsRequest) Update(ctx context.Context, reqObj *EducationSynchronizationOAuth1ConnectionSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationOAuth1ConnectionSettings
func (r *EducationSynchronizationOAuth1ConnectionSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequestBuilder is request builder for EducationSynchronizationOAuth2ClientCredentialsConnectionSettings
type EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest
func (b *EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequestBuilder) Request() *EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest {
	return &EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest is request for EducationSynchronizationOAuth2ClientCredentialsConnectionSettings
type EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationOAuth2ClientCredentialsConnectionSettings
func (r *EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest) Get(ctx context.Context) (resObj *EducationSynchronizationOAuth2ClientCredentialsConnectionSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationOAuth2ClientCredentialsConnectionSettings
func (r *EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest) Update(ctx context.Context, reqObj *EducationSynchronizationOAuth2ClientCredentialsConnectionSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationOAuth2ClientCredentialsConnectionSettings
func (r *EducationSynchronizationOAuth2ClientCredentialsConnectionSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationProfileRequestBuilder is request builder for EducationSynchronizationProfile
type EducationSynchronizationProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationProfileRequest
func (b *EducationSynchronizationProfileRequestBuilder) Request() *EducationSynchronizationProfileRequest {
	return &EducationSynchronizationProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationProfileRequest is request for EducationSynchronizationProfile
type EducationSynchronizationProfileRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Get(ctx context.Context) (resObj *EducationSynchronizationProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Update(ctx context.Context, reqObj *EducationSynchronizationProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationSynchronizationProfileStatusRequestBuilder is request builder for EducationSynchronizationProfileStatus
type EducationSynchronizationProfileStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationProfileStatusRequest
func (b *EducationSynchronizationProfileStatusRequestBuilder) Request() *EducationSynchronizationProfileStatusRequest {
	return &EducationSynchronizationProfileStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationProfileStatusRequest is request for EducationSynchronizationProfileStatus
type EducationSynchronizationProfileStatusRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationProfileStatus
func (r *EducationSynchronizationProfileStatusRequest) Get(ctx context.Context) (resObj *EducationSynchronizationProfileStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationProfileStatus
func (r *EducationSynchronizationProfileStatusRequest) Update(ctx context.Context, reqObj *EducationSynchronizationProfileStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationProfileStatus
func (r *EducationSynchronizationProfileStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationTeacherRequestBuilder is request builder for EducationTeacher
type EducationTeacherRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationTeacherRequest
func (b *EducationTeacherRequestBuilder) Request() *EducationTeacherRequest {
	return &EducationTeacherRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationTeacherRequest is request for EducationTeacher
type EducationTeacherRequest struct{ BaseRequest }

// Get performs GET request for EducationTeacher
func (r *EducationTeacherRequest) Get(ctx context.Context) (resObj *EducationTeacher, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationTeacher
func (r *EducationTeacherRequest) Update(ctx context.Context, reqObj *EducationTeacher) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationTeacher
func (r *EducationTeacherRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationTeamsAppResourceRequestBuilder is request builder for EducationTeamsAppResource
type EducationTeamsAppResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationTeamsAppResourceRequest
func (b *EducationTeamsAppResourceRequestBuilder) Request() *EducationTeamsAppResourceRequest {
	return &EducationTeamsAppResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationTeamsAppResourceRequest is request for EducationTeamsAppResource
type EducationTeamsAppResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationTeamsAppResource
func (r *EducationTeamsAppResourceRequest) Get(ctx context.Context) (resObj *EducationTeamsAppResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationTeamsAppResource
func (r *EducationTeamsAppResourceRequest) Update(ctx context.Context, reqObj *EducationTeamsAppResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationTeamsAppResource
func (r *EducationTeamsAppResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationTermRequestBuilder is request builder for EducationTerm
type EducationTermRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationTermRequest
func (b *EducationTermRequestBuilder) Request() *EducationTermRequest {
	return &EducationTermRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationTermRequest is request for EducationTerm
type EducationTermRequest struct{ BaseRequest }

// Get performs GET request for EducationTerm
func (r *EducationTermRequest) Get(ctx context.Context) (resObj *EducationTerm, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationTerm
func (r *EducationTermRequest) Update(ctx context.Context, reqObj *EducationTerm) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationTerm
func (r *EducationTermRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationUserRequestBuilder is request builder for EducationUser
type EducationUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationUserRequest
func (b *EducationUserRequestBuilder) Request() *EducationUserRequest {
	return &EducationUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationUserRequest is request for EducationUser
type EducationUserRequest struct{ BaseRequest }

// Get performs GET request for EducationUser
func (r *EducationUserRequest) Get(ctx context.Context) (resObj *EducationUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationUser
func (r *EducationUserRequest) Update(ctx context.Context, reqObj *EducationUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationUser
func (r *EducationUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EducationWordResourceRequestBuilder is request builder for EducationWordResource
type EducationWordResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationWordResourceRequest
func (b *EducationWordResourceRequestBuilder) Request() *EducationWordResourceRequest {
	return &EducationWordResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationWordResourceRequest is request for EducationWordResource
type EducationWordResourceRequest struct{ BaseRequest }

// Get performs GET request for EducationWordResource
func (r *EducationWordResourceRequest) Get(ctx context.Context) (resObj *EducationWordResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationWordResource
func (r *EducationWordResourceRequest) Update(ctx context.Context, reqObj *EducationWordResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationWordResource
func (r *EducationWordResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type EducationAssignmentPublishRequestBuilder struct{ BaseRequestBuilder }

// Publish action undocumentedras
func (b *EducationAssignmentRequestBuilder) Publish(reqObj *EducationAssignmentPublishRequestParameter) *EducationAssignmentPublishRequestBuilder {
	bb := &EducationAssignmentPublishRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Publish"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationAssignmentPublishRequest struct{ BaseRequest }

func (b *EducationAssignmentPublishRequestBuilder) Request() *EducationAssignmentPublishRequest {
	return &EducationAssignmentPublishRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationAssignmentPublishRequest) Post(ctx context.Context) (resObj *EducationAssignment, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationAssignmentSetUpFeedbackResourcesFolderRequestBuilder struct{ BaseRequestBuilder }

// SetUpFeedbackResourcesFolder action undocumentedras
func (b *EducationAssignmentRequestBuilder) SetUpFeedbackResourcesFolder(reqObj *EducationAssignmentSetUpFeedbackResourcesFolderRequestParameter) *EducationAssignmentSetUpFeedbackResourcesFolderRequestBuilder {
	bb := &EducationAssignmentSetUpFeedbackResourcesFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetUpFeedbackResourcesFolder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationAssignmentSetUpFeedbackResourcesFolderRequest struct{ BaseRequest }

func (b *EducationAssignmentSetUpFeedbackResourcesFolderRequestBuilder) Request() *EducationAssignmentSetUpFeedbackResourcesFolderRequest {
	return &EducationAssignmentSetUpFeedbackResourcesFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationAssignmentSetUpFeedbackResourcesFolderRequest) Post(ctx context.Context) (resObj *EducationAssignment, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationAssignmentSetUpResourcesFolderRequestBuilder struct{ BaseRequestBuilder }

// SetUpResourcesFolder action undocumentedras
func (b *EducationAssignmentRequestBuilder) SetUpResourcesFolder(reqObj *EducationAssignmentSetUpResourcesFolderRequestParameter) *EducationAssignmentSetUpResourcesFolderRequestBuilder {
	bb := &EducationAssignmentSetUpResourcesFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetUpResourcesFolder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationAssignmentSetUpResourcesFolderRequest struct{ BaseRequest }

func (b *EducationAssignmentSetUpResourcesFolderRequestBuilder) Request() *EducationAssignmentSetUpResourcesFolderRequest {
	return &EducationAssignmentSetUpResourcesFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationAssignmentSetUpResourcesFolderRequest) Post(ctx context.Context) (resObj *EducationAssignment, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSubmissionSetUpResourcesFolderRequestBuilder struct{ BaseRequestBuilder }

// SetUpResourcesFolder action undocumentedras
func (b *EducationSubmissionRequestBuilder) SetUpResourcesFolder(reqObj *EducationSubmissionSetUpResourcesFolderRequestParameter) *EducationSubmissionSetUpResourcesFolderRequestBuilder {
	bb := &EducationSubmissionSetUpResourcesFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetUpResourcesFolder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSubmissionSetUpResourcesFolderRequest struct{ BaseRequest }

func (b *EducationSubmissionSetUpResourcesFolderRequestBuilder) Request() *EducationSubmissionSetUpResourcesFolderRequest {
	return &EducationSubmissionSetUpResourcesFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSubmissionSetUpResourcesFolderRequest) Post(ctx context.Context) (resObj *EducationSubmission, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSubmissionReassignRequestBuilder struct{ BaseRequestBuilder }

// Reassign action undocumentedras
func (b *EducationSubmissionRequestBuilder) Reassign(reqObj *EducationSubmissionReassignRequestParameter) *EducationSubmissionReassignRequestBuilder {
	bb := &EducationSubmissionReassignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Reassign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSubmissionReassignRequest struct{ BaseRequest }

func (b *EducationSubmissionReassignRequestBuilder) Request() *EducationSubmissionReassignRequest {
	return &EducationSubmissionReassignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSubmissionReassignRequest) Post(ctx context.Context) (resObj *EducationSubmission, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSubmissionReturnRequestBuilder struct{ BaseRequestBuilder }

// Return action undocumentedras
func (b *EducationSubmissionRequestBuilder) Return(reqObj *EducationSubmissionReturnRequestParameter) *EducationSubmissionReturnRequestBuilder {
	bb := &EducationSubmissionReturnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Return"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSubmissionReturnRequest struct{ BaseRequest }

func (b *EducationSubmissionReturnRequestBuilder) Request() *EducationSubmissionReturnRequest {
	return &EducationSubmissionReturnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSubmissionReturnRequest) Post(ctx context.Context) (resObj *EducationSubmission, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSubmissionSubmitRequestBuilder struct{ BaseRequestBuilder }

// Submit action undocumentedras
func (b *EducationSubmissionRequestBuilder) Submit(reqObj *EducationSubmissionSubmitRequestParameter) *EducationSubmissionSubmitRequestBuilder {
	bb := &EducationSubmissionSubmitRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Submit"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSubmissionSubmitRequest struct{ BaseRequest }

func (b *EducationSubmissionSubmitRequestBuilder) Request() *EducationSubmissionSubmitRequest {
	return &EducationSubmissionSubmitRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSubmissionSubmitRequest) Post(ctx context.Context) (resObj *EducationSubmission, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSubmissionUnsubmitRequestBuilder struct{ BaseRequestBuilder }

// Unsubmit action undocumentedras
func (b *EducationSubmissionRequestBuilder) Unsubmit(reqObj *EducationSubmissionUnsubmitRequestParameter) *EducationSubmissionUnsubmitRequestBuilder {
	bb := &EducationSubmissionUnsubmitRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Unsubmit"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSubmissionUnsubmitRequest struct{ BaseRequest }

func (b *EducationSubmissionUnsubmitRequestBuilder) Request() *EducationSubmissionUnsubmitRequest {
	return &EducationSubmissionUnsubmitRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSubmissionUnsubmitRequest) Post(ctx context.Context) (resObj *EducationSubmission, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type EducationSynchronizationProfileStartRequestBuilder struct{ BaseRequestBuilder }

// Start action undocumentedrac
func (b *EducationSynchronizationProfileRequestBuilder) Start(reqObj *EducationSynchronizationProfileStartRequestParameter) *EducationSynchronizationProfileStartRequestBuilder {
	bb := &EducationSynchronizationProfileStartRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Start"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSynchronizationProfileStartRequest struct{ BaseRequest }

func (b *EducationSynchronizationProfileStartRequestBuilder) Request() *EducationSynchronizationProfileStartRequest {
	return &EducationSynchronizationProfileStartRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSynchronizationProfileStartRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]EducationFileSynchronizationVerificationMessage, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationFileSynchronizationVerificationMessage
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []EducationFileSynchronizationVerificationMessage
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *EducationSynchronizationProfileStartRequest) PostN(ctx context.Context, n int) ([]EducationFileSynchronizationVerificationMessage, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *EducationSynchronizationProfileStartRequest) Post(ctx context.Context) ([]EducationFileSynchronizationVerificationMessage, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type EducationSynchronizationProfilePauseRequestBuilder struct{ BaseRequestBuilder }

// Pause action undocumentedrav
func (b *EducationSynchronizationProfileRequestBuilder) Pause(reqObj *EducationSynchronizationProfilePauseRequestParameter) *EducationSynchronizationProfilePauseRequestBuilder {
	bb := &EducationSynchronizationProfilePauseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Pause"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSynchronizationProfilePauseRequest struct{ BaseRequest }

func (b *EducationSynchronizationProfilePauseRequestBuilder) Request() *EducationSynchronizationProfilePauseRequest {
	return &EducationSynchronizationProfilePauseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSynchronizationProfilePauseRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type EducationSynchronizationProfileResetRequestBuilder struct{ BaseRequestBuilder }

// Reset action undocumentedrav
func (b *EducationSynchronizationProfileRequestBuilder) Reset(reqObj *EducationSynchronizationProfileResetRequestParameter) *EducationSynchronizationProfileResetRequestBuilder {
	bb := &EducationSynchronizationProfileResetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Reset"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSynchronizationProfileResetRequest struct{ BaseRequest }

func (b *EducationSynchronizationProfileResetRequestBuilder) Request() *EducationSynchronizationProfileResetRequest {
	return &EducationSynchronizationProfileResetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSynchronizationProfileResetRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type EducationSynchronizationProfileResumeRequestBuilder struct{ BaseRequestBuilder }

// Resume action undocumentedrav
func (b *EducationSynchronizationProfileRequestBuilder) Resume(reqObj *EducationSynchronizationProfileResumeRequestParameter) *EducationSynchronizationProfileResumeRequestBuilder {
	bb := &EducationSynchronizationProfileResumeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Resume"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EducationSynchronizationProfileResumeRequest struct{ BaseRequest }

func (b *EducationSynchronizationProfileResumeRequestBuilder) Request() *EducationSynchronizationProfileResumeRequest {
	return &EducationSynchronizationProfileResumeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EducationSynchronizationProfileResumeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
