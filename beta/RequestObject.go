// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ObjectDefinitionRequestBuilder is request builder for ObjectDefinition
type ObjectDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ObjectDefinitionRequest
func (b *ObjectDefinitionRequestBuilder) Request() *ObjectDefinitionRequest {
	return &ObjectDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ObjectDefinitionRequest is request for ObjectDefinition
type ObjectDefinitionRequest struct{ BaseRequest }

// Get performs GET request for ObjectDefinition
func (r *ObjectDefinitionRequest) Get(ctx context.Context) (resObj *ObjectDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ObjectDefinition
func (r *ObjectDefinitionRequest) Update(ctx context.Context, reqObj *ObjectDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ObjectDefinition
func (r *ObjectDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ObjectIdentityRequestBuilder is request builder for ObjectIdentity
type ObjectIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns ObjectIdentityRequest
func (b *ObjectIdentityRequestBuilder) Request() *ObjectIdentityRequest {
	return &ObjectIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ObjectIdentityRequest is request for ObjectIdentity
type ObjectIdentityRequest struct{ BaseRequest }

// Get performs GET request for ObjectIdentity
func (r *ObjectIdentityRequest) Get(ctx context.Context) (resObj *ObjectIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ObjectIdentity
func (r *ObjectIdentityRequest) Update(ctx context.Context, reqObj *ObjectIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ObjectIdentity
func (r *ObjectIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ObjectMappingRequestBuilder is request builder for ObjectMapping
type ObjectMappingRequestBuilder struct{ BaseRequestBuilder }

// Request returns ObjectMappingRequest
func (b *ObjectMappingRequestBuilder) Request() *ObjectMappingRequest {
	return &ObjectMappingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ObjectMappingRequest is request for ObjectMapping
type ObjectMappingRequest struct{ BaseRequest }

// Get performs GET request for ObjectMapping
func (r *ObjectMappingRequest) Get(ctx context.Context) (resObj *ObjectMapping, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ObjectMapping
func (r *ObjectMappingRequest) Update(ctx context.Context, reqObj *ObjectMapping) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ObjectMapping
func (r *ObjectMappingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
