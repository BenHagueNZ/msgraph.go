// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// RemoveAccessApplyActionRequestBuilder is request builder for RemoveAccessApplyAction
type RemoveAccessApplyActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RemoveAccessApplyActionRequest
func (b *RemoveAccessApplyActionRequestBuilder) Request() *RemoveAccessApplyActionRequest {
	return &RemoveAccessApplyActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RemoveAccessApplyActionRequest is request for RemoveAccessApplyAction
type RemoveAccessApplyActionRequest struct{ BaseRequest }

// Get performs GET request for RemoveAccessApplyAction
func (r *RemoveAccessApplyActionRequest) Get(ctx context.Context) (resObj *RemoveAccessApplyAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RemoveAccessApplyAction
func (r *RemoveAccessApplyActionRequest) Update(ctx context.Context, reqObj *RemoveAccessApplyAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RemoveAccessApplyAction
func (r *RemoveAccessApplyActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RemoveContentFooterActionRequestBuilder is request builder for RemoveContentFooterAction
type RemoveContentFooterActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RemoveContentFooterActionRequest
func (b *RemoveContentFooterActionRequestBuilder) Request() *RemoveContentFooterActionRequest {
	return &RemoveContentFooterActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RemoveContentFooterActionRequest is request for RemoveContentFooterAction
type RemoveContentFooterActionRequest struct{ BaseRequest }

// Get performs GET request for RemoveContentFooterAction
func (r *RemoveContentFooterActionRequest) Get(ctx context.Context) (resObj *RemoveContentFooterAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RemoveContentFooterAction
func (r *RemoveContentFooterActionRequest) Update(ctx context.Context, reqObj *RemoveContentFooterAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RemoveContentFooterAction
func (r *RemoveContentFooterActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RemoveContentHeaderActionRequestBuilder is request builder for RemoveContentHeaderAction
type RemoveContentHeaderActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RemoveContentHeaderActionRequest
func (b *RemoveContentHeaderActionRequestBuilder) Request() *RemoveContentHeaderActionRequest {
	return &RemoveContentHeaderActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RemoveContentHeaderActionRequest is request for RemoveContentHeaderAction
type RemoveContentHeaderActionRequest struct{ BaseRequest }

// Get performs GET request for RemoveContentHeaderAction
func (r *RemoveContentHeaderActionRequest) Get(ctx context.Context) (resObj *RemoveContentHeaderAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RemoveContentHeaderAction
func (r *RemoveContentHeaderActionRequest) Update(ctx context.Context, reqObj *RemoveContentHeaderAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RemoveContentHeaderAction
func (r *RemoveContentHeaderActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RemoveProtectionActionRequestBuilder is request builder for RemoveProtectionAction
type RemoveProtectionActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RemoveProtectionActionRequest
func (b *RemoveProtectionActionRequestBuilder) Request() *RemoveProtectionActionRequest {
	return &RemoveProtectionActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RemoveProtectionActionRequest is request for RemoveProtectionAction
type RemoveProtectionActionRequest struct{ BaseRequest }

// Get performs GET request for RemoveProtectionAction
func (r *RemoveProtectionActionRequest) Get(ctx context.Context) (resObj *RemoveProtectionAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RemoveProtectionAction
func (r *RemoveProtectionActionRequest) Update(ctx context.Context, reqObj *RemoveProtectionAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RemoveProtectionAction
func (r *RemoveProtectionActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RemoveWatermarkActionRequestBuilder is request builder for RemoveWatermarkAction
type RemoveWatermarkActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RemoveWatermarkActionRequest
func (b *RemoveWatermarkActionRequestBuilder) Request() *RemoveWatermarkActionRequest {
	return &RemoveWatermarkActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RemoveWatermarkActionRequest is request for RemoveWatermarkAction
type RemoveWatermarkActionRequest struct{ BaseRequest }

// Get performs GET request for RemoveWatermarkAction
func (r *RemoveWatermarkActionRequest) Get(ctx context.Context) (resObj *RemoveWatermarkAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RemoveWatermarkAction
func (r *RemoveWatermarkActionRequest) Update(ctx context.Context, reqObj *RemoveWatermarkAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RemoveWatermarkAction
func (r *RemoveWatermarkActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
