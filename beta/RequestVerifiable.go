// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// VerifiableCredentialRequiredRequestBuilder is request builder for VerifiableCredentialRequired
type VerifiableCredentialRequiredRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialRequiredRequest
func (b *VerifiableCredentialRequiredRequestBuilder) Request() *VerifiableCredentialRequiredRequest {
	return &VerifiableCredentialRequiredRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialRequiredRequest is request for VerifiableCredentialRequired
type VerifiableCredentialRequiredRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialRequired
func (r *VerifiableCredentialRequiredRequest) Get(ctx context.Context) (resObj *VerifiableCredentialRequired, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialRequired
func (r *VerifiableCredentialRequiredRequest) Update(ctx context.Context, reqObj *VerifiableCredentialRequired) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialRequired
func (r *VerifiableCredentialRequiredRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VerifiableCredentialRequirementStatusRequestBuilder is request builder for VerifiableCredentialRequirementStatus
type VerifiableCredentialRequirementStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialRequirementStatusRequest
func (b *VerifiableCredentialRequirementStatusRequestBuilder) Request() *VerifiableCredentialRequirementStatusRequest {
	return &VerifiableCredentialRequirementStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialRequirementStatusRequest is request for VerifiableCredentialRequirementStatus
type VerifiableCredentialRequirementStatusRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialRequirementStatus
func (r *VerifiableCredentialRequirementStatusRequest) Get(ctx context.Context) (resObj *VerifiableCredentialRequirementStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialRequirementStatus
func (r *VerifiableCredentialRequirementStatusRequest) Update(ctx context.Context, reqObj *VerifiableCredentialRequirementStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialRequirementStatus
func (r *VerifiableCredentialRequirementStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VerifiableCredentialRetrievedRequestBuilder is request builder for VerifiableCredentialRetrieved
type VerifiableCredentialRetrievedRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialRetrievedRequest
func (b *VerifiableCredentialRetrievedRequestBuilder) Request() *VerifiableCredentialRetrievedRequest {
	return &VerifiableCredentialRetrievedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialRetrievedRequest is request for VerifiableCredentialRetrieved
type VerifiableCredentialRetrievedRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialRetrieved
func (r *VerifiableCredentialRetrievedRequest) Get(ctx context.Context) (resObj *VerifiableCredentialRetrieved, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialRetrieved
func (r *VerifiableCredentialRetrievedRequest) Update(ctx context.Context, reqObj *VerifiableCredentialRetrieved) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialRetrieved
func (r *VerifiableCredentialRetrievedRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VerifiableCredentialSettingsRequestBuilder is request builder for VerifiableCredentialSettings
type VerifiableCredentialSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialSettingsRequest
func (b *VerifiableCredentialSettingsRequestBuilder) Request() *VerifiableCredentialSettingsRequest {
	return &VerifiableCredentialSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialSettingsRequest is request for VerifiableCredentialSettings
type VerifiableCredentialSettingsRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialSettings
func (r *VerifiableCredentialSettingsRequest) Get(ctx context.Context) (resObj *VerifiableCredentialSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialSettings
func (r *VerifiableCredentialSettingsRequest) Update(ctx context.Context, reqObj *VerifiableCredentialSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialSettings
func (r *VerifiableCredentialSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VerifiableCredentialTypeRequestBuilder is request builder for VerifiableCredentialType
type VerifiableCredentialTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialTypeRequest
func (b *VerifiableCredentialTypeRequestBuilder) Request() *VerifiableCredentialTypeRequest {
	return &VerifiableCredentialTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialTypeRequest is request for VerifiableCredentialType
type VerifiableCredentialTypeRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialType
func (r *VerifiableCredentialTypeRequest) Get(ctx context.Context) (resObj *VerifiableCredentialType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialType
func (r *VerifiableCredentialTypeRequest) Update(ctx context.Context, reqObj *VerifiableCredentialType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialType
func (r *VerifiableCredentialTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VerifiableCredentialVerifiedRequestBuilder is request builder for VerifiableCredentialVerified
type VerifiableCredentialVerifiedRequestBuilder struct{ BaseRequestBuilder }

// Request returns VerifiableCredentialVerifiedRequest
func (b *VerifiableCredentialVerifiedRequestBuilder) Request() *VerifiableCredentialVerifiedRequest {
	return &VerifiableCredentialVerifiedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VerifiableCredentialVerifiedRequest is request for VerifiableCredentialVerified
type VerifiableCredentialVerifiedRequest struct{ BaseRequest }

// Get performs GET request for VerifiableCredentialVerified
func (r *VerifiableCredentialVerifiedRequest) Get(ctx context.Context) (resObj *VerifiableCredentialVerified, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VerifiableCredentialVerified
func (r *VerifiableCredentialVerifiedRequest) Update(ctx context.Context, reqObj *VerifiableCredentialVerified) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VerifiableCredentialVerified
func (r *VerifiableCredentialVerifiedRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
