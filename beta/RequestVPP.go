// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// VPPLicensingTypeRequestBuilder is request builder for VPPLicensingType
type VPPLicensingTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns VPPLicensingTypeRequest
func (b *VPPLicensingTypeRequestBuilder) Request() *VPPLicensingTypeRequest {
	return &VPPLicensingTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VPPLicensingTypeRequest is request for VPPLicensingType
type VPPLicensingTypeRequest struct{ BaseRequest }

// Get performs GET request for VPPLicensingType
func (r *VPPLicensingTypeRequest) Get(ctx context.Context) (resObj *VPPLicensingType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VPPLicensingType
func (r *VPPLicensingTypeRequest) Update(ctx context.Context, reqObj *VPPLicensingType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VPPLicensingType
func (r *VPPLicensingTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VPPTokenRequestBuilder is request builder for VPPToken
type VPPTokenRequestBuilder struct{ BaseRequestBuilder }

// Request returns VPPTokenRequest
func (b *VPPTokenRequestBuilder) Request() *VPPTokenRequest {
	return &VPPTokenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VPPTokenRequest is request for VPPToken
type VPPTokenRequest struct{ BaseRequest }

// Get performs GET request for VPPToken
func (r *VPPTokenRequest) Get(ctx context.Context) (resObj *VPPToken, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VPPToken
func (r *VPPTokenRequest) Update(ctx context.Context, reqObj *VPPToken) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VPPToken
func (r *VPPTokenRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VPPTokenActionResultRequestBuilder is request builder for VPPTokenActionResult
type VPPTokenActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns VPPTokenActionResultRequest
func (b *VPPTokenActionResultRequestBuilder) Request() *VPPTokenActionResultRequest {
	return &VPPTokenActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VPPTokenActionResultRequest is request for VPPTokenActionResult
type VPPTokenActionResultRequest struct{ BaseRequest }

// Get performs GET request for VPPTokenActionResult
func (r *VPPTokenActionResultRequest) Get(ctx context.Context) (resObj *VPPTokenActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VPPTokenActionResult
func (r *VPPTokenActionResultRequest) Update(ctx context.Context, reqObj *VPPTokenActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VPPTokenActionResult
func (r *VPPTokenActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VPPTokenLicenseSummaryRequestBuilder is request builder for VPPTokenLicenseSummary
type VPPTokenLicenseSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns VPPTokenLicenseSummaryRequest
func (b *VPPTokenLicenseSummaryRequestBuilder) Request() *VPPTokenLicenseSummaryRequest {
	return &VPPTokenLicenseSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VPPTokenLicenseSummaryRequest is request for VPPTokenLicenseSummary
type VPPTokenLicenseSummaryRequest struct{ BaseRequest }

// Get performs GET request for VPPTokenLicenseSummary
func (r *VPPTokenLicenseSummaryRequest) Get(ctx context.Context) (resObj *VPPTokenLicenseSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VPPTokenLicenseSummary
func (r *VPPTokenLicenseSummaryRequest) Update(ctx context.Context, reqObj *VPPTokenLicenseSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VPPTokenLicenseSummary
func (r *VPPTokenLicenseSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// VPPTokenRevokeLicensesActionResultRequestBuilder is request builder for VPPTokenRevokeLicensesActionResult
type VPPTokenRevokeLicensesActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns VPPTokenRevokeLicensesActionResultRequest
func (b *VPPTokenRevokeLicensesActionResultRequestBuilder) Request() *VPPTokenRevokeLicensesActionResultRequest {
	return &VPPTokenRevokeLicensesActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// VPPTokenRevokeLicensesActionResultRequest is request for VPPTokenRevokeLicensesActionResult
type VPPTokenRevokeLicensesActionResultRequest struct{ BaseRequest }

// Get performs GET request for VPPTokenRevokeLicensesActionResult
func (r *VPPTokenRevokeLicensesActionResultRequest) Get(ctx context.Context) (resObj *VPPTokenRevokeLicensesActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for VPPTokenRevokeLicensesActionResult
func (r *VPPTokenRevokeLicensesActionResultRequest) Update(ctx context.Context, reqObj *VPPTokenRevokeLicensesActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for VPPTokenRevokeLicensesActionResult
func (r *VPPTokenRevokeLicensesActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type VPPTokenCollectionSyncLicenseCountsRequestBuilder struct{ BaseRequestBuilder }

// SyncLicenseCounts action undocumentedrav
func (b *DeviceAppManagementVPPTokensCollectionRequestBuilder) SyncLicenseCounts(reqObj *VPPTokenCollectionSyncLicenseCountsRequestParameter) *VPPTokenCollectionSyncLicenseCountsRequestBuilder {
	bb := &VPPTokenCollectionSyncLicenseCountsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SyncLicenseCounts"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type VPPTokenCollectionSyncLicenseCountsRequest struct{ BaseRequest }

func (b *VPPTokenCollectionSyncLicenseCountsRequestBuilder) Request() *VPPTokenCollectionSyncLicenseCountsRequest {
	return &VPPTokenCollectionSyncLicenseCountsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *VPPTokenCollectionSyncLicenseCountsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type VPPTokenRevokeLicensesRequestBuilder struct{ BaseRequestBuilder }

// RevokeLicenses action undocumentedrav
func (b *VPPTokenRequestBuilder) RevokeLicenses(reqObj *VPPTokenRevokeLicensesRequestParameter) *VPPTokenRevokeLicensesRequestBuilder {
	bb := &VPPTokenRevokeLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type VPPTokenRevokeLicensesRequest struct{ BaseRequest }

func (b *VPPTokenRevokeLicensesRequestBuilder) Request() *VPPTokenRevokeLicensesRequest {
	return &VPPTokenRevokeLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *VPPTokenRevokeLicensesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type VPPTokenSyncLicensesRequestBuilder struct{ BaseRequestBuilder }

// SyncLicenses action undocumentedras
func (b *VPPTokenRequestBuilder) SyncLicenses(reqObj *VPPTokenSyncLicensesRequestParameter) *VPPTokenSyncLicensesRequestBuilder {
	bb := &VPPTokenSyncLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SyncLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type VPPTokenSyncLicensesRequest struct{ BaseRequest }

func (b *VPPTokenSyncLicensesRequestBuilder) Request() *VPPTokenSyncLicensesRequest {
	return &VPPTokenSyncLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *VPPTokenSyncLicensesRequest) Post(ctx context.Context) (resObj *VPPToken, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
