// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// PrivacyAccessControls returns request builder for WindowsPrivacyDataAccessControlItem collection
func (b *Windows10GeneralConfigurationRequestBuilder) PrivacyAccessControls() *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder {
	bb := &Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/privacyAccessControls"
	return bb
}

// Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder is request builder for WindowsPrivacyDataAccessControlItem collection rcn
type Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for WindowsPrivacyDataAccessControlItem collection
func (b *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder) Request() *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest {
	return &Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for WindowsPrivacyDataAccessControlItem item
func (b *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequestBuilder) ID(id string) *WindowsPrivacyDataAccessControlItemRequestBuilder {
	bb := &WindowsPrivacyDataAccessControlItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest is request for WindowsPrivacyDataAccessControlItem collection
type Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for WindowsPrivacyDataAccessControlItem collection
func (r *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]WindowsPrivacyDataAccessControlItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsPrivacyDataAccessControlItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []WindowsPrivacyDataAccessControlItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for WindowsPrivacyDataAccessControlItem collection, max N pages
func (r *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest) GetN(ctx context.Context, n int) ([]WindowsPrivacyDataAccessControlItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for WindowsPrivacyDataAccessControlItem collection
func (r *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest) Get(ctx context.Context) ([]WindowsPrivacyDataAccessControlItem, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for WindowsPrivacyDataAccessControlItem collection
func (r *Windows10GeneralConfigurationPrivacyAccessControlsCollectionRequest) Add(ctx context.Context, reqObj *WindowsPrivacyDataAccessControlItem) (resObj *WindowsPrivacyDataAccessControlItem, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// ManagedDeviceCertificateStates returns request builder for ManagedDeviceCertificateState collection
func (b *Windows10ImportedPFXCertificateProfileRequestBuilder) ManagedDeviceCertificateStates() *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder {
	bb := &Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDeviceCertificateStates"
	return bb
}

// Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder is request builder for ManagedDeviceCertificateState collection rcn
type Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for ManagedDeviceCertificateState collection
func (b *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder) Request() *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest {
	return &Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for ManagedDeviceCertificateState item
func (b *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder) ID(id string) *ManagedDeviceCertificateStateRequestBuilder {
	bb := &ManagedDeviceCertificateStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest is request for ManagedDeviceCertificateState collection
type Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for ManagedDeviceCertificateState collection
func (r *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ManagedDeviceCertificateState, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceCertificateState
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ManagedDeviceCertificateState
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for ManagedDeviceCertificateState collection, max N pages
func (r *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest) GetN(ctx context.Context, n int) ([]ManagedDeviceCertificateState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for ManagedDeviceCertificateState collection
func (r *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Get(ctx context.Context) ([]ManagedDeviceCertificateState, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for ManagedDeviceCertificateState collection
func (r *Windows10ImportedPFXCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Add(ctx context.Context, reqObj *ManagedDeviceCertificateState) (resObj *ManagedDeviceCertificateState, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// ManagedDeviceCertificateStates returns request builder for ManagedDeviceCertificateState collection
func (b *Windows10PkcsCertificateProfileRequestBuilder) ManagedDeviceCertificateStates() *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder {
	bb := &Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDeviceCertificateStates"
	return bb
}

// Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder is request builder for ManagedDeviceCertificateState collection rcn
type Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for ManagedDeviceCertificateState collection
func (b *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder) Request() *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest {
	return &Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for ManagedDeviceCertificateState item
func (b *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequestBuilder) ID(id string) *ManagedDeviceCertificateStateRequestBuilder {
	bb := &ManagedDeviceCertificateStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest is request for ManagedDeviceCertificateState collection
type Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for ManagedDeviceCertificateState collection
func (r *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ManagedDeviceCertificateState, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceCertificateState
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ManagedDeviceCertificateState
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for ManagedDeviceCertificateState collection, max N pages
func (r *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest) GetN(ctx context.Context, n int) ([]ManagedDeviceCertificateState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for ManagedDeviceCertificateState collection
func (r *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Get(ctx context.Context) ([]ManagedDeviceCertificateState, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for ManagedDeviceCertificateState collection
func (r *Windows10PkcsCertificateProfileManagedDeviceCertificateStatesCollectionRequest) Add(ctx context.Context, reqObj *ManagedDeviceCertificateState) (resObj *ManagedDeviceCertificateState, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// IdentityCertificate is navigation property rn
func (b *Windows10VpnConfigurationRequestBuilder) IdentityCertificate() *WindowsCertificateProfileBaseRequestBuilder {
	bb := &WindowsCertificateProfileBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/identityCertificate"
	return bb
}

// WindowsCertificateProfileBase is navigation property rn
func (b *Windows10CertificateProfileBaseRequestBuilder) WindowsCertificateProfileBase() *WindowsCertificateProfileBaseRequestBuilder {
	bb := &WindowsCertificateProfileBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/WindowsCertificateProfileBase"
	return bb
}

// Windows10CompliancePolicy returns request builder for Windows10CompliancePolicy collection
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) Windows10CompliancePolicy() *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder {
	bb := &DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder is request builder for Windows10CompliancePolicy collection rcn
type DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10CompliancePolicy collection
func (b *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder) Request() *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest {
	return &DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10CompliancePolicy item
func (b *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequestBuilder) ID(id string) *Windows10CompliancePolicyRequestBuilder {
	bb := &Windows10CompliancePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest is request for Windows10CompliancePolicy collection
type DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10CompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10CompliancePolicy, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10CompliancePolicy
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10CompliancePolicy
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10CompliancePolicy collection, max N pages
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10CompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10CompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest) Get(ctx context.Context) ([]Windows10CompliancePolicy, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10CompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10CompliancePolicyCollectionRequest) Add(ctx context.Context, reqObj *Windows10CompliancePolicy) (resObj *Windows10CompliancePolicy, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10CustomConfiguration returns request builder for Windows10CustomConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10CustomConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder is request builder for Windows10CustomConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10CustomConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10CustomConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequestBuilder) ID(id string) *Windows10CustomConfigurationRequestBuilder {
	bb := &Windows10CustomConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest is request for Windows10CustomConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10CustomConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10CustomConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10CustomConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10CustomConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10CustomConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10CustomConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10CustomConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10CustomConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10CustomConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10CustomConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10CustomConfiguration) (resObj *Windows10CustomConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10DeviceFirmwareConfigurationInterface returns request builder for Windows10DeviceFirmwareConfigurationInterface collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10DeviceFirmwareConfigurationInterface() *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder is request builder for Windows10DeviceFirmwareConfigurationInterface collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10DeviceFirmwareConfigurationInterface collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10DeviceFirmwareConfigurationInterface item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequestBuilder) ID(id string) *Windows10DeviceFirmwareConfigurationInterfaceRequestBuilder {
	bb := &Windows10DeviceFirmwareConfigurationInterfaceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest is request for Windows10DeviceFirmwareConfigurationInterface collection
type DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10DeviceFirmwareConfigurationInterface collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10DeviceFirmwareConfigurationInterface, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10DeviceFirmwareConfigurationInterface
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10DeviceFirmwareConfigurationInterface
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10DeviceFirmwareConfigurationInterface collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10DeviceFirmwareConfigurationInterface, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10DeviceFirmwareConfigurationInterface collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest) Get(ctx context.Context) ([]Windows10DeviceFirmwareConfigurationInterface, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10DeviceFirmwareConfigurationInterface collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10DeviceFirmwareConfigurationInterfaceCollectionRequest) Add(ctx context.Context, reqObj *Windows10DeviceFirmwareConfigurationInterface) (resObj *Windows10DeviceFirmwareConfigurationInterface, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EndpointProtectionConfiguration returns request builder for Windows10EndpointProtectionConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10EndpointProtectionConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder is request builder for Windows10EndpointProtectionConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EndpointProtectionConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EndpointProtectionConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequestBuilder) ID(id string) *Windows10EndpointProtectionConfigurationRequestBuilder {
	bb := &Windows10EndpointProtectionConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest is request for Windows10EndpointProtectionConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EndpointProtectionConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EndpointProtectionConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EndpointProtectionConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EndpointProtectionConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EndpointProtectionConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EndpointProtectionConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EndpointProtectionConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10EndpointProtectionConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EndpointProtectionConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EndpointProtectionConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10EndpointProtectionConfiguration) (resObj *Windows10EndpointProtectionConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EnrollmentCompletionPageConfiguration returns request builder for Windows10EnrollmentCompletionPageConfiguration collection
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) Windows10EnrollmentCompletionPageConfiguration() *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder is request builder for Windows10EnrollmentCompletionPageConfiguration collection rcn
type DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EnrollmentCompletionPageConfiguration collection
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest {
	return &DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EnrollmentCompletionPageConfiguration item
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequestBuilder) ID(id string) *Windows10EnrollmentCompletionPageConfigurationRequestBuilder {
	bb := &Windows10EnrollmentCompletionPageConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest is request for Windows10EnrollmentCompletionPageConfiguration collection
type DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EnrollmentCompletionPageConfiguration collection
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EnrollmentCompletionPageConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EnrollmentCompletionPageConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EnrollmentCompletionPageConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EnrollmentCompletionPageConfiguration collection, max N pages
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EnrollmentCompletionPageConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EnrollmentCompletionPageConfiguration collection
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10EnrollmentCompletionPageConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EnrollmentCompletionPageConfiguration collection
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionWindows10EnrollmentCompletionPageConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10EnrollmentCompletionPageConfiguration) (resObj *Windows10EnrollmentCompletionPageConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EnrollmentCompletionPageConfigurationPolicySetItem returns request builder for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
func (b *PolicySetItemsCollectionRequestBuilder) Windows10EnrollmentCompletionPageConfigurationPolicySetItem() *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder {
	bb := &PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder is request builder for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection rcn
type PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
func (b *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder) Request() *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest {
	return &PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EnrollmentCompletionPageConfigurationPolicySetItem item
func (b *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequestBuilder) ID(id string) *Windows10EnrollmentCompletionPageConfigurationPolicySetItemRequestBuilder {
	bb := &Windows10EnrollmentCompletionPageConfigurationPolicySetItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest is request for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
type PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
func (r *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EnrollmentCompletionPageConfigurationPolicySetItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EnrollmentCompletionPageConfigurationPolicySetItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EnrollmentCompletionPageConfigurationPolicySetItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection, max N pages
func (r *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EnrollmentCompletionPageConfigurationPolicySetItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
func (r *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest) Get(ctx context.Context) ([]Windows10EnrollmentCompletionPageConfigurationPolicySetItem, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EnrollmentCompletionPageConfigurationPolicySetItem collection
func (r *PolicySetItemsCollectionWindows10EnrollmentCompletionPageConfigurationPolicySetItemCollectionRequest) Add(ctx context.Context, reqObj *Windows10EnrollmentCompletionPageConfigurationPolicySetItem) (resObj *Windows10EnrollmentCompletionPageConfigurationPolicySetItem, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EnterpriseModernAppManagementConfiguration returns request builder for Windows10EnterpriseModernAppManagementConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10EnterpriseModernAppManagementConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder is request builder for Windows10EnterpriseModernAppManagementConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EnterpriseModernAppManagementConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EnterpriseModernAppManagementConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder) ID(id string) *Windows10EnterpriseModernAppManagementConfigurationRequestBuilder {
	bb := &Windows10EnterpriseModernAppManagementConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest is request for Windows10EnterpriseModernAppManagementConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EnterpriseModernAppManagementConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EnterpriseModernAppManagementConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EnterpriseModernAppManagementConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10EnterpriseModernAppManagementConfiguration) (resObj *Windows10EnterpriseModernAppManagementConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10GeneralConfiguration returns request builder for Windows10GeneralConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10GeneralConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder is request builder for Windows10GeneralConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10GeneralConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10GeneralConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequestBuilder) ID(id string) *Windows10GeneralConfigurationRequestBuilder {
	bb := &Windows10GeneralConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest is request for Windows10GeneralConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10GeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10GeneralConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10GeneralConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10GeneralConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10GeneralConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10GeneralConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10GeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10GeneralConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10GeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10GeneralConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10GeneralConfiguration) (resObj *Windows10GeneralConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// WindowsCertificateProfileBase is navigation property rn
func (b *Windows10ImportedPFXCertificateProfileRequestBuilder) WindowsCertificateProfileBase() *WindowsCertificateProfileBaseRequestBuilder {
	bb := &WindowsCertificateProfileBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/WindowsCertificateProfileBase"
	return bb
}

// Windows10MobileCompliancePolicy returns request builder for Windows10MobileCompliancePolicy collection
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) Windows10MobileCompliancePolicy() *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder {
	bb := &DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder is request builder for Windows10MobileCompliancePolicy collection rcn
type DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10MobileCompliancePolicy collection
func (b *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder) Request() *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest {
	return &DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10MobileCompliancePolicy item
func (b *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequestBuilder) ID(id string) *Windows10MobileCompliancePolicyRequestBuilder {
	bb := &Windows10MobileCompliancePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest is request for Windows10MobileCompliancePolicy collection
type DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10MobileCompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10MobileCompliancePolicy, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10MobileCompliancePolicy
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10MobileCompliancePolicy
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10MobileCompliancePolicy collection, max N pages
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10MobileCompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10MobileCompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest) Get(ctx context.Context) ([]Windows10MobileCompliancePolicy, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10MobileCompliancePolicy collection
func (r *DeviceManagementDeviceCompliancePoliciesCollectionWindows10MobileCompliancePolicyCollectionRequest) Add(ctx context.Context, reqObj *Windows10MobileCompliancePolicy) (resObj *Windows10MobileCompliancePolicy, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10NetworkBoundaryConfiguration returns request builder for Windows10NetworkBoundaryConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10NetworkBoundaryConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder is request builder for Windows10NetworkBoundaryConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10NetworkBoundaryConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10NetworkBoundaryConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequestBuilder) ID(id string) *Windows10NetworkBoundaryConfigurationRequestBuilder {
	bb := &Windows10NetworkBoundaryConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest is request for Windows10NetworkBoundaryConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10NetworkBoundaryConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10NetworkBoundaryConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10NetworkBoundaryConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10NetworkBoundaryConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10NetworkBoundaryConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10NetworkBoundaryConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10NetworkBoundaryConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10NetworkBoundaryConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10NetworkBoundaryConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10NetworkBoundaryConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10NetworkBoundaryConfiguration) (resObj *Windows10NetworkBoundaryConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10PFXImportCertificateProfile returns request builder for Windows10PFXImportCertificateProfile collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10PFXImportCertificateProfile() *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder is request builder for Windows10PFXImportCertificateProfile collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10PFXImportCertificateProfile collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10PFXImportCertificateProfile item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequestBuilder) ID(id string) *Windows10PFXImportCertificateProfileRequestBuilder {
	bb := &Windows10PFXImportCertificateProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest is request for Windows10PFXImportCertificateProfile collection
type DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10PFXImportCertificateProfile collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10PFXImportCertificateProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10PFXImportCertificateProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10PFXImportCertificateProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10PFXImportCertificateProfile collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10PFXImportCertificateProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10PFXImportCertificateProfile collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest) Get(ctx context.Context) ([]Windows10PFXImportCertificateProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10PFXImportCertificateProfile collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10PFXImportCertificateProfileCollectionRequest) Add(ctx context.Context, reqObj *Windows10PFXImportCertificateProfile) (resObj *Windows10PFXImportCertificateProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10SecureAssessmentConfiguration returns request builder for Windows10SecureAssessmentConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10SecureAssessmentConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder is request builder for Windows10SecureAssessmentConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10SecureAssessmentConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10SecureAssessmentConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequestBuilder) ID(id string) *Windows10SecureAssessmentConfigurationRequestBuilder {
	bb := &Windows10SecureAssessmentConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest is request for Windows10SecureAssessmentConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10SecureAssessmentConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10SecureAssessmentConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10SecureAssessmentConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10SecureAssessmentConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10SecureAssessmentConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10SecureAssessmentConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10SecureAssessmentConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10SecureAssessmentConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10SecureAssessmentConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10SecureAssessmentConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10SecureAssessmentConfiguration) (resObj *Windows10SecureAssessmentConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10TeamGeneralConfiguration returns request builder for Windows10TeamGeneralConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Windows10TeamGeneralConfiguration() *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder is request builder for Windows10TeamGeneralConfiguration collection rcn
type DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10TeamGeneralConfiguration collection
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10TeamGeneralConfiguration item
func (b *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequestBuilder) ID(id string) *Windows10TeamGeneralConfigurationRequestBuilder {
	bb := &Windows10TeamGeneralConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest is request for Windows10TeamGeneralConfiguration collection
type DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10TeamGeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10TeamGeneralConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10TeamGeneralConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10TeamGeneralConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10TeamGeneralConfiguration collection, max N pages
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10TeamGeneralConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10TeamGeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10TeamGeneralConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10TeamGeneralConfiguration collection
func (r *DeviceManagementDeviceConfigurationsCollectionWindows10TeamGeneralConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10TeamGeneralConfiguration) (resObj *Windows10TeamGeneralConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10XCertificateProfile returns request builder for Windows10XCertificateProfile collection
func (b *DeviceManagementResourceAccessProfilesCollectionRequestBuilder) Windows10XCertificateProfile() *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder {
	bb := &DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder is request builder for Windows10XCertificateProfile collection rcn
type DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10XCertificateProfile collection
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder) Request() *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest {
	return &DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10XCertificateProfile item
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequestBuilder) ID(id string) *Windows10XCertificateProfileRequestBuilder {
	bb := &Windows10XCertificateProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest is request for Windows10XCertificateProfile collection
type DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10XCertificateProfile collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10XCertificateProfile, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10XCertificateProfile
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10XCertificateProfile
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10XCertificateProfile collection, max N pages
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10XCertificateProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10XCertificateProfile collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest) Get(ctx context.Context) ([]Windows10XCertificateProfile, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10XCertificateProfile collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XCertificateProfileCollectionRequest) Add(ctx context.Context, reqObj *Windows10XCertificateProfile) (resObj *Windows10XCertificateProfile, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10XTrustedRootCertificate returns request builder for Windows10XTrustedRootCertificate collection
func (b *DeviceManagementResourceAccessProfilesCollectionRequestBuilder) Windows10XTrustedRootCertificate() *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder {
	bb := &DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder is request builder for Windows10XTrustedRootCertificate collection rcn
type DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10XTrustedRootCertificate collection
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder) Request() *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest {
	return &DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10XTrustedRootCertificate item
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequestBuilder) ID(id string) *Windows10XTrustedRootCertificateRequestBuilder {
	bb := &Windows10XTrustedRootCertificateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest is request for Windows10XTrustedRootCertificate collection
type DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10XTrustedRootCertificate collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10XTrustedRootCertificate, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10XTrustedRootCertificate
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10XTrustedRootCertificate
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10XTrustedRootCertificate collection, max N pages
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10XTrustedRootCertificate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10XTrustedRootCertificate collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest) Get(ctx context.Context) ([]Windows10XTrustedRootCertificate, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10XTrustedRootCertificate collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XTrustedRootCertificateCollectionRequest) Add(ctx context.Context, reqObj *Windows10XTrustedRootCertificate) (resObj *Windows10XTrustedRootCertificate, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10XVpnConfiguration returns request builder for Windows10XVpnConfiguration collection
func (b *DeviceManagementResourceAccessProfilesCollectionRequestBuilder) Windows10XVpnConfiguration() *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder is request builder for Windows10XVpnConfiguration collection rcn
type DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10XVpnConfiguration collection
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder) Request() *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest {
	return &DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10XVpnConfiguration item
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequestBuilder) ID(id string) *Windows10XVpnConfigurationRequestBuilder {
	bb := &Windows10XVpnConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest is request for Windows10XVpnConfiguration collection
type DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10XVpnConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10XVpnConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10XVpnConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10XVpnConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10XVpnConfiguration collection, max N pages
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10XVpnConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10XVpnConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10XVpnConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10XVpnConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XVpnConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10XVpnConfiguration) (resObj *Windows10XVpnConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10XWifiConfiguration returns request builder for Windows10XWifiConfiguration collection
func (b *DeviceManagementResourceAccessProfilesCollectionRequestBuilder) Windows10XWifiConfiguration() *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder {
	bb := &DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder is request builder for Windows10XWifiConfiguration collection rcn
type DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10XWifiConfiguration collection
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder) Request() *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest {
	return &DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10XWifiConfiguration item
func (b *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequestBuilder) ID(id string) *Windows10XWifiConfigurationRequestBuilder {
	bb := &Windows10XWifiConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest is request for Windows10XWifiConfiguration collection
type DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10XWifiConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10XWifiConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10XWifiConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10XWifiConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10XWifiConfiguration collection, max N pages
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10XWifiConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10XWifiConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10XWifiConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10XWifiConfiguration collection
func (r *DeviceManagementResourceAccessProfilesCollectionWindows10XWifiConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10XWifiConfiguration) (resObj *Windows10XWifiConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}
