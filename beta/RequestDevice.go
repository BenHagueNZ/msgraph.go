// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// DeviceRequestBuilder is request builder for Device
type DeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceRequest
func (b *DeviceRequestBuilder) Request() *DeviceRequest {
	return &DeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceRequest is request for Device
type DeviceRequest struct{ BaseRequest }

// Get performs GET request for Device
func (r *DeviceRequest) Get(ctx context.Context) (resObj *Device, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Device
func (r *DeviceRequest) Update(ctx context.Context, reqObj *Device) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Device
func (r *DeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceActionResultRequestBuilder is request builder for DeviceActionResult
type DeviceActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceActionResultRequest
func (b *DeviceActionResultRequestBuilder) Request() *DeviceActionResultRequest {
	return &DeviceActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceActionResultRequest is request for DeviceActionResult
type DeviceActionResultRequest struct{ BaseRequest }

// Get performs GET request for DeviceActionResult
func (r *DeviceActionResultRequest) Get(ctx context.Context) (resObj *DeviceActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceActionResult
func (r *DeviceActionResultRequest) Update(ctx context.Context, reqObj *DeviceActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceActionResult
func (r *DeviceActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementAssignedRoleDetailsRequestBuilder is request builder for DeviceAndAppManagementAssignedRoleDetails
type DeviceAndAppManagementAssignedRoleDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementAssignedRoleDetailsRequest
func (b *DeviceAndAppManagementAssignedRoleDetailsRequestBuilder) Request() *DeviceAndAppManagementAssignedRoleDetailsRequest {
	return &DeviceAndAppManagementAssignedRoleDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementAssignedRoleDetailsRequest is request for DeviceAndAppManagementAssignedRoleDetails
type DeviceAndAppManagementAssignedRoleDetailsRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementAssignedRoleDetails
func (r *DeviceAndAppManagementAssignedRoleDetailsRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementAssignedRoleDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementAssignedRoleDetails
func (r *DeviceAndAppManagementAssignedRoleDetailsRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementAssignedRoleDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementAssignedRoleDetails
func (r *DeviceAndAppManagementAssignedRoleDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementAssignmentFilterRequestBuilder is request builder for DeviceAndAppManagementAssignmentFilter
type DeviceAndAppManagementAssignmentFilterRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementAssignmentFilterRequest
func (b *DeviceAndAppManagementAssignmentFilterRequestBuilder) Request() *DeviceAndAppManagementAssignmentFilterRequest {
	return &DeviceAndAppManagementAssignmentFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementAssignmentFilterRequest is request for DeviceAndAppManagementAssignmentFilter
type DeviceAndAppManagementAssignmentFilterRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementAssignmentFilter
func (r *DeviceAndAppManagementAssignmentFilterRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementAssignmentFilter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementAssignmentFilter
func (r *DeviceAndAppManagementAssignmentFilterRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementAssignmentFilter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementAssignmentFilter
func (r *DeviceAndAppManagementAssignmentFilterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementAssignmentTargetRequestBuilder is request builder for DeviceAndAppManagementAssignmentTarget
type DeviceAndAppManagementAssignmentTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementAssignmentTargetRequest
func (b *DeviceAndAppManagementAssignmentTargetRequestBuilder) Request() *DeviceAndAppManagementAssignmentTargetRequest {
	return &DeviceAndAppManagementAssignmentTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementAssignmentTargetRequest is request for DeviceAndAppManagementAssignmentTarget
type DeviceAndAppManagementAssignmentTargetRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementAssignmentTarget
func (r *DeviceAndAppManagementAssignmentTargetRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementAssignmentTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementAssignmentTarget
func (r *DeviceAndAppManagementAssignmentTargetRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementAssignmentTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementAssignmentTarget
func (r *DeviceAndAppManagementAssignmentTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementDataRequestBuilder is request builder for DeviceAndAppManagementData
type DeviceAndAppManagementDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementDataRequest
func (b *DeviceAndAppManagementDataRequestBuilder) Request() *DeviceAndAppManagementDataRequest {
	return &DeviceAndAppManagementDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementDataRequest is request for DeviceAndAppManagementData
type DeviceAndAppManagementDataRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementData
func (r *DeviceAndAppManagementDataRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementData
func (r *DeviceAndAppManagementDataRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementData
func (r *DeviceAndAppManagementDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementRoleAssignmentRequestBuilder is request builder for DeviceAndAppManagementRoleAssignment
type DeviceAndAppManagementRoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementRoleAssignmentRequest
func (b *DeviceAndAppManagementRoleAssignmentRequestBuilder) Request() *DeviceAndAppManagementRoleAssignmentRequest {
	return &DeviceAndAppManagementRoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementRoleAssignmentRequest is request for DeviceAndAppManagementRoleAssignment
type DeviceAndAppManagementRoleAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementRoleAssignment
func (r *DeviceAndAppManagementRoleAssignmentRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementRoleAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementRoleAssignment
func (r *DeviceAndAppManagementRoleAssignmentRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementRoleAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementRoleAssignment
func (r *DeviceAndAppManagementRoleAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAndAppManagementRoleDefinitionRequestBuilder is request builder for DeviceAndAppManagementRoleDefinition
type DeviceAndAppManagementRoleDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAndAppManagementRoleDefinitionRequest
func (b *DeviceAndAppManagementRoleDefinitionRequestBuilder) Request() *DeviceAndAppManagementRoleDefinitionRequest {
	return &DeviceAndAppManagementRoleDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAndAppManagementRoleDefinitionRequest is request for DeviceAndAppManagementRoleDefinition
type DeviceAndAppManagementRoleDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceAndAppManagementRoleDefinition
func (r *DeviceAndAppManagementRoleDefinitionRequest) Get(ctx context.Context) (resObj *DeviceAndAppManagementRoleDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAndAppManagementRoleDefinition
func (r *DeviceAndAppManagementRoleDefinitionRequest) Update(ctx context.Context, reqObj *DeviceAndAppManagementRoleDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAndAppManagementRoleDefinition
func (r *DeviceAndAppManagementRoleDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAppManagementRequestBuilder is request builder for DeviceAppManagement
type DeviceAppManagementRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAppManagementRequest
func (b *DeviceAppManagementRequestBuilder) Request() *DeviceAppManagementRequest {
	return &DeviceAppManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAppManagementRequest is request for DeviceAppManagement
type DeviceAppManagementRequest struct{ BaseRequest }

// Get performs GET request for DeviceAppManagement
func (r *DeviceAppManagementRequest) Get(ctx context.Context) (resObj *DeviceAppManagement, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAppManagement
func (r *DeviceAppManagementRequest) Update(ctx context.Context, reqObj *DeviceAppManagement) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAppManagement
func (r *DeviceAppManagementRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceAppManagementTaskRequestBuilder is request builder for DeviceAppManagementTask
type DeviceAppManagementTaskRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceAppManagementTaskRequest
func (b *DeviceAppManagementTaskRequestBuilder) Request() *DeviceAppManagementTaskRequest {
	return &DeviceAppManagementTaskRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceAppManagementTaskRequest is request for DeviceAppManagementTask
type DeviceAppManagementTaskRequest struct{ BaseRequest }

// Get performs GET request for DeviceAppManagementTask
func (r *DeviceAppManagementTaskRequest) Get(ctx context.Context) (resObj *DeviceAppManagementTask, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceAppManagementTask
func (r *DeviceAppManagementTaskRequest) Update(ctx context.Context, reqObj *DeviceAppManagementTask) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceAppManagementTask
func (r *DeviceAppManagementTaskRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCategoryRequestBuilder is request builder for DeviceCategory
type DeviceCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCategoryRequest
func (b *DeviceCategoryRequestBuilder) Request() *DeviceCategoryRequest {
	return &DeviceCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCategoryRequest is request for DeviceCategory
type DeviceCategoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceCategory
func (r *DeviceCategoryRequest) Get(ctx context.Context) (resObj *DeviceCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCategory
func (r *DeviceCategoryRequest) Update(ctx context.Context, reqObj *DeviceCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCategory
func (r *DeviceCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComanagementAuthorityConfigurationRequestBuilder is request builder for DeviceComanagementAuthorityConfiguration
type DeviceComanagementAuthorityConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComanagementAuthorityConfigurationRequest
func (b *DeviceComanagementAuthorityConfigurationRequestBuilder) Request() *DeviceComanagementAuthorityConfigurationRequest {
	return &DeviceComanagementAuthorityConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComanagementAuthorityConfigurationRequest is request for DeviceComanagementAuthorityConfiguration
type DeviceComanagementAuthorityConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceComanagementAuthorityConfiguration
func (r *DeviceComanagementAuthorityConfigurationRequest) Get(ctx context.Context) (resObj *DeviceComanagementAuthorityConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComanagementAuthorityConfiguration
func (r *DeviceComanagementAuthorityConfigurationRequest) Update(ctx context.Context, reqObj *DeviceComanagementAuthorityConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComanagementAuthorityConfiguration
func (r *DeviceComanagementAuthorityConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceActionItemRequestBuilder is request builder for DeviceComplianceActionItem
type DeviceComplianceActionItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceActionItemRequest
func (b *DeviceComplianceActionItemRequestBuilder) Request() *DeviceComplianceActionItemRequest {
	return &DeviceComplianceActionItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceActionItemRequest is request for DeviceComplianceActionItem
type DeviceComplianceActionItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceActionItem
func (r *DeviceComplianceActionItemRequest) Get(ctx context.Context) (resObj *DeviceComplianceActionItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceActionItem
func (r *DeviceComplianceActionItemRequest) Update(ctx context.Context, reqObj *DeviceComplianceActionItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceActionItem
func (r *DeviceComplianceActionItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceDeviceOverviewRequestBuilder is request builder for DeviceComplianceDeviceOverview
type DeviceComplianceDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceDeviceOverviewRequest
func (b *DeviceComplianceDeviceOverviewRequestBuilder) Request() *DeviceComplianceDeviceOverviewRequest {
	return &DeviceComplianceDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceDeviceOverviewRequest is request for DeviceComplianceDeviceOverview
type DeviceComplianceDeviceOverviewRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceDeviceOverview
func (r *DeviceComplianceDeviceOverviewRequest) Get(ctx context.Context) (resObj *DeviceComplianceDeviceOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceDeviceOverview
func (r *DeviceComplianceDeviceOverviewRequest) Update(ctx context.Context, reqObj *DeviceComplianceDeviceOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceDeviceOverview
func (r *DeviceComplianceDeviceOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceDeviceStatusRequestBuilder is request builder for DeviceComplianceDeviceStatus
type DeviceComplianceDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceDeviceStatusRequest
func (b *DeviceComplianceDeviceStatusRequestBuilder) Request() *DeviceComplianceDeviceStatusRequest {
	return &DeviceComplianceDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceDeviceStatusRequest is request for DeviceComplianceDeviceStatus
type DeviceComplianceDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceDeviceStatus
func (r *DeviceComplianceDeviceStatusRequest) Get(ctx context.Context) (resObj *DeviceComplianceDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceDeviceStatus
func (r *DeviceComplianceDeviceStatusRequest) Update(ctx context.Context, reqObj *DeviceComplianceDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceDeviceStatus
func (r *DeviceComplianceDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyRequestBuilder is request builder for DeviceCompliancePolicy
type DeviceCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyRequest
func (b *DeviceCompliancePolicyRequestBuilder) Request() *DeviceCompliancePolicyRequest {
	return &DeviceCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyRequest is request for DeviceCompliancePolicy
type DeviceCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicy
func (r *DeviceCompliancePolicyRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicy
func (r *DeviceCompliancePolicyRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicy
func (r *DeviceCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyAssignmentRequestBuilder is request builder for DeviceCompliancePolicyAssignment
type DeviceCompliancePolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyAssignmentRequest
func (b *DeviceCompliancePolicyAssignmentRequestBuilder) Request() *DeviceCompliancePolicyAssignmentRequest {
	return &DeviceCompliancePolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyAssignmentRequest is request for DeviceCompliancePolicyAssignment
type DeviceCompliancePolicyAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyAssignment
func (r *DeviceCompliancePolicyAssignmentRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyAssignment
func (r *DeviceCompliancePolicyAssignmentRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyAssignment
func (r *DeviceCompliancePolicyAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyDeviceStateSummaryRequestBuilder is request builder for DeviceCompliancePolicyDeviceStateSummary
type DeviceCompliancePolicyDeviceStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyDeviceStateSummaryRequest
func (b *DeviceCompliancePolicyDeviceStateSummaryRequestBuilder) Request() *DeviceCompliancePolicyDeviceStateSummaryRequest {
	return &DeviceCompliancePolicyDeviceStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyDeviceStateSummaryRequest is request for DeviceCompliancePolicyDeviceStateSummary
type DeviceCompliancePolicyDeviceStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyDeviceStateSummary
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyDeviceStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyDeviceStateSummary
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyDeviceStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyDeviceStateSummary
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyGroupAssignmentRequestBuilder is request builder for DeviceCompliancePolicyGroupAssignment
type DeviceCompliancePolicyGroupAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyGroupAssignmentRequest
func (b *DeviceCompliancePolicyGroupAssignmentRequestBuilder) Request() *DeviceCompliancePolicyGroupAssignmentRequest {
	return &DeviceCompliancePolicyGroupAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyGroupAssignmentRequest is request for DeviceCompliancePolicyGroupAssignment
type DeviceCompliancePolicyGroupAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyGroupAssignment
func (r *DeviceCompliancePolicyGroupAssignmentRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyGroupAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyGroupAssignment
func (r *DeviceCompliancePolicyGroupAssignmentRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyGroupAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyGroupAssignment
func (r *DeviceCompliancePolicyGroupAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyPolicySetItemRequestBuilder is request builder for DeviceCompliancePolicyPolicySetItem
type DeviceCompliancePolicyPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyPolicySetItemRequest
func (b *DeviceCompliancePolicyPolicySetItemRequestBuilder) Request() *DeviceCompliancePolicyPolicySetItemRequest {
	return &DeviceCompliancePolicyPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyPolicySetItemRequest is request for DeviceCompliancePolicyPolicySetItem
type DeviceCompliancePolicyPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyPolicySetItem
func (r *DeviceCompliancePolicyPolicySetItemRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyPolicySetItem
func (r *DeviceCompliancePolicyPolicySetItemRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyPolicySetItem
func (r *DeviceCompliancePolicyPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyScriptRequestBuilder is request builder for DeviceCompliancePolicyScript
type DeviceCompliancePolicyScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyScriptRequest
func (b *DeviceCompliancePolicyScriptRequestBuilder) Request() *DeviceCompliancePolicyScriptRequest {
	return &DeviceCompliancePolicyScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyScriptRequest is request for DeviceCompliancePolicyScript
type DeviceCompliancePolicyScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyScript
func (r *DeviceCompliancePolicyScriptRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyScript
func (r *DeviceCompliancePolicyScriptRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyScript
func (r *DeviceCompliancePolicyScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicySettingStateRequestBuilder is request builder for DeviceCompliancePolicySettingState
type DeviceCompliancePolicySettingStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicySettingStateRequest
func (b *DeviceCompliancePolicySettingStateRequestBuilder) Request() *DeviceCompliancePolicySettingStateRequest {
	return &DeviceCompliancePolicySettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicySettingStateRequest is request for DeviceCompliancePolicySettingState
type DeviceCompliancePolicySettingStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicySettingState
func (r *DeviceCompliancePolicySettingStateRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicySettingState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicySettingState
func (r *DeviceCompliancePolicySettingStateRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicySettingState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicySettingState
func (r *DeviceCompliancePolicySettingStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicySettingStateSummaryRequestBuilder is request builder for DeviceCompliancePolicySettingStateSummary
type DeviceCompliancePolicySettingStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicySettingStateSummaryRequest
func (b *DeviceCompliancePolicySettingStateSummaryRequestBuilder) Request() *DeviceCompliancePolicySettingStateSummaryRequest {
	return &DeviceCompliancePolicySettingStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicySettingStateSummaryRequest is request for DeviceCompliancePolicySettingStateSummary
type DeviceCompliancePolicySettingStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicySettingStateSummary
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicySettingStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicySettingStateSummary
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicySettingStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicySettingStateSummary
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCompliancePolicyStateRequestBuilder is request builder for DeviceCompliancePolicyState
type DeviceCompliancePolicyStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCompliancePolicyStateRequest
func (b *DeviceCompliancePolicyStateRequestBuilder) Request() *DeviceCompliancePolicyStateRequest {
	return &DeviceCompliancePolicyStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCompliancePolicyStateRequest is request for DeviceCompliancePolicyState
type DeviceCompliancePolicyStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceCompliancePolicyState
func (r *DeviceCompliancePolicyStateRequest) Get(ctx context.Context) (resObj *DeviceCompliancePolicyState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCompliancePolicyState
func (r *DeviceCompliancePolicyStateRequest) Update(ctx context.Context, reqObj *DeviceCompliancePolicyState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCompliancePolicyState
func (r *DeviceCompliancePolicyStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScheduledActionForRuleRequestBuilder is request builder for DeviceComplianceScheduledActionForRule
type DeviceComplianceScheduledActionForRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScheduledActionForRuleRequest
func (b *DeviceComplianceScheduledActionForRuleRequestBuilder) Request() *DeviceComplianceScheduledActionForRuleRequest {
	return &DeviceComplianceScheduledActionForRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScheduledActionForRuleRequest is request for DeviceComplianceScheduledActionForRule
type DeviceComplianceScheduledActionForRuleRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScheduledActionForRule
func (r *DeviceComplianceScheduledActionForRuleRequest) Get(ctx context.Context) (resObj *DeviceComplianceScheduledActionForRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScheduledActionForRule
func (r *DeviceComplianceScheduledActionForRuleRequest) Update(ctx context.Context, reqObj *DeviceComplianceScheduledActionForRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScheduledActionForRule
func (r *DeviceComplianceScheduledActionForRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptRequestBuilder is request builder for DeviceComplianceScript
type DeviceComplianceScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptRequest
func (b *DeviceComplianceScriptRequestBuilder) Request() *DeviceComplianceScriptRequest {
	return &DeviceComplianceScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptRequest is request for DeviceComplianceScript
type DeviceComplianceScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScript
func (r *DeviceComplianceScriptRequest) Get(ctx context.Context) (resObj *DeviceComplianceScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScript
func (r *DeviceComplianceScriptRequest) Update(ctx context.Context, reqObj *DeviceComplianceScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScript
func (r *DeviceComplianceScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptDeviceStateRequestBuilder is request builder for DeviceComplianceScriptDeviceState
type DeviceComplianceScriptDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptDeviceStateRequest
func (b *DeviceComplianceScriptDeviceStateRequestBuilder) Request() *DeviceComplianceScriptDeviceStateRequest {
	return &DeviceComplianceScriptDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptDeviceStateRequest is request for DeviceComplianceScriptDeviceState
type DeviceComplianceScriptDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptDeviceState
func (r *DeviceComplianceScriptDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptDeviceState
func (r *DeviceComplianceScriptDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptDeviceState
func (r *DeviceComplianceScriptDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptErrorRequestBuilder is request builder for DeviceComplianceScriptError
type DeviceComplianceScriptErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptErrorRequest
func (b *DeviceComplianceScriptErrorRequestBuilder) Request() *DeviceComplianceScriptErrorRequest {
	return &DeviceComplianceScriptErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptErrorRequest is request for DeviceComplianceScriptError
type DeviceComplianceScriptErrorRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptError
func (r *DeviceComplianceScriptErrorRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptError
func (r *DeviceComplianceScriptErrorRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptError
func (r *DeviceComplianceScriptErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptRuleRequestBuilder is request builder for DeviceComplianceScriptRule
type DeviceComplianceScriptRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptRuleRequest
func (b *DeviceComplianceScriptRuleRequestBuilder) Request() *DeviceComplianceScriptRuleRequest {
	return &DeviceComplianceScriptRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptRuleRequest is request for DeviceComplianceScriptRule
type DeviceComplianceScriptRuleRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptRule
func (r *DeviceComplianceScriptRuleRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptRule
func (r *DeviceComplianceScriptRuleRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptRule
func (r *DeviceComplianceScriptRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptRuleErrorRequestBuilder is request builder for DeviceComplianceScriptRuleError
type DeviceComplianceScriptRuleErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptRuleErrorRequest
func (b *DeviceComplianceScriptRuleErrorRequestBuilder) Request() *DeviceComplianceScriptRuleErrorRequest {
	return &DeviceComplianceScriptRuleErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptRuleErrorRequest is request for DeviceComplianceScriptRuleError
type DeviceComplianceScriptRuleErrorRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptRuleError
func (r *DeviceComplianceScriptRuleErrorRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptRuleError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptRuleError
func (r *DeviceComplianceScriptRuleErrorRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptRuleError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptRuleError
func (r *DeviceComplianceScriptRuleErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptRunSummaryRequestBuilder is request builder for DeviceComplianceScriptRunSummary
type DeviceComplianceScriptRunSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptRunSummaryRequest
func (b *DeviceComplianceScriptRunSummaryRequestBuilder) Request() *DeviceComplianceScriptRunSummaryRequest {
	return &DeviceComplianceScriptRunSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptRunSummaryRequest is request for DeviceComplianceScriptRunSummary
type DeviceComplianceScriptRunSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptRunSummary
func (r *DeviceComplianceScriptRunSummaryRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptRunSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptRunSummary
func (r *DeviceComplianceScriptRunSummaryRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptRunSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptRunSummary
func (r *DeviceComplianceScriptRunSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceScriptValidationResultRequestBuilder is request builder for DeviceComplianceScriptValidationResult
type DeviceComplianceScriptValidationResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceScriptValidationResultRequest
func (b *DeviceComplianceScriptValidationResultRequestBuilder) Request() *DeviceComplianceScriptValidationResultRequest {
	return &DeviceComplianceScriptValidationResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceScriptValidationResultRequest is request for DeviceComplianceScriptValidationResult
type DeviceComplianceScriptValidationResultRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceScriptValidationResult
func (r *DeviceComplianceScriptValidationResultRequest) Get(ctx context.Context) (resObj *DeviceComplianceScriptValidationResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceScriptValidationResult
func (r *DeviceComplianceScriptValidationResultRequest) Update(ctx context.Context, reqObj *DeviceComplianceScriptValidationResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceScriptValidationResult
func (r *DeviceComplianceScriptValidationResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceSettingStateRequestBuilder is request builder for DeviceComplianceSettingState
type DeviceComplianceSettingStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceSettingStateRequest
func (b *DeviceComplianceSettingStateRequestBuilder) Request() *DeviceComplianceSettingStateRequest {
	return &DeviceComplianceSettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceSettingStateRequest is request for DeviceComplianceSettingState
type DeviceComplianceSettingStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceSettingState
func (r *DeviceComplianceSettingStateRequest) Get(ctx context.Context) (resObj *DeviceComplianceSettingState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceSettingState
func (r *DeviceComplianceSettingStateRequest) Update(ctx context.Context, reqObj *DeviceComplianceSettingState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceSettingState
func (r *DeviceComplianceSettingStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceUserOverviewRequestBuilder is request builder for DeviceComplianceUserOverview
type DeviceComplianceUserOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceUserOverviewRequest
func (b *DeviceComplianceUserOverviewRequestBuilder) Request() *DeviceComplianceUserOverviewRequest {
	return &DeviceComplianceUserOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceUserOverviewRequest is request for DeviceComplianceUserOverview
type DeviceComplianceUserOverviewRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceUserOverview
func (r *DeviceComplianceUserOverviewRequest) Get(ctx context.Context) (resObj *DeviceComplianceUserOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceUserOverview
func (r *DeviceComplianceUserOverviewRequest) Update(ctx context.Context, reqObj *DeviceComplianceUserOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceUserOverview
func (r *DeviceComplianceUserOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceComplianceUserStatusRequestBuilder is request builder for DeviceComplianceUserStatus
type DeviceComplianceUserStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceComplianceUserStatusRequest
func (b *DeviceComplianceUserStatusRequestBuilder) Request() *DeviceComplianceUserStatusRequest {
	return &DeviceComplianceUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceComplianceUserStatusRequest is request for DeviceComplianceUserStatus
type DeviceComplianceUserStatusRequest struct{ BaseRequest }

// Get performs GET request for DeviceComplianceUserStatus
func (r *DeviceComplianceUserStatusRequest) Get(ctx context.Context) (resObj *DeviceComplianceUserStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceComplianceUserStatus
func (r *DeviceComplianceUserStatusRequest) Update(ctx context.Context, reqObj *DeviceComplianceUserStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceComplianceUserStatus
func (r *DeviceComplianceUserStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationRequestBuilder is request builder for DeviceConfiguration
type DeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationRequest
func (b *DeviceConfigurationRequestBuilder) Request() *DeviceConfigurationRequest {
	return &DeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationRequest is request for DeviceConfiguration
type DeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfiguration
func (r *DeviceConfigurationRequest) Get(ctx context.Context) (resObj *DeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfiguration
func (r *DeviceConfigurationRequest) Update(ctx context.Context, reqObj *DeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfiguration
func (r *DeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationAssignmentRequestBuilder is request builder for DeviceConfigurationAssignment
type DeviceConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationAssignmentRequest
func (b *DeviceConfigurationAssignmentRequestBuilder) Request() *DeviceConfigurationAssignmentRequest {
	return &DeviceConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationAssignmentRequest is request for DeviceConfigurationAssignment
type DeviceConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationAssignment
func (r *DeviceConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *DeviceConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationAssignment
func (r *DeviceConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *DeviceConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationAssignment
func (r *DeviceConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationConflictSummaryRequestBuilder is request builder for DeviceConfigurationConflictSummary
type DeviceConfigurationConflictSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationConflictSummaryRequest
func (b *DeviceConfigurationConflictSummaryRequestBuilder) Request() *DeviceConfigurationConflictSummaryRequest {
	return &DeviceConfigurationConflictSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationConflictSummaryRequest is request for DeviceConfigurationConflictSummary
type DeviceConfigurationConflictSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationConflictSummary
func (r *DeviceConfigurationConflictSummaryRequest) Get(ctx context.Context) (resObj *DeviceConfigurationConflictSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationConflictSummary
func (r *DeviceConfigurationConflictSummaryRequest) Update(ctx context.Context, reqObj *DeviceConfigurationConflictSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationConflictSummary
func (r *DeviceConfigurationConflictSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceOverviewRequestBuilder is request builder for DeviceConfigurationDeviceOverview
type DeviceConfigurationDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationDeviceOverviewRequest
func (b *DeviceConfigurationDeviceOverviewRequestBuilder) Request() *DeviceConfigurationDeviceOverviewRequest {
	return &DeviceConfigurationDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationDeviceOverviewRequest is request for DeviceConfigurationDeviceOverview
type DeviceConfigurationDeviceOverviewRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationDeviceOverview
func (r *DeviceConfigurationDeviceOverviewRequest) Get(ctx context.Context) (resObj *DeviceConfigurationDeviceOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationDeviceOverview
func (r *DeviceConfigurationDeviceOverviewRequest) Update(ctx context.Context, reqObj *DeviceConfigurationDeviceOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationDeviceOverview
func (r *DeviceConfigurationDeviceOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceStateSummaryRequestBuilder is request builder for DeviceConfigurationDeviceStateSummary
type DeviceConfigurationDeviceStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationDeviceStateSummaryRequest
func (b *DeviceConfigurationDeviceStateSummaryRequestBuilder) Request() *DeviceConfigurationDeviceStateSummaryRequest {
	return &DeviceConfigurationDeviceStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationDeviceStateSummaryRequest is request for DeviceConfigurationDeviceStateSummary
type DeviceConfigurationDeviceStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationDeviceStateSummary
func (r *DeviceConfigurationDeviceStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceConfigurationDeviceStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationDeviceStateSummary
func (r *DeviceConfigurationDeviceStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceConfigurationDeviceStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationDeviceStateSummary
func (r *DeviceConfigurationDeviceStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceStatusRequestBuilder is request builder for DeviceConfigurationDeviceStatus
type DeviceConfigurationDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationDeviceStatusRequest
func (b *DeviceConfigurationDeviceStatusRequestBuilder) Request() *DeviceConfigurationDeviceStatusRequest {
	return &DeviceConfigurationDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationDeviceStatusRequest is request for DeviceConfigurationDeviceStatus
type DeviceConfigurationDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationDeviceStatus
func (r *DeviceConfigurationDeviceStatusRequest) Get(ctx context.Context) (resObj *DeviceConfigurationDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationDeviceStatus
func (r *DeviceConfigurationDeviceStatusRequest) Update(ctx context.Context, reqObj *DeviceConfigurationDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationDeviceStatus
func (r *DeviceConfigurationDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationGroupAssignmentRequestBuilder is request builder for DeviceConfigurationGroupAssignment
type DeviceConfigurationGroupAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationGroupAssignmentRequest
func (b *DeviceConfigurationGroupAssignmentRequestBuilder) Request() *DeviceConfigurationGroupAssignmentRequest {
	return &DeviceConfigurationGroupAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationGroupAssignmentRequest is request for DeviceConfigurationGroupAssignment
type DeviceConfigurationGroupAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationGroupAssignment
func (r *DeviceConfigurationGroupAssignmentRequest) Get(ctx context.Context) (resObj *DeviceConfigurationGroupAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationGroupAssignment
func (r *DeviceConfigurationGroupAssignmentRequest) Update(ctx context.Context, reqObj *DeviceConfigurationGroupAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationGroupAssignment
func (r *DeviceConfigurationGroupAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationPolicySetItemRequestBuilder is request builder for DeviceConfigurationPolicySetItem
type DeviceConfigurationPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationPolicySetItemRequest
func (b *DeviceConfigurationPolicySetItemRequestBuilder) Request() *DeviceConfigurationPolicySetItemRequest {
	return &DeviceConfigurationPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationPolicySetItemRequest is request for DeviceConfigurationPolicySetItem
type DeviceConfigurationPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationPolicySetItem
func (r *DeviceConfigurationPolicySetItemRequest) Get(ctx context.Context) (resObj *DeviceConfigurationPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationPolicySetItem
func (r *DeviceConfigurationPolicySetItemRequest) Update(ctx context.Context, reqObj *DeviceConfigurationPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationPolicySetItem
func (r *DeviceConfigurationPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationSettingStateRequestBuilder is request builder for DeviceConfigurationSettingState
type DeviceConfigurationSettingStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationSettingStateRequest
func (b *DeviceConfigurationSettingStateRequestBuilder) Request() *DeviceConfigurationSettingStateRequest {
	return &DeviceConfigurationSettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationSettingStateRequest is request for DeviceConfigurationSettingState
type DeviceConfigurationSettingStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationSettingState
func (r *DeviceConfigurationSettingStateRequest) Get(ctx context.Context) (resObj *DeviceConfigurationSettingState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationSettingState
func (r *DeviceConfigurationSettingStateRequest) Update(ctx context.Context, reqObj *DeviceConfigurationSettingState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationSettingState
func (r *DeviceConfigurationSettingStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationStateRequestBuilder is request builder for DeviceConfigurationState
type DeviceConfigurationStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationStateRequest
func (b *DeviceConfigurationStateRequestBuilder) Request() *DeviceConfigurationStateRequest {
	return &DeviceConfigurationStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationStateRequest is request for DeviceConfigurationState
type DeviceConfigurationStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationState
func (r *DeviceConfigurationStateRequest) Get(ctx context.Context) (resObj *DeviceConfigurationState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationState
func (r *DeviceConfigurationStateRequest) Update(ctx context.Context, reqObj *DeviceConfigurationState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationState
func (r *DeviceConfigurationStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationTargetedUserAndDeviceRequestBuilder is request builder for DeviceConfigurationTargetedUserAndDevice
type DeviceConfigurationTargetedUserAndDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationTargetedUserAndDeviceRequest
func (b *DeviceConfigurationTargetedUserAndDeviceRequestBuilder) Request() *DeviceConfigurationTargetedUserAndDeviceRequest {
	return &DeviceConfigurationTargetedUserAndDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationTargetedUserAndDeviceRequest is request for DeviceConfigurationTargetedUserAndDevice
type DeviceConfigurationTargetedUserAndDeviceRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationTargetedUserAndDevice
func (r *DeviceConfigurationTargetedUserAndDeviceRequest) Get(ctx context.Context) (resObj *DeviceConfigurationTargetedUserAndDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationTargetedUserAndDevice
func (r *DeviceConfigurationTargetedUserAndDeviceRequest) Update(ctx context.Context, reqObj *DeviceConfigurationTargetedUserAndDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationTargetedUserAndDevice
func (r *DeviceConfigurationTargetedUserAndDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationUserOverviewRequestBuilder is request builder for DeviceConfigurationUserOverview
type DeviceConfigurationUserOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationUserOverviewRequest
func (b *DeviceConfigurationUserOverviewRequestBuilder) Request() *DeviceConfigurationUserOverviewRequest {
	return &DeviceConfigurationUserOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationUserOverviewRequest is request for DeviceConfigurationUserOverview
type DeviceConfigurationUserOverviewRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationUserOverview
func (r *DeviceConfigurationUserOverviewRequest) Get(ctx context.Context) (resObj *DeviceConfigurationUserOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationUserOverview
func (r *DeviceConfigurationUserOverviewRequest) Update(ctx context.Context, reqObj *DeviceConfigurationUserOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationUserOverview
func (r *DeviceConfigurationUserOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationUserStateSummaryRequestBuilder is request builder for DeviceConfigurationUserStateSummary
type DeviceConfigurationUserStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationUserStateSummaryRequest
func (b *DeviceConfigurationUserStateSummaryRequestBuilder) Request() *DeviceConfigurationUserStateSummaryRequest {
	return &DeviceConfigurationUserStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationUserStateSummaryRequest is request for DeviceConfigurationUserStateSummary
type DeviceConfigurationUserStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationUserStateSummary
func (r *DeviceConfigurationUserStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceConfigurationUserStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationUserStateSummary
func (r *DeviceConfigurationUserStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceConfigurationUserStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationUserStateSummary
func (r *DeviceConfigurationUserStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceConfigurationUserStatusRequestBuilder is request builder for DeviceConfigurationUserStatus
type DeviceConfigurationUserStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceConfigurationUserStatusRequest
func (b *DeviceConfigurationUserStatusRequestBuilder) Request() *DeviceConfigurationUserStatusRequest {
	return &DeviceConfigurationUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceConfigurationUserStatusRequest is request for DeviceConfigurationUserStatus
type DeviceConfigurationUserStatusRequest struct{ BaseRequest }

// Get performs GET request for DeviceConfigurationUserStatus
func (r *DeviceConfigurationUserStatusRequest) Get(ctx context.Context) (resObj *DeviceConfigurationUserStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceConfigurationUserStatus
func (r *DeviceConfigurationUserStatusRequest) Update(ctx context.Context, reqObj *DeviceConfigurationUserStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceConfigurationUserStatus
func (r *DeviceConfigurationUserStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceCustomAttributeShellScriptRequestBuilder is request builder for DeviceCustomAttributeShellScript
type DeviceCustomAttributeShellScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceCustomAttributeShellScriptRequest
func (b *DeviceCustomAttributeShellScriptRequestBuilder) Request() *DeviceCustomAttributeShellScriptRequest {
	return &DeviceCustomAttributeShellScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceCustomAttributeShellScriptRequest is request for DeviceCustomAttributeShellScript
type DeviceCustomAttributeShellScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceCustomAttributeShellScript
func (r *DeviceCustomAttributeShellScriptRequest) Get(ctx context.Context) (resObj *DeviceCustomAttributeShellScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceCustomAttributeShellScript
func (r *DeviceCustomAttributeShellScriptRequest) Update(ctx context.Context, reqObj *DeviceCustomAttributeShellScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceCustomAttributeShellScript
func (r *DeviceCustomAttributeShellScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceDetailRequestBuilder is request builder for DeviceDetail
type DeviceDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceDetailRequest
func (b *DeviceDetailRequestBuilder) Request() *DeviceDetailRequest {
	return &DeviceDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceDetailRequest is request for DeviceDetail
type DeviceDetailRequest struct{ BaseRequest }

// Get performs GET request for DeviceDetail
func (r *DeviceDetailRequest) Get(ctx context.Context) (resObj *DeviceDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceDetail
func (r *DeviceDetailRequest) Update(ctx context.Context, reqObj *DeviceDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceDetail
func (r *DeviceDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentConfigurationRequestBuilder is request builder for DeviceEnrollmentConfiguration
type DeviceEnrollmentConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentConfigurationRequest
func (b *DeviceEnrollmentConfigurationRequestBuilder) Request() *DeviceEnrollmentConfigurationRequest {
	return &DeviceEnrollmentConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentConfigurationRequest is request for DeviceEnrollmentConfiguration
type DeviceEnrollmentConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentConfiguration
func (r *DeviceEnrollmentConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentConfiguration
func (r *DeviceEnrollmentConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentConfiguration
func (r *DeviceEnrollmentConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentLimitConfigurationRequestBuilder is request builder for DeviceEnrollmentLimitConfiguration
type DeviceEnrollmentLimitConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentLimitConfigurationRequest
func (b *DeviceEnrollmentLimitConfigurationRequestBuilder) Request() *DeviceEnrollmentLimitConfigurationRequest {
	return &DeviceEnrollmentLimitConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentLimitConfigurationRequest is request for DeviceEnrollmentLimitConfiguration
type DeviceEnrollmentLimitConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentLimitConfiguration
func (r *DeviceEnrollmentLimitConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentLimitConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentLimitConfiguration
func (r *DeviceEnrollmentLimitConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentLimitConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentLimitConfiguration
func (r *DeviceEnrollmentLimitConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentNotificationConfigurationRequestBuilder is request builder for DeviceEnrollmentNotificationConfiguration
type DeviceEnrollmentNotificationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentNotificationConfigurationRequest
func (b *DeviceEnrollmentNotificationConfigurationRequestBuilder) Request() *DeviceEnrollmentNotificationConfigurationRequest {
	return &DeviceEnrollmentNotificationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentNotificationConfigurationRequest is request for DeviceEnrollmentNotificationConfiguration
type DeviceEnrollmentNotificationConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentNotificationConfiguration
func (r *DeviceEnrollmentNotificationConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentNotificationConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentNotificationConfiguration
func (r *DeviceEnrollmentNotificationConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentNotificationConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentNotificationConfiguration
func (r *DeviceEnrollmentNotificationConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentPlatformRestrictionRequestBuilder is request builder for DeviceEnrollmentPlatformRestriction
type DeviceEnrollmentPlatformRestrictionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentPlatformRestrictionRequest
func (b *DeviceEnrollmentPlatformRestrictionRequestBuilder) Request() *DeviceEnrollmentPlatformRestrictionRequest {
	return &DeviceEnrollmentPlatformRestrictionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentPlatformRestrictionRequest is request for DeviceEnrollmentPlatformRestriction
type DeviceEnrollmentPlatformRestrictionRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentPlatformRestriction
func (r *DeviceEnrollmentPlatformRestrictionRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentPlatformRestriction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentPlatformRestriction
func (r *DeviceEnrollmentPlatformRestrictionRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentPlatformRestriction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentPlatformRestriction
func (r *DeviceEnrollmentPlatformRestrictionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentPlatformRestrictionConfigurationRequestBuilder is request builder for DeviceEnrollmentPlatformRestrictionConfiguration
type DeviceEnrollmentPlatformRestrictionConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentPlatformRestrictionConfigurationRequest
func (b *DeviceEnrollmentPlatformRestrictionConfigurationRequestBuilder) Request() *DeviceEnrollmentPlatformRestrictionConfigurationRequest {
	return &DeviceEnrollmentPlatformRestrictionConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentPlatformRestrictionConfigurationRequest is request for DeviceEnrollmentPlatformRestrictionConfiguration
type DeviceEnrollmentPlatformRestrictionConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentPlatformRestrictionConfiguration
func (r *DeviceEnrollmentPlatformRestrictionConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentPlatformRestrictionConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentPlatformRestrictionConfiguration
func (r *DeviceEnrollmentPlatformRestrictionConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentPlatformRestrictionConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentPlatformRestrictionConfiguration
func (r *DeviceEnrollmentPlatformRestrictionConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentPlatformRestrictionsConfigurationRequestBuilder is request builder for DeviceEnrollmentPlatformRestrictionsConfiguration
type DeviceEnrollmentPlatformRestrictionsConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentPlatformRestrictionsConfigurationRequest
func (b *DeviceEnrollmentPlatformRestrictionsConfigurationRequestBuilder) Request() *DeviceEnrollmentPlatformRestrictionsConfigurationRequest {
	return &DeviceEnrollmentPlatformRestrictionsConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentPlatformRestrictionsConfigurationRequest is request for DeviceEnrollmentPlatformRestrictionsConfiguration
type DeviceEnrollmentPlatformRestrictionsConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentPlatformRestrictionsConfiguration
func (r *DeviceEnrollmentPlatformRestrictionsConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentPlatformRestrictionsConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentPlatformRestrictionsConfiguration
func (r *DeviceEnrollmentPlatformRestrictionsConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentPlatformRestrictionsConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentPlatformRestrictionsConfiguration
func (r *DeviceEnrollmentPlatformRestrictionsConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceEnrollmentWindowsHelloForBusinessConfigurationRequestBuilder is request builder for DeviceEnrollmentWindowsHelloForBusinessConfiguration
type DeviceEnrollmentWindowsHelloForBusinessConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest
func (b *DeviceEnrollmentWindowsHelloForBusinessConfigurationRequestBuilder) Request() *DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest {
	return &DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest is request for DeviceEnrollmentWindowsHelloForBusinessConfiguration
type DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceEnrollmentWindowsHelloForBusinessConfiguration
func (r *DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest) Get(ctx context.Context) (resObj *DeviceEnrollmentWindowsHelloForBusinessConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceEnrollmentWindowsHelloForBusinessConfiguration
func (r *DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest) Update(ctx context.Context, reqObj *DeviceEnrollmentWindowsHelloForBusinessConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceEnrollmentWindowsHelloForBusinessConfiguration
func (r *DeviceEnrollmentWindowsHelloForBusinessConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceExchangeAccessStateSummaryRequestBuilder is request builder for DeviceExchangeAccessStateSummary
type DeviceExchangeAccessStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceExchangeAccessStateSummaryRequest
func (b *DeviceExchangeAccessStateSummaryRequestBuilder) Request() *DeviceExchangeAccessStateSummaryRequest {
	return &DeviceExchangeAccessStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceExchangeAccessStateSummaryRequest is request for DeviceExchangeAccessStateSummary
type DeviceExchangeAccessStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceExchangeAccessStateSummary
func (r *DeviceExchangeAccessStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceExchangeAccessStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceExchangeAccessStateSummary
func (r *DeviceExchangeAccessStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceExchangeAccessStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceExchangeAccessStateSummary
func (r *DeviceExchangeAccessStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceGeoLocationRequestBuilder is request builder for DeviceGeoLocation
type DeviceGeoLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceGeoLocationRequest
func (b *DeviceGeoLocationRequestBuilder) Request() *DeviceGeoLocationRequest {
	return &DeviceGeoLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceGeoLocationRequest is request for DeviceGeoLocation
type DeviceGeoLocationRequest struct{ BaseRequest }

// Get performs GET request for DeviceGeoLocation
func (r *DeviceGeoLocationRequest) Get(ctx context.Context) (resObj *DeviceGeoLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceGeoLocation
func (r *DeviceGeoLocationRequest) Update(ctx context.Context, reqObj *DeviceGeoLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceGeoLocation
func (r *DeviceGeoLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthRequestBuilder is request builder for DeviceHealth
type DeviceHealthRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthRequest
func (b *DeviceHealthRequestBuilder) Request() *DeviceHealthRequest {
	return &DeviceHealthRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthRequest is request for DeviceHealth
type DeviceHealthRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealth
func (r *DeviceHealthRequest) Get(ctx context.Context) (resObj *DeviceHealth, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealth
func (r *DeviceHealthRequest) Update(ctx context.Context, reqObj *DeviceHealth) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealth
func (r *DeviceHealthRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthAttestationStateRequestBuilder is request builder for DeviceHealthAttestationState
type DeviceHealthAttestationStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthAttestationStateRequest
func (b *DeviceHealthAttestationStateRequestBuilder) Request() *DeviceHealthAttestationStateRequest {
	return &DeviceHealthAttestationStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthAttestationStateRequest is request for DeviceHealthAttestationState
type DeviceHealthAttestationStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthAttestationState
func (r *DeviceHealthAttestationStateRequest) Get(ctx context.Context) (resObj *DeviceHealthAttestationState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthAttestationState
func (r *DeviceHealthAttestationStateRequest) Update(ctx context.Context, reqObj *DeviceHealthAttestationState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthAttestationState
func (r *DeviceHealthAttestationStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRequestBuilder is request builder for DeviceHealthScript
type DeviceHealthScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRequest
func (b *DeviceHealthScriptRequestBuilder) Request() *DeviceHealthScriptRequest {
	return &DeviceHealthScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRequest is request for DeviceHealthScript
type DeviceHealthScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScript
func (r *DeviceHealthScriptRequest) Get(ctx context.Context) (resObj *DeviceHealthScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScript
func (r *DeviceHealthScriptRequest) Update(ctx context.Context, reqObj *DeviceHealthScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScript
func (r *DeviceHealthScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptAssignmentRequestBuilder is request builder for DeviceHealthScriptAssignment
type DeviceHealthScriptAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptAssignmentRequest
func (b *DeviceHealthScriptAssignmentRequestBuilder) Request() *DeviceHealthScriptAssignmentRequest {
	return &DeviceHealthScriptAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptAssignmentRequest is request for DeviceHealthScriptAssignment
type DeviceHealthScriptAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptBooleanParameterRequestBuilder is request builder for DeviceHealthScriptBooleanParameter
type DeviceHealthScriptBooleanParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptBooleanParameterRequest
func (b *DeviceHealthScriptBooleanParameterRequestBuilder) Request() *DeviceHealthScriptBooleanParameterRequest {
	return &DeviceHealthScriptBooleanParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptBooleanParameterRequest is request for DeviceHealthScriptBooleanParameter
type DeviceHealthScriptBooleanParameterRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptBooleanParameter
func (r *DeviceHealthScriptBooleanParameterRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptBooleanParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptBooleanParameter
func (r *DeviceHealthScriptBooleanParameterRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptBooleanParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptBooleanParameter
func (r *DeviceHealthScriptBooleanParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptDailyScheduleRequestBuilder is request builder for DeviceHealthScriptDailySchedule
type DeviceHealthScriptDailyScheduleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptDailyScheduleRequest
func (b *DeviceHealthScriptDailyScheduleRequestBuilder) Request() *DeviceHealthScriptDailyScheduleRequest {
	return &DeviceHealthScriptDailyScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptDailyScheduleRequest is request for DeviceHealthScriptDailySchedule
type DeviceHealthScriptDailyScheduleRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptDailySchedule
func (r *DeviceHealthScriptDailyScheduleRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptDailySchedule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptDailySchedule
func (r *DeviceHealthScriptDailyScheduleRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptDailySchedule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptDailySchedule
func (r *DeviceHealthScriptDailyScheduleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptDeviceStateRequestBuilder is request builder for DeviceHealthScriptDeviceState
type DeviceHealthScriptDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptDeviceStateRequest
func (b *DeviceHealthScriptDeviceStateRequestBuilder) Request() *DeviceHealthScriptDeviceStateRequest {
	return &DeviceHealthScriptDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptDeviceStateRequest is request for DeviceHealthScriptDeviceState
type DeviceHealthScriptDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptHourlyScheduleRequestBuilder is request builder for DeviceHealthScriptHourlySchedule
type DeviceHealthScriptHourlyScheduleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptHourlyScheduleRequest
func (b *DeviceHealthScriptHourlyScheduleRequestBuilder) Request() *DeviceHealthScriptHourlyScheduleRequest {
	return &DeviceHealthScriptHourlyScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptHourlyScheduleRequest is request for DeviceHealthScriptHourlySchedule
type DeviceHealthScriptHourlyScheduleRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptHourlySchedule
func (r *DeviceHealthScriptHourlyScheduleRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptHourlySchedule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptHourlySchedule
func (r *DeviceHealthScriptHourlyScheduleRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptHourlySchedule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptHourlySchedule
func (r *DeviceHealthScriptHourlyScheduleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptIntegerParameterRequestBuilder is request builder for DeviceHealthScriptIntegerParameter
type DeviceHealthScriptIntegerParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptIntegerParameterRequest
func (b *DeviceHealthScriptIntegerParameterRequestBuilder) Request() *DeviceHealthScriptIntegerParameterRequest {
	return &DeviceHealthScriptIntegerParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptIntegerParameterRequest is request for DeviceHealthScriptIntegerParameter
type DeviceHealthScriptIntegerParameterRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptIntegerParameter
func (r *DeviceHealthScriptIntegerParameterRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptIntegerParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptIntegerParameter
func (r *DeviceHealthScriptIntegerParameterRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptIntegerParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptIntegerParameter
func (r *DeviceHealthScriptIntegerParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptParameterRequestBuilder is request builder for DeviceHealthScriptParameter
type DeviceHealthScriptParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptParameterRequest
func (b *DeviceHealthScriptParameterRequestBuilder) Request() *DeviceHealthScriptParameterRequest {
	return &DeviceHealthScriptParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptParameterRequest is request for DeviceHealthScriptParameter
type DeviceHealthScriptParameterRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptParameter
func (r *DeviceHealthScriptParameterRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptParameter
func (r *DeviceHealthScriptParameterRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptParameter
func (r *DeviceHealthScriptParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptPolicyStateRequestBuilder is request builder for DeviceHealthScriptPolicyState
type DeviceHealthScriptPolicyStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptPolicyStateRequest
func (b *DeviceHealthScriptPolicyStateRequestBuilder) Request() *DeviceHealthScriptPolicyStateRequest {
	return &DeviceHealthScriptPolicyStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptPolicyStateRequest is request for DeviceHealthScriptPolicyState
type DeviceHealthScriptPolicyStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptPolicyState
func (r *DeviceHealthScriptPolicyStateRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptPolicyState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptPolicyState
func (r *DeviceHealthScriptPolicyStateRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptPolicyState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptPolicyState
func (r *DeviceHealthScriptPolicyStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRemediationHistoryRequestBuilder is request builder for DeviceHealthScriptRemediationHistory
type DeviceHealthScriptRemediationHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRemediationHistoryRequest
func (b *DeviceHealthScriptRemediationHistoryRequestBuilder) Request() *DeviceHealthScriptRemediationHistoryRequest {
	return &DeviceHealthScriptRemediationHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRemediationHistoryRequest is request for DeviceHealthScriptRemediationHistory
type DeviceHealthScriptRemediationHistoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRemediationHistory
func (r *DeviceHealthScriptRemediationHistoryRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRemediationHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRemediationHistory
func (r *DeviceHealthScriptRemediationHistoryRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRemediationHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRemediationHistory
func (r *DeviceHealthScriptRemediationHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRemediationHistoryDataRequestBuilder is request builder for DeviceHealthScriptRemediationHistoryData
type DeviceHealthScriptRemediationHistoryDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRemediationHistoryDataRequest
func (b *DeviceHealthScriptRemediationHistoryDataRequestBuilder) Request() *DeviceHealthScriptRemediationHistoryDataRequest {
	return &DeviceHealthScriptRemediationHistoryDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRemediationHistoryDataRequest is request for DeviceHealthScriptRemediationHistoryData
type DeviceHealthScriptRemediationHistoryDataRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRemediationHistoryData
func (r *DeviceHealthScriptRemediationHistoryDataRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRemediationHistoryData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRemediationHistoryData
func (r *DeviceHealthScriptRemediationHistoryDataRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRemediationHistoryData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRemediationHistoryData
func (r *DeviceHealthScriptRemediationHistoryDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRemediationSummaryRequestBuilder is request builder for DeviceHealthScriptRemediationSummary
type DeviceHealthScriptRemediationSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRemediationSummaryRequest
func (b *DeviceHealthScriptRemediationSummaryRequestBuilder) Request() *DeviceHealthScriptRemediationSummaryRequest {
	return &DeviceHealthScriptRemediationSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRemediationSummaryRequest is request for DeviceHealthScriptRemediationSummary
type DeviceHealthScriptRemediationSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRemediationSummary
func (r *DeviceHealthScriptRemediationSummaryRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRemediationSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRemediationSummary
func (r *DeviceHealthScriptRemediationSummaryRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRemediationSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRemediationSummary
func (r *DeviceHealthScriptRemediationSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRunOnceScheduleRequestBuilder is request builder for DeviceHealthScriptRunOnceSchedule
type DeviceHealthScriptRunOnceScheduleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRunOnceScheduleRequest
func (b *DeviceHealthScriptRunOnceScheduleRequestBuilder) Request() *DeviceHealthScriptRunOnceScheduleRequest {
	return &DeviceHealthScriptRunOnceScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRunOnceScheduleRequest is request for DeviceHealthScriptRunOnceSchedule
type DeviceHealthScriptRunOnceScheduleRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRunOnceSchedule
func (r *DeviceHealthScriptRunOnceScheduleRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRunOnceSchedule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRunOnceSchedule
func (r *DeviceHealthScriptRunOnceScheduleRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRunOnceSchedule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRunOnceSchedule
func (r *DeviceHealthScriptRunOnceScheduleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRunScheduleRequestBuilder is request builder for DeviceHealthScriptRunSchedule
type DeviceHealthScriptRunScheduleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRunScheduleRequest
func (b *DeviceHealthScriptRunScheduleRequestBuilder) Request() *DeviceHealthScriptRunScheduleRequest {
	return &DeviceHealthScriptRunScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRunScheduleRequest is request for DeviceHealthScriptRunSchedule
type DeviceHealthScriptRunScheduleRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRunSchedule
func (r *DeviceHealthScriptRunScheduleRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRunSchedule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRunSchedule
func (r *DeviceHealthScriptRunScheduleRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRunSchedule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRunSchedule
func (r *DeviceHealthScriptRunScheduleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptRunSummaryRequestBuilder is request builder for DeviceHealthScriptRunSummary
type DeviceHealthScriptRunSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptRunSummaryRequest
func (b *DeviceHealthScriptRunSummaryRequestBuilder) Request() *DeviceHealthScriptRunSummaryRequest {
	return &DeviceHealthScriptRunSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptRunSummaryRequest is request for DeviceHealthScriptRunSummary
type DeviceHealthScriptRunSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptRunSummary
func (r *DeviceHealthScriptRunSummaryRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptRunSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptRunSummary
func (r *DeviceHealthScriptRunSummaryRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptRunSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptRunSummary
func (r *DeviceHealthScriptRunSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptStringParameterRequestBuilder is request builder for DeviceHealthScriptStringParameter
type DeviceHealthScriptStringParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptStringParameterRequest
func (b *DeviceHealthScriptStringParameterRequestBuilder) Request() *DeviceHealthScriptStringParameterRequest {
	return &DeviceHealthScriptStringParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptStringParameterRequest is request for DeviceHealthScriptStringParameter
type DeviceHealthScriptStringParameterRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptStringParameter
func (r *DeviceHealthScriptStringParameterRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptStringParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptStringParameter
func (r *DeviceHealthScriptStringParameterRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptStringParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptStringParameter
func (r *DeviceHealthScriptStringParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceHealthScriptTimeScheduleRequestBuilder is request builder for DeviceHealthScriptTimeSchedule
type DeviceHealthScriptTimeScheduleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptTimeScheduleRequest
func (b *DeviceHealthScriptTimeScheduleRequestBuilder) Request() *DeviceHealthScriptTimeScheduleRequest {
	return &DeviceHealthScriptTimeScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptTimeScheduleRequest is request for DeviceHealthScriptTimeSchedule
type DeviceHealthScriptTimeScheduleRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptTimeSchedule
func (r *DeviceHealthScriptTimeScheduleRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptTimeSchedule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptTimeSchedule
func (r *DeviceHealthScriptTimeScheduleRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptTimeSchedule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptTimeSchedule
func (r *DeviceHealthScriptTimeScheduleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceInstallStateRequestBuilder is request builder for DeviceInstallState
type DeviceInstallStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceInstallStateRequest
func (b *DeviceInstallStateRequestBuilder) Request() *DeviceInstallStateRequest {
	return &DeviceInstallStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceInstallStateRequest is request for DeviceInstallState
type DeviceInstallStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceInstallState
func (r *DeviceInstallStateRequest) Get(ctx context.Context) (resObj *DeviceInstallState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceInstallState
func (r *DeviceInstallStateRequest) Update(ctx context.Context, reqObj *DeviceInstallState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceInstallState
func (r *DeviceInstallStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceKeyRequestBuilder is request builder for DeviceKey
type DeviceKeyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceKeyRequest
func (b *DeviceKeyRequestBuilder) Request() *DeviceKeyRequest {
	return &DeviceKeyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceKeyRequest is request for DeviceKey
type DeviceKeyRequest struct{ BaseRequest }

// Get performs GET request for DeviceKey
func (r *DeviceKeyRequest) Get(ctx context.Context) (resObj *DeviceKey, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceKey
func (r *DeviceKeyRequest) Update(ctx context.Context, reqObj *DeviceKey) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceKey
func (r *DeviceKeyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceLogCollectionRequestObjectRequestBuilder is request builder for DeviceLogCollectionRequestObject
type DeviceLogCollectionRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceLogCollectionRequestObjectRequest
func (b *DeviceLogCollectionRequestObjectRequestBuilder) Request() *DeviceLogCollectionRequestObjectRequest {
	return &DeviceLogCollectionRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceLogCollectionRequestObjectRequest is request for DeviceLogCollectionRequestObject
type DeviceLogCollectionRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for DeviceLogCollectionRequestObject
func (r *DeviceLogCollectionRequestObjectRequest) Get(ctx context.Context) (resObj *DeviceLogCollectionRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceLogCollectionRequestObject
func (r *DeviceLogCollectionRequestObjectRequest) Update(ctx context.Context, reqObj *DeviceLogCollectionRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceLogCollectionRequestObject
func (r *DeviceLogCollectionRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceLogCollectionResponseRequestBuilder is request builder for DeviceLogCollectionResponse
type DeviceLogCollectionResponseRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceLogCollectionResponseRequest
func (b *DeviceLogCollectionResponseRequestBuilder) Request() *DeviceLogCollectionResponseRequest {
	return &DeviceLogCollectionResponseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceLogCollectionResponseRequest is request for DeviceLogCollectionResponse
type DeviceLogCollectionResponseRequest struct{ BaseRequest }

// Get performs GET request for DeviceLogCollectionResponse
func (r *DeviceLogCollectionResponseRequest) Get(ctx context.Context) (resObj *DeviceLogCollectionResponse, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceLogCollectionResponse
func (r *DeviceLogCollectionResponseRequest) Update(ctx context.Context, reqObj *DeviceLogCollectionResponse) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceLogCollectionResponse
func (r *DeviceLogCollectionResponseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementRequestBuilder is request builder for DeviceManagement
type DeviceManagementRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementRequest
func (b *DeviceManagementRequestBuilder) Request() *DeviceManagementRequest {
	return &DeviceManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementRequest is request for DeviceManagement
type DeviceManagementRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagement
func (r *DeviceManagementRequest) Get(ctx context.Context) (resObj *DeviceManagement, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagement
func (r *DeviceManagementRequest) Update(ctx context.Context, reqObj *DeviceManagement) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagement
func (r *DeviceManagementRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAbstractComplexSettingDefinitionRequestBuilder is request builder for DeviceManagementAbstractComplexSettingDefinition
type DeviceManagementAbstractComplexSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAbstractComplexSettingDefinitionRequest
func (b *DeviceManagementAbstractComplexSettingDefinitionRequestBuilder) Request() *DeviceManagementAbstractComplexSettingDefinitionRequest {
	return &DeviceManagementAbstractComplexSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAbstractComplexSettingDefinitionRequest is request for DeviceManagementAbstractComplexSettingDefinition
type DeviceManagementAbstractComplexSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAbstractComplexSettingDefinition
func (r *DeviceManagementAbstractComplexSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementAbstractComplexSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAbstractComplexSettingDefinition
func (r *DeviceManagementAbstractComplexSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementAbstractComplexSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAbstractComplexSettingDefinition
func (r *DeviceManagementAbstractComplexSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAbstractComplexSettingInstanceRequestBuilder is request builder for DeviceManagementAbstractComplexSettingInstance
type DeviceManagementAbstractComplexSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAbstractComplexSettingInstanceRequest
func (b *DeviceManagementAbstractComplexSettingInstanceRequestBuilder) Request() *DeviceManagementAbstractComplexSettingInstanceRequest {
	return &DeviceManagementAbstractComplexSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAbstractComplexSettingInstanceRequest is request for DeviceManagementAbstractComplexSettingInstance
type DeviceManagementAbstractComplexSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAbstractComplexSettingInstance
func (r *DeviceManagementAbstractComplexSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementAbstractComplexSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAbstractComplexSettingInstance
func (r *DeviceManagementAbstractComplexSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementAbstractComplexSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAbstractComplexSettingInstance
func (r *DeviceManagementAbstractComplexSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementApplicabilityRuleDeviceModeRequestBuilder is request builder for DeviceManagementApplicabilityRuleDeviceMode
type DeviceManagementApplicabilityRuleDeviceModeRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementApplicabilityRuleDeviceModeRequest
func (b *DeviceManagementApplicabilityRuleDeviceModeRequestBuilder) Request() *DeviceManagementApplicabilityRuleDeviceModeRequest {
	return &DeviceManagementApplicabilityRuleDeviceModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementApplicabilityRuleDeviceModeRequest is request for DeviceManagementApplicabilityRuleDeviceMode
type DeviceManagementApplicabilityRuleDeviceModeRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementApplicabilityRuleDeviceMode
func (r *DeviceManagementApplicabilityRuleDeviceModeRequest) Get(ctx context.Context) (resObj *DeviceManagementApplicabilityRuleDeviceMode, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementApplicabilityRuleDeviceMode
func (r *DeviceManagementApplicabilityRuleDeviceModeRequest) Update(ctx context.Context, reqObj *DeviceManagementApplicabilityRuleDeviceMode) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementApplicabilityRuleDeviceMode
func (r *DeviceManagementApplicabilityRuleDeviceModeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementApplicabilityRuleOsEditionRequestBuilder is request builder for DeviceManagementApplicabilityRuleOsEdition
type DeviceManagementApplicabilityRuleOsEditionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementApplicabilityRuleOsEditionRequest
func (b *DeviceManagementApplicabilityRuleOsEditionRequestBuilder) Request() *DeviceManagementApplicabilityRuleOsEditionRequest {
	return &DeviceManagementApplicabilityRuleOsEditionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementApplicabilityRuleOsEditionRequest is request for DeviceManagementApplicabilityRuleOsEdition
type DeviceManagementApplicabilityRuleOsEditionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementApplicabilityRuleOsEdition
func (r *DeviceManagementApplicabilityRuleOsEditionRequest) Get(ctx context.Context) (resObj *DeviceManagementApplicabilityRuleOsEdition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementApplicabilityRuleOsEdition
func (r *DeviceManagementApplicabilityRuleOsEditionRequest) Update(ctx context.Context, reqObj *DeviceManagementApplicabilityRuleOsEdition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementApplicabilityRuleOsEdition
func (r *DeviceManagementApplicabilityRuleOsEditionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementApplicabilityRuleOsVersionRequestBuilder is request builder for DeviceManagementApplicabilityRuleOsVersion
type DeviceManagementApplicabilityRuleOsVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementApplicabilityRuleOsVersionRequest
func (b *DeviceManagementApplicabilityRuleOsVersionRequestBuilder) Request() *DeviceManagementApplicabilityRuleOsVersionRequest {
	return &DeviceManagementApplicabilityRuleOsVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementApplicabilityRuleOsVersionRequest is request for DeviceManagementApplicabilityRuleOsVersion
type DeviceManagementApplicabilityRuleOsVersionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementApplicabilityRuleOsVersion
func (r *DeviceManagementApplicabilityRuleOsVersionRequest) Get(ctx context.Context) (resObj *DeviceManagementApplicabilityRuleOsVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementApplicabilityRuleOsVersion
func (r *DeviceManagementApplicabilityRuleOsVersionRequest) Update(ctx context.Context, reqObj *DeviceManagementApplicabilityRuleOsVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementApplicabilityRuleOsVersion
func (r *DeviceManagementApplicabilityRuleOsVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAutopilotEventRequestBuilder is request builder for DeviceManagementAutopilotEvent
type DeviceManagementAutopilotEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAutopilotEventRequest
func (b *DeviceManagementAutopilotEventRequestBuilder) Request() *DeviceManagementAutopilotEventRequest {
	return &DeviceManagementAutopilotEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAutopilotEventRequest is request for DeviceManagementAutopilotEvent
type DeviceManagementAutopilotEventRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAutopilotEvent
func (r *DeviceManagementAutopilotEventRequest) Get(ctx context.Context) (resObj *DeviceManagementAutopilotEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAutopilotEvent
func (r *DeviceManagementAutopilotEventRequest) Update(ctx context.Context, reqObj *DeviceManagementAutopilotEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAutopilotEvent
func (r *DeviceManagementAutopilotEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAutopilotPolicyStatusDetailRequestBuilder is request builder for DeviceManagementAutopilotPolicyStatusDetail
type DeviceManagementAutopilotPolicyStatusDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAutopilotPolicyStatusDetailRequest
func (b *DeviceManagementAutopilotPolicyStatusDetailRequestBuilder) Request() *DeviceManagementAutopilotPolicyStatusDetailRequest {
	return &DeviceManagementAutopilotPolicyStatusDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAutopilotPolicyStatusDetailRequest is request for DeviceManagementAutopilotPolicyStatusDetail
type DeviceManagementAutopilotPolicyStatusDetailRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAutopilotPolicyStatusDetail
func (r *DeviceManagementAutopilotPolicyStatusDetailRequest) Get(ctx context.Context) (resObj *DeviceManagementAutopilotPolicyStatusDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAutopilotPolicyStatusDetail
func (r *DeviceManagementAutopilotPolicyStatusDetailRequest) Update(ctx context.Context, reqObj *DeviceManagementAutopilotPolicyStatusDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAutopilotPolicyStatusDetail
func (r *DeviceManagementAutopilotPolicyStatusDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementBooleanSettingInstanceRequestBuilder is request builder for DeviceManagementBooleanSettingInstance
type DeviceManagementBooleanSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementBooleanSettingInstanceRequest
func (b *DeviceManagementBooleanSettingInstanceRequestBuilder) Request() *DeviceManagementBooleanSettingInstanceRequest {
	return &DeviceManagementBooleanSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementBooleanSettingInstanceRequest is request for DeviceManagementBooleanSettingInstance
type DeviceManagementBooleanSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementBooleanSettingInstance
func (r *DeviceManagementBooleanSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementBooleanSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementBooleanSettingInstance
func (r *DeviceManagementBooleanSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementBooleanSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementBooleanSettingInstance
func (r *DeviceManagementBooleanSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementCachedReportConfigurationRequestBuilder is request builder for DeviceManagementCachedReportConfiguration
type DeviceManagementCachedReportConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementCachedReportConfigurationRequest
func (b *DeviceManagementCachedReportConfigurationRequestBuilder) Request() *DeviceManagementCachedReportConfigurationRequest {
	return &DeviceManagementCachedReportConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementCachedReportConfigurationRequest is request for DeviceManagementCachedReportConfiguration
type DeviceManagementCachedReportConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementCachedReportConfiguration
func (r *DeviceManagementCachedReportConfigurationRequest) Get(ctx context.Context) (resObj *DeviceManagementCachedReportConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementCachedReportConfiguration
func (r *DeviceManagementCachedReportConfigurationRequest) Update(ctx context.Context, reqObj *DeviceManagementCachedReportConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementCachedReportConfiguration
func (r *DeviceManagementCachedReportConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementCollectionSettingDefinitionRequestBuilder is request builder for DeviceManagementCollectionSettingDefinition
type DeviceManagementCollectionSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementCollectionSettingDefinitionRequest
func (b *DeviceManagementCollectionSettingDefinitionRequestBuilder) Request() *DeviceManagementCollectionSettingDefinitionRequest {
	return &DeviceManagementCollectionSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementCollectionSettingDefinitionRequest is request for DeviceManagementCollectionSettingDefinition
type DeviceManagementCollectionSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementCollectionSettingDefinition
func (r *DeviceManagementCollectionSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementCollectionSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementCollectionSettingDefinition
func (r *DeviceManagementCollectionSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementCollectionSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementCollectionSettingDefinition
func (r *DeviceManagementCollectionSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementCollectionSettingInstanceRequestBuilder is request builder for DeviceManagementCollectionSettingInstance
type DeviceManagementCollectionSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementCollectionSettingInstanceRequest
func (b *DeviceManagementCollectionSettingInstanceRequestBuilder) Request() *DeviceManagementCollectionSettingInstanceRequest {
	return &DeviceManagementCollectionSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementCollectionSettingInstanceRequest is request for DeviceManagementCollectionSettingInstance
type DeviceManagementCollectionSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementCollectionSettingInstance
func (r *DeviceManagementCollectionSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementCollectionSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementCollectionSettingInstance
func (r *DeviceManagementCollectionSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementCollectionSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementCollectionSettingInstance
func (r *DeviceManagementCollectionSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementComplexSettingDefinitionRequestBuilder is request builder for DeviceManagementComplexSettingDefinition
type DeviceManagementComplexSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementComplexSettingDefinitionRequest
func (b *DeviceManagementComplexSettingDefinitionRequestBuilder) Request() *DeviceManagementComplexSettingDefinitionRequest {
	return &DeviceManagementComplexSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementComplexSettingDefinitionRequest is request for DeviceManagementComplexSettingDefinition
type DeviceManagementComplexSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementComplexSettingDefinition
func (r *DeviceManagementComplexSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementComplexSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementComplexSettingDefinition
func (r *DeviceManagementComplexSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementComplexSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementComplexSettingDefinition
func (r *DeviceManagementComplexSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementComplexSettingInstanceRequestBuilder is request builder for DeviceManagementComplexSettingInstance
type DeviceManagementComplexSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementComplexSettingInstanceRequest
func (b *DeviceManagementComplexSettingInstanceRequestBuilder) Request() *DeviceManagementComplexSettingInstanceRequest {
	return &DeviceManagementComplexSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementComplexSettingInstanceRequest is request for DeviceManagementComplexSettingInstance
type DeviceManagementComplexSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementComplexSettingInstance
func (r *DeviceManagementComplexSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementComplexSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementComplexSettingInstance
func (r *DeviceManagementComplexSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementComplexSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementComplexSettingInstance
func (r *DeviceManagementComplexSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementComplianceActionItemRequestBuilder is request builder for DeviceManagementComplianceActionItem
type DeviceManagementComplianceActionItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementComplianceActionItemRequest
func (b *DeviceManagementComplianceActionItemRequestBuilder) Request() *DeviceManagementComplianceActionItemRequest {
	return &DeviceManagementComplianceActionItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementComplianceActionItemRequest is request for DeviceManagementComplianceActionItem
type DeviceManagementComplianceActionItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementComplianceActionItem
func (r *DeviceManagementComplianceActionItemRequest) Get(ctx context.Context) (resObj *DeviceManagementComplianceActionItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementComplianceActionItem
func (r *DeviceManagementComplianceActionItemRequest) Update(ctx context.Context, reqObj *DeviceManagementComplianceActionItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementComplianceActionItem
func (r *DeviceManagementComplianceActionItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementCompliancePolicyRequestBuilder is request builder for DeviceManagementCompliancePolicy
type DeviceManagementCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementCompliancePolicyRequest
func (b *DeviceManagementCompliancePolicyRequestBuilder) Request() *DeviceManagementCompliancePolicyRequest {
	return &DeviceManagementCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementCompliancePolicyRequest is request for DeviceManagementCompliancePolicy
type DeviceManagementCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementCompliancePolicy
func (r *DeviceManagementCompliancePolicyRequest) Get(ctx context.Context) (resObj *DeviceManagementCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementCompliancePolicy
func (r *DeviceManagementCompliancePolicyRequest) Update(ctx context.Context, reqObj *DeviceManagementCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementCompliancePolicy
func (r *DeviceManagementCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementComplianceScheduledActionForRuleRequestBuilder is request builder for DeviceManagementComplianceScheduledActionForRule
type DeviceManagementComplianceScheduledActionForRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementComplianceScheduledActionForRuleRequest
func (b *DeviceManagementComplianceScheduledActionForRuleRequestBuilder) Request() *DeviceManagementComplianceScheduledActionForRuleRequest {
	return &DeviceManagementComplianceScheduledActionForRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementComplianceScheduledActionForRuleRequest is request for DeviceManagementComplianceScheduledActionForRule
type DeviceManagementComplianceScheduledActionForRuleRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementComplianceScheduledActionForRule
func (r *DeviceManagementComplianceScheduledActionForRuleRequest) Get(ctx context.Context) (resObj *DeviceManagementComplianceScheduledActionForRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementComplianceScheduledActionForRule
func (r *DeviceManagementComplianceScheduledActionForRuleRequest) Update(ctx context.Context, reqObj *DeviceManagementComplianceScheduledActionForRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementComplianceScheduledActionForRule
func (r *DeviceManagementComplianceScheduledActionForRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationCategoryRequestBuilder is request builder for DeviceManagementConfigurationCategory
type DeviceManagementConfigurationCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationCategoryRequest
func (b *DeviceManagementConfigurationCategoryRequestBuilder) Request() *DeviceManagementConfigurationCategoryRequest {
	return &DeviceManagementConfigurationCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationCategoryRequest is request for DeviceManagementConfigurationCategory
type DeviceManagementConfigurationCategoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationCategory
func (r *DeviceManagementConfigurationCategoryRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationCategory
func (r *DeviceManagementConfigurationCategoryRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationCategory
func (r *DeviceManagementConfigurationCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingCollectionDefinition
type DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest
func (b *DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest {
	return &DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest is request for DeviceManagementConfigurationChoiceSettingCollectionDefinition
type DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingCollectionDefinition
func (r *DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingCollectionDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingCollectionDefinition
func (r *DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingCollectionDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingCollectionDefinition
func (r *DeviceManagementConfigurationChoiceSettingCollectionDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingCollectionInstanceRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingCollectionInstance
type DeviceManagementConfigurationChoiceSettingCollectionInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest
func (b *DeviceManagementConfigurationChoiceSettingCollectionInstanceRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest {
	return &DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest is request for DeviceManagementConfigurationChoiceSettingCollectionInstance
type DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingCollectionInstance
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingCollectionInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingCollectionInstance
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingCollectionInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingCollectionInstance
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
type DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest is request for DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
type DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingDefinitionRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingDefinition
type DeviceManagementConfigurationChoiceSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingDefinitionRequest
func (b *DeviceManagementConfigurationChoiceSettingDefinitionRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingDefinitionRequest {
	return &DeviceManagementConfigurationChoiceSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingDefinitionRequest is request for DeviceManagementConfigurationChoiceSettingDefinition
type DeviceManagementConfigurationChoiceSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingDefinition
func (r *DeviceManagementConfigurationChoiceSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingDefinition
func (r *DeviceManagementConfigurationChoiceSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingDefinition
func (r *DeviceManagementConfigurationChoiceSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingInstanceRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingInstance
type DeviceManagementConfigurationChoiceSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingInstanceRequest
func (b *DeviceManagementConfigurationChoiceSettingInstanceRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingInstanceRequest {
	return &DeviceManagementConfigurationChoiceSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingInstanceRequest is request for DeviceManagementConfigurationChoiceSettingInstance
type DeviceManagementConfigurationChoiceSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingInstance
func (r *DeviceManagementConfigurationChoiceSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingInstance
func (r *DeviceManagementConfigurationChoiceSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingInstance
func (r *DeviceManagementConfigurationChoiceSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingInstanceTemplate
type DeviceManagementConfigurationChoiceSettingInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest is request for DeviceManagementConfigurationChoiceSettingInstanceTemplate
type DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingInstanceTemplate
func (r *DeviceManagementConfigurationChoiceSettingInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingValueRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingValue
type DeviceManagementConfigurationChoiceSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingValueRequest
func (b *DeviceManagementConfigurationChoiceSettingValueRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingValueRequest {
	return &DeviceManagementConfigurationChoiceSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingValueRequest is request for DeviceManagementConfigurationChoiceSettingValue
type DeviceManagementConfigurationChoiceSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingValue
func (r *DeviceManagementConfigurationChoiceSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingValue
func (r *DeviceManagementConfigurationChoiceSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingValue
func (r *DeviceManagementConfigurationChoiceSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest is request for DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueConstantDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
type DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest is request for DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
type DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingValueDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingValueDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
type DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest is request for DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
type DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueDefinitionTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationChoiceSettingValueTemplateRequestBuilder is request builder for DeviceManagementConfigurationChoiceSettingValueTemplate
type DeviceManagementConfigurationChoiceSettingValueTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationChoiceSettingValueTemplateRequest
func (b *DeviceManagementConfigurationChoiceSettingValueTemplateRequestBuilder) Request() *DeviceManagementConfigurationChoiceSettingValueTemplateRequest {
	return &DeviceManagementConfigurationChoiceSettingValueTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationChoiceSettingValueTemplateRequest is request for DeviceManagementConfigurationChoiceSettingValueTemplate
type DeviceManagementConfigurationChoiceSettingValueTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationChoiceSettingValueTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationChoiceSettingValueTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationChoiceSettingValueTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationChoiceSettingValueTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationChoiceSettingValueTemplate
func (r *DeviceManagementConfigurationChoiceSettingValueTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationDependentOnRequestBuilder is request builder for DeviceManagementConfigurationDependentOn
type DeviceManagementConfigurationDependentOnRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationDependentOnRequest
func (b *DeviceManagementConfigurationDependentOnRequestBuilder) Request() *DeviceManagementConfigurationDependentOnRequest {
	return &DeviceManagementConfigurationDependentOnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationDependentOnRequest is request for DeviceManagementConfigurationDependentOn
type DeviceManagementConfigurationDependentOnRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationDependentOn
func (r *DeviceManagementConfigurationDependentOnRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationDependentOn, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationDependentOn
func (r *DeviceManagementConfigurationDependentOnRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationDependentOn) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationDependentOn
func (r *DeviceManagementConfigurationDependentOnRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequestBuilder is request builder for DeviceManagementConfigurationExchangeOnlineSettingApplicability
type DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest
func (b *DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequestBuilder) Request() *DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest {
	return &DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest is request for DeviceManagementConfigurationExchangeOnlineSettingApplicability
type DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationExchangeOnlineSettingApplicability
func (r *DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationExchangeOnlineSettingApplicability, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationExchangeOnlineSettingApplicability
func (r *DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationExchangeOnlineSettingApplicability) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationExchangeOnlineSettingApplicability
func (r *DeviceManagementConfigurationExchangeOnlineSettingApplicabilityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingCollectionInstanceRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingCollectionInstance
type DeviceManagementConfigurationGroupSettingCollectionInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingCollectionInstanceRequest
func (b *DeviceManagementConfigurationGroupSettingCollectionInstanceRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingCollectionInstanceRequest {
	return &DeviceManagementConfigurationGroupSettingCollectionInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingCollectionInstanceRequest is request for DeviceManagementConfigurationGroupSettingCollectionInstance
type DeviceManagementConfigurationGroupSettingCollectionInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingCollectionInstance
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingCollectionInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingCollectionInstance
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingCollectionInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingCollectionInstance
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
type DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest
func (b *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest {
	return &DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest is request for DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
type DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingCollectionInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingInstanceRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingInstance
type DeviceManagementConfigurationGroupSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingInstanceRequest
func (b *DeviceManagementConfigurationGroupSettingInstanceRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingInstanceRequest {
	return &DeviceManagementConfigurationGroupSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingInstanceRequest is request for DeviceManagementConfigurationGroupSettingInstance
type DeviceManagementConfigurationGroupSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingInstance
func (r *DeviceManagementConfigurationGroupSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingInstance
func (r *DeviceManagementConfigurationGroupSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingInstance
func (r *DeviceManagementConfigurationGroupSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingInstanceTemplate
type DeviceManagementConfigurationGroupSettingInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingInstanceTemplateRequest
func (b *DeviceManagementConfigurationGroupSettingInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingInstanceTemplateRequest {
	return &DeviceManagementConfigurationGroupSettingInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingInstanceTemplateRequest is request for DeviceManagementConfigurationGroupSettingInstanceTemplate
type DeviceManagementConfigurationGroupSettingInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingInstanceTemplate
func (r *DeviceManagementConfigurationGroupSettingInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingValueRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingValue
type DeviceManagementConfigurationGroupSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingValueRequest
func (b *DeviceManagementConfigurationGroupSettingValueRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingValueRequest {
	return &DeviceManagementConfigurationGroupSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingValueRequest is request for DeviceManagementConfigurationGroupSettingValue
type DeviceManagementConfigurationGroupSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingValue
func (r *DeviceManagementConfigurationGroupSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingValue
func (r *DeviceManagementConfigurationGroupSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingValue
func (r *DeviceManagementConfigurationGroupSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationGroupSettingValueTemplateRequestBuilder is request builder for DeviceManagementConfigurationGroupSettingValueTemplate
type DeviceManagementConfigurationGroupSettingValueTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationGroupSettingValueTemplateRequest
func (b *DeviceManagementConfigurationGroupSettingValueTemplateRequestBuilder) Request() *DeviceManagementConfigurationGroupSettingValueTemplateRequest {
	return &DeviceManagementConfigurationGroupSettingValueTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationGroupSettingValueTemplateRequest is request for DeviceManagementConfigurationGroupSettingValueTemplate
type DeviceManagementConfigurationGroupSettingValueTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationGroupSettingValueTemplate
func (r *DeviceManagementConfigurationGroupSettingValueTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationGroupSettingValueTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationGroupSettingValueTemplate
func (r *DeviceManagementConfigurationGroupSettingValueTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationGroupSettingValueTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationGroupSettingValueTemplate
func (r *DeviceManagementConfigurationGroupSettingValueTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValue
type DeviceManagementConfigurationIntegerSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueRequest
func (b *DeviceManagementConfigurationIntegerSettingValueRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueRequest {
	return &DeviceManagementConfigurationIntegerSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueRequest is request for DeviceManagementConfigurationIntegerSettingValue
type DeviceManagementConfigurationIntegerSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValue
func (r *DeviceManagementConfigurationIntegerSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValue
func (r *DeviceManagementConfigurationIntegerSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValue
func (r *DeviceManagementConfigurationIntegerSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest
func (b *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest {
	return &DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest is request for DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueConstantDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
type DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest
func (b *DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest {
	return &DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest is request for DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
type DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValueDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValueDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueDefinitionRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValueDefinition
type DeviceManagementConfigurationIntegerSettingValueDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueDefinitionRequest
func (b *DeviceManagementConfigurationIntegerSettingValueDefinitionRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueDefinitionRequest {
	return &DeviceManagementConfigurationIntegerSettingValueDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueDefinitionRequest is request for DeviceManagementConfigurationIntegerSettingValueDefinition
type DeviceManagementConfigurationIntegerSettingValueDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValueDefinition
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValueDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValueDefinition
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValueDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValueDefinition
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
type DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest
func (b *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest {
	return &DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest is request for DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
type DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValueDefinitionTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueDefinitionTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationIntegerSettingValueTemplateRequestBuilder is request builder for DeviceManagementConfigurationIntegerSettingValueTemplate
type DeviceManagementConfigurationIntegerSettingValueTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationIntegerSettingValueTemplateRequest
func (b *DeviceManagementConfigurationIntegerSettingValueTemplateRequestBuilder) Request() *DeviceManagementConfigurationIntegerSettingValueTemplateRequest {
	return &DeviceManagementConfigurationIntegerSettingValueTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationIntegerSettingValueTemplateRequest is request for DeviceManagementConfigurationIntegerSettingValueTemplate
type DeviceManagementConfigurationIntegerSettingValueTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationIntegerSettingValueTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationIntegerSettingValueTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationIntegerSettingValueTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationIntegerSettingValueTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationIntegerSettingValueTemplate
func (r *DeviceManagementConfigurationIntegerSettingValueTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationOptionDefinitionRequestBuilder is request builder for DeviceManagementConfigurationOptionDefinition
type DeviceManagementConfigurationOptionDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationOptionDefinitionRequest
func (b *DeviceManagementConfigurationOptionDefinitionRequestBuilder) Request() *DeviceManagementConfigurationOptionDefinitionRequest {
	return &DeviceManagementConfigurationOptionDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationOptionDefinitionRequest is request for DeviceManagementConfigurationOptionDefinition
type DeviceManagementConfigurationOptionDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationOptionDefinition
func (r *DeviceManagementConfigurationOptionDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationOptionDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationOptionDefinition
func (r *DeviceManagementConfigurationOptionDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationOptionDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationOptionDefinition
func (r *DeviceManagementConfigurationOptionDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationOptionDefinitionTemplateRequestBuilder is request builder for DeviceManagementConfigurationOptionDefinitionTemplate
type DeviceManagementConfigurationOptionDefinitionTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationOptionDefinitionTemplateRequest
func (b *DeviceManagementConfigurationOptionDefinitionTemplateRequestBuilder) Request() *DeviceManagementConfigurationOptionDefinitionTemplateRequest {
	return &DeviceManagementConfigurationOptionDefinitionTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationOptionDefinitionTemplateRequest is request for DeviceManagementConfigurationOptionDefinitionTemplate
type DeviceManagementConfigurationOptionDefinitionTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationOptionDefinitionTemplate
func (r *DeviceManagementConfigurationOptionDefinitionTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationOptionDefinitionTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationOptionDefinitionTemplate
func (r *DeviceManagementConfigurationOptionDefinitionTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationOptionDefinitionTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationOptionDefinitionTemplate
func (r *DeviceManagementConfigurationOptionDefinitionTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationPolicyRequestBuilder is request builder for DeviceManagementConfigurationPolicy
type DeviceManagementConfigurationPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationPolicyRequest
func (b *DeviceManagementConfigurationPolicyRequestBuilder) Request() *DeviceManagementConfigurationPolicyRequest {
	return &DeviceManagementConfigurationPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationPolicyRequest is request for DeviceManagementConfigurationPolicy
type DeviceManagementConfigurationPolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationPolicy
func (r *DeviceManagementConfigurationPolicyRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationPolicy
func (r *DeviceManagementConfigurationPolicyRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationPolicy
func (r *DeviceManagementConfigurationPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationPolicyAssignmentRequestBuilder is request builder for DeviceManagementConfigurationPolicyAssignment
type DeviceManagementConfigurationPolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationPolicyAssignmentRequest
func (b *DeviceManagementConfigurationPolicyAssignmentRequestBuilder) Request() *DeviceManagementConfigurationPolicyAssignmentRequest {
	return &DeviceManagementConfigurationPolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationPolicyAssignmentRequest is request for DeviceManagementConfigurationPolicyAssignment
type DeviceManagementConfigurationPolicyAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationPolicyAssignment
func (r *DeviceManagementConfigurationPolicyAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationPolicyAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationPolicyAssignment
func (r *DeviceManagementConfigurationPolicyAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationPolicyAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationPolicyAssignment
func (r *DeviceManagementConfigurationPolicyAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationPolicyPolicySetItemRequestBuilder is request builder for DeviceManagementConfigurationPolicyPolicySetItem
type DeviceManagementConfigurationPolicyPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationPolicyPolicySetItemRequest
func (b *DeviceManagementConfigurationPolicyPolicySetItemRequestBuilder) Request() *DeviceManagementConfigurationPolicyPolicySetItemRequest {
	return &DeviceManagementConfigurationPolicyPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationPolicyPolicySetItemRequest is request for DeviceManagementConfigurationPolicyPolicySetItem
type DeviceManagementConfigurationPolicyPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationPolicyPolicySetItem
func (r *DeviceManagementConfigurationPolicyPolicySetItemRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationPolicyPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationPolicyPolicySetItem
func (r *DeviceManagementConfigurationPolicyPolicySetItemRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationPolicyPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationPolicyPolicySetItem
func (r *DeviceManagementConfigurationPolicyPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationPolicyTemplateRequestBuilder is request builder for DeviceManagementConfigurationPolicyTemplate
type DeviceManagementConfigurationPolicyTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationPolicyTemplateRequest
func (b *DeviceManagementConfigurationPolicyTemplateRequestBuilder) Request() *DeviceManagementConfigurationPolicyTemplateRequest {
	return &DeviceManagementConfigurationPolicyTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationPolicyTemplateRequest is request for DeviceManagementConfigurationPolicyTemplate
type DeviceManagementConfigurationPolicyTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationPolicyTemplate
func (r *DeviceManagementConfigurationPolicyTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationPolicyTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationPolicyTemplate
func (r *DeviceManagementConfigurationPolicyTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationPolicyTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationPolicyTemplate
func (r *DeviceManagementConfigurationPolicyTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationPolicyTemplateReferenceRequestBuilder is request builder for DeviceManagementConfigurationPolicyTemplateReference
type DeviceManagementConfigurationPolicyTemplateReferenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationPolicyTemplateReferenceRequest
func (b *DeviceManagementConfigurationPolicyTemplateReferenceRequestBuilder) Request() *DeviceManagementConfigurationPolicyTemplateReferenceRequest {
	return &DeviceManagementConfigurationPolicyTemplateReferenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationPolicyTemplateReferenceRequest is request for DeviceManagementConfigurationPolicyTemplateReference
type DeviceManagementConfigurationPolicyTemplateReferenceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationPolicyTemplateReference
func (r *DeviceManagementConfigurationPolicyTemplateReferenceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationPolicyTemplateReference, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationPolicyTemplateReference
func (r *DeviceManagementConfigurationPolicyTemplateReferenceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationPolicyTemplateReference) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationPolicyTemplateReference
func (r *DeviceManagementConfigurationPolicyTemplateReferenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationRedirectSettingDefinitionRequestBuilder is request builder for DeviceManagementConfigurationRedirectSettingDefinition
type DeviceManagementConfigurationRedirectSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationRedirectSettingDefinitionRequest
func (b *DeviceManagementConfigurationRedirectSettingDefinitionRequestBuilder) Request() *DeviceManagementConfigurationRedirectSettingDefinitionRequest {
	return &DeviceManagementConfigurationRedirectSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationRedirectSettingDefinitionRequest is request for DeviceManagementConfigurationRedirectSettingDefinition
type DeviceManagementConfigurationRedirectSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationRedirectSettingDefinition
func (r *DeviceManagementConfigurationRedirectSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationRedirectSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationRedirectSettingDefinition
func (r *DeviceManagementConfigurationRedirectSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationRedirectSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationRedirectSettingDefinition
func (r *DeviceManagementConfigurationRedirectSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationReferenceSettingValueRequestBuilder is request builder for DeviceManagementConfigurationReferenceSettingValue
type DeviceManagementConfigurationReferenceSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationReferenceSettingValueRequest
func (b *DeviceManagementConfigurationReferenceSettingValueRequestBuilder) Request() *DeviceManagementConfigurationReferenceSettingValueRequest {
	return &DeviceManagementConfigurationReferenceSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationReferenceSettingValueRequest is request for DeviceManagementConfigurationReferenceSettingValue
type DeviceManagementConfigurationReferenceSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationReferenceSettingValue
func (r *DeviceManagementConfigurationReferenceSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationReferenceSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationReferenceSettingValue
func (r *DeviceManagementConfigurationReferenceSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationReferenceSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationReferenceSettingValue
func (r *DeviceManagementConfigurationReferenceSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationReferredSettingInformationRequestBuilder is request builder for DeviceManagementConfigurationReferredSettingInformation
type DeviceManagementConfigurationReferredSettingInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationReferredSettingInformationRequest
func (b *DeviceManagementConfigurationReferredSettingInformationRequestBuilder) Request() *DeviceManagementConfigurationReferredSettingInformationRequest {
	return &DeviceManagementConfigurationReferredSettingInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationReferredSettingInformationRequest is request for DeviceManagementConfigurationReferredSettingInformation
type DeviceManagementConfigurationReferredSettingInformationRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationReferredSettingInformation
func (r *DeviceManagementConfigurationReferredSettingInformationRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationReferredSettingInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationReferredSettingInformation
func (r *DeviceManagementConfigurationReferredSettingInformationRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationReferredSettingInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationReferredSettingInformation
func (r *DeviceManagementConfigurationReferredSettingInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSecretSettingValueRequestBuilder is request builder for DeviceManagementConfigurationSecretSettingValue
type DeviceManagementConfigurationSecretSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSecretSettingValueRequest
func (b *DeviceManagementConfigurationSecretSettingValueRequestBuilder) Request() *DeviceManagementConfigurationSecretSettingValueRequest {
	return &DeviceManagementConfigurationSecretSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSecretSettingValueRequest is request for DeviceManagementConfigurationSecretSettingValue
type DeviceManagementConfigurationSecretSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSecretSettingValue
func (r *DeviceManagementConfigurationSecretSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSecretSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSecretSettingValue
func (r *DeviceManagementConfigurationSecretSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSecretSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSecretSettingValue
func (r *DeviceManagementConfigurationSecretSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingRequestBuilder is request builder for DeviceManagementConfigurationSetting
type DeviceManagementConfigurationSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingRequest
func (b *DeviceManagementConfigurationSettingRequestBuilder) Request() *DeviceManagementConfigurationSettingRequest {
	return &DeviceManagementConfigurationSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingRequest is request for DeviceManagementConfigurationSetting
type DeviceManagementConfigurationSettingRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSetting
func (r *DeviceManagementConfigurationSettingRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSetting
func (r *DeviceManagementConfigurationSettingRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSetting
func (r *DeviceManagementConfigurationSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingApplicabilityRequestBuilder is request builder for DeviceManagementConfigurationSettingApplicability
type DeviceManagementConfigurationSettingApplicabilityRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingApplicabilityRequest
func (b *DeviceManagementConfigurationSettingApplicabilityRequestBuilder) Request() *DeviceManagementConfigurationSettingApplicabilityRequest {
	return &DeviceManagementConfigurationSettingApplicabilityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingApplicabilityRequest is request for DeviceManagementConfigurationSettingApplicability
type DeviceManagementConfigurationSettingApplicabilityRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingApplicability
func (r *DeviceManagementConfigurationSettingApplicabilityRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingApplicability, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingApplicability
func (r *DeviceManagementConfigurationSettingApplicabilityRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingApplicability) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingApplicability
func (r *DeviceManagementConfigurationSettingApplicabilityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSettingDefinition
type DeviceManagementConfigurationSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingDefinitionRequest
func (b *DeviceManagementConfigurationSettingDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSettingDefinitionRequest {
	return &DeviceManagementConfigurationSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingDefinitionRequest is request for DeviceManagementConfigurationSettingDefinition
type DeviceManagementConfigurationSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingDefinition
func (r *DeviceManagementConfigurationSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingDefinition
func (r *DeviceManagementConfigurationSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingDefinition
func (r *DeviceManagementConfigurationSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingDependedOnByRequestBuilder is request builder for DeviceManagementConfigurationSettingDependedOnBy
type DeviceManagementConfigurationSettingDependedOnByRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingDependedOnByRequest
func (b *DeviceManagementConfigurationSettingDependedOnByRequestBuilder) Request() *DeviceManagementConfigurationSettingDependedOnByRequest {
	return &DeviceManagementConfigurationSettingDependedOnByRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingDependedOnByRequest is request for DeviceManagementConfigurationSettingDependedOnBy
type DeviceManagementConfigurationSettingDependedOnByRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingDependedOnBy
func (r *DeviceManagementConfigurationSettingDependedOnByRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingDependedOnBy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingDependedOnBy
func (r *DeviceManagementConfigurationSettingDependedOnByRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingDependedOnBy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingDependedOnBy
func (r *DeviceManagementConfigurationSettingDependedOnByRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingGroupCollectionDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSettingGroupCollectionDefinition
type DeviceManagementConfigurationSettingGroupCollectionDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest
func (b *DeviceManagementConfigurationSettingGroupCollectionDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest {
	return &DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest is request for DeviceManagementConfigurationSettingGroupCollectionDefinition
type DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingGroupCollectionDefinition
func (r *DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingGroupCollectionDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingGroupCollectionDefinition
func (r *DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingGroupCollectionDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingGroupCollectionDefinition
func (r *DeviceManagementConfigurationSettingGroupCollectionDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingGroupCollectionInstanceRequestBuilder is request builder for DeviceManagementConfigurationSettingGroupCollectionInstance
type DeviceManagementConfigurationSettingGroupCollectionInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingGroupCollectionInstanceRequest
func (b *DeviceManagementConfigurationSettingGroupCollectionInstanceRequestBuilder) Request() *DeviceManagementConfigurationSettingGroupCollectionInstanceRequest {
	return &DeviceManagementConfigurationSettingGroupCollectionInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingGroupCollectionInstanceRequest is request for DeviceManagementConfigurationSettingGroupCollectionInstance
type DeviceManagementConfigurationSettingGroupCollectionInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingGroupCollectionInstance
func (r *DeviceManagementConfigurationSettingGroupCollectionInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingGroupCollectionInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingGroupCollectionInstance
func (r *DeviceManagementConfigurationSettingGroupCollectionInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingGroupCollectionInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingGroupCollectionInstance
func (r *DeviceManagementConfigurationSettingGroupCollectionInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingGroupDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSettingGroupDefinition
type DeviceManagementConfigurationSettingGroupDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingGroupDefinitionRequest
func (b *DeviceManagementConfigurationSettingGroupDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSettingGroupDefinitionRequest {
	return &DeviceManagementConfigurationSettingGroupDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingGroupDefinitionRequest is request for DeviceManagementConfigurationSettingGroupDefinition
type DeviceManagementConfigurationSettingGroupDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingGroupDefinition
func (r *DeviceManagementConfigurationSettingGroupDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingGroupDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingGroupDefinition
func (r *DeviceManagementConfigurationSettingGroupDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingGroupDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingGroupDefinition
func (r *DeviceManagementConfigurationSettingGroupDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingGroupInstanceRequestBuilder is request builder for DeviceManagementConfigurationSettingGroupInstance
type DeviceManagementConfigurationSettingGroupInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingGroupInstanceRequest
func (b *DeviceManagementConfigurationSettingGroupInstanceRequestBuilder) Request() *DeviceManagementConfigurationSettingGroupInstanceRequest {
	return &DeviceManagementConfigurationSettingGroupInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingGroupInstanceRequest is request for DeviceManagementConfigurationSettingGroupInstance
type DeviceManagementConfigurationSettingGroupInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingGroupInstance
func (r *DeviceManagementConfigurationSettingGroupInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingGroupInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingGroupInstance
func (r *DeviceManagementConfigurationSettingGroupInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingGroupInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingGroupInstance
func (r *DeviceManagementConfigurationSettingGroupInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingInstanceRequestBuilder is request builder for DeviceManagementConfigurationSettingInstance
type DeviceManagementConfigurationSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingInstanceRequest
func (b *DeviceManagementConfigurationSettingInstanceRequestBuilder) Request() *DeviceManagementConfigurationSettingInstanceRequest {
	return &DeviceManagementConfigurationSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingInstanceRequest is request for DeviceManagementConfigurationSettingInstance
type DeviceManagementConfigurationSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingInstance
func (r *DeviceManagementConfigurationSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingInstance
func (r *DeviceManagementConfigurationSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingInstance
func (r *DeviceManagementConfigurationSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationSettingInstanceTemplate
type DeviceManagementConfigurationSettingInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingInstanceTemplateRequest
func (b *DeviceManagementConfigurationSettingInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationSettingInstanceTemplateRequest {
	return &DeviceManagementConfigurationSettingInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingInstanceTemplateRequest is request for DeviceManagementConfigurationSettingInstanceTemplate
type DeviceManagementConfigurationSettingInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingInstanceTemplate
func (r *DeviceManagementConfigurationSettingInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingInstanceTemplate
func (r *DeviceManagementConfigurationSettingInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingInstanceTemplate
func (r *DeviceManagementConfigurationSettingInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingInstanceTemplateReferenceRequestBuilder is request builder for DeviceManagementConfigurationSettingInstanceTemplateReference
type DeviceManagementConfigurationSettingInstanceTemplateReferenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest
func (b *DeviceManagementConfigurationSettingInstanceTemplateReferenceRequestBuilder) Request() *DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest {
	return &DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest is request for DeviceManagementConfigurationSettingInstanceTemplateReference
type DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingInstanceTemplateReference
func (r *DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingInstanceTemplateReference, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingInstanceTemplateReference
func (r *DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingInstanceTemplateReference) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingInstanceTemplateReference
func (r *DeviceManagementConfigurationSettingInstanceTemplateReferenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingOccurrenceRequestBuilder is request builder for DeviceManagementConfigurationSettingOccurrence
type DeviceManagementConfigurationSettingOccurrenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingOccurrenceRequest
func (b *DeviceManagementConfigurationSettingOccurrenceRequestBuilder) Request() *DeviceManagementConfigurationSettingOccurrenceRequest {
	return &DeviceManagementConfigurationSettingOccurrenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingOccurrenceRequest is request for DeviceManagementConfigurationSettingOccurrence
type DeviceManagementConfigurationSettingOccurrenceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingOccurrence
func (r *DeviceManagementConfigurationSettingOccurrenceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingOccurrence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingOccurrence
func (r *DeviceManagementConfigurationSettingOccurrenceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingOccurrence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingOccurrence
func (r *DeviceManagementConfigurationSettingOccurrenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingTemplateRequestBuilder is request builder for DeviceManagementConfigurationSettingTemplate
type DeviceManagementConfigurationSettingTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingTemplateRequest
func (b *DeviceManagementConfigurationSettingTemplateRequestBuilder) Request() *DeviceManagementConfigurationSettingTemplateRequest {
	return &DeviceManagementConfigurationSettingTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingTemplateRequest is request for DeviceManagementConfigurationSettingTemplate
type DeviceManagementConfigurationSettingTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingTemplate
func (r *DeviceManagementConfigurationSettingTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingTemplate
func (r *DeviceManagementConfigurationSettingTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingTemplate
func (r *DeviceManagementConfigurationSettingTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingValueRequestBuilder is request builder for DeviceManagementConfigurationSettingValue
type DeviceManagementConfigurationSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingValueRequest
func (b *DeviceManagementConfigurationSettingValueRequestBuilder) Request() *DeviceManagementConfigurationSettingValueRequest {
	return &DeviceManagementConfigurationSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingValueRequest is request for DeviceManagementConfigurationSettingValue
type DeviceManagementConfigurationSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingValue
func (r *DeviceManagementConfigurationSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingValue
func (r *DeviceManagementConfigurationSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingValue
func (r *DeviceManagementConfigurationSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingValueDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSettingValueDefinition
type DeviceManagementConfigurationSettingValueDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingValueDefinitionRequest
func (b *DeviceManagementConfigurationSettingValueDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSettingValueDefinitionRequest {
	return &DeviceManagementConfigurationSettingValueDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingValueDefinitionRequest is request for DeviceManagementConfigurationSettingValueDefinition
type DeviceManagementConfigurationSettingValueDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingValueDefinition
func (r *DeviceManagementConfigurationSettingValueDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingValueDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingValueDefinition
func (r *DeviceManagementConfigurationSettingValueDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingValueDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingValueDefinition
func (r *DeviceManagementConfigurationSettingValueDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSettingValueTemplateReferenceRequestBuilder is request builder for DeviceManagementConfigurationSettingValueTemplateReference
type DeviceManagementConfigurationSettingValueTemplateReferenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSettingValueTemplateReferenceRequest
func (b *DeviceManagementConfigurationSettingValueTemplateReferenceRequestBuilder) Request() *DeviceManagementConfigurationSettingValueTemplateReferenceRequest {
	return &DeviceManagementConfigurationSettingValueTemplateReferenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSettingValueTemplateReferenceRequest is request for DeviceManagementConfigurationSettingValueTemplateReference
type DeviceManagementConfigurationSettingValueTemplateReferenceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSettingValueTemplateReference
func (r *DeviceManagementConfigurationSettingValueTemplateReferenceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSettingValueTemplateReference, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSettingValueTemplateReference
func (r *DeviceManagementConfigurationSettingValueTemplateReferenceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSettingValueTemplateReference) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSettingValueTemplateReference
func (r *DeviceManagementConfigurationSettingValueTemplateReferenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingCollectionDefinition
type DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest
func (b *DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest {
	return &DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest is request for DeviceManagementConfigurationSimpleSettingCollectionDefinition
type DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingCollectionDefinition
func (r *DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingCollectionDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingCollectionDefinition
func (r *DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingCollectionDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingCollectionDefinition
func (r *DeviceManagementConfigurationSimpleSettingCollectionDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingCollectionInstanceRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingCollectionInstance
type DeviceManagementConfigurationSimpleSettingCollectionInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest
func (b *DeviceManagementConfigurationSimpleSettingCollectionInstanceRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest {
	return &DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest is request for DeviceManagementConfigurationSimpleSettingCollectionInstance
type DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingCollectionInstance
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingCollectionInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingCollectionInstance
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingCollectionInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingCollectionInstance
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
type DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest
func (b *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest {
	return &DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest is request for DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
type DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingDefinitionRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingDefinition
type DeviceManagementConfigurationSimpleSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingDefinitionRequest
func (b *DeviceManagementConfigurationSimpleSettingDefinitionRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingDefinitionRequest {
	return &DeviceManagementConfigurationSimpleSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingDefinitionRequest is request for DeviceManagementConfigurationSimpleSettingDefinition
type DeviceManagementConfigurationSimpleSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingDefinition
func (r *DeviceManagementConfigurationSimpleSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingDefinition
func (r *DeviceManagementConfigurationSimpleSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingDefinition
func (r *DeviceManagementConfigurationSimpleSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingInstanceRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingInstance
type DeviceManagementConfigurationSimpleSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingInstanceRequest
func (b *DeviceManagementConfigurationSimpleSettingInstanceRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingInstanceRequest {
	return &DeviceManagementConfigurationSimpleSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingInstanceRequest is request for DeviceManagementConfigurationSimpleSettingInstance
type DeviceManagementConfigurationSimpleSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingInstance
func (r *DeviceManagementConfigurationSimpleSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingInstance
func (r *DeviceManagementConfigurationSimpleSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingInstance
func (r *DeviceManagementConfigurationSimpleSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingInstanceTemplateRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingInstanceTemplate
type DeviceManagementConfigurationSimpleSettingInstanceTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest
func (b *DeviceManagementConfigurationSimpleSettingInstanceTemplateRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest {
	return &DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest is request for DeviceManagementConfigurationSimpleSettingInstanceTemplate
type DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingInstanceTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingInstanceTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingInstanceTemplate
func (r *DeviceManagementConfigurationSimpleSettingInstanceTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingValueRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingValue
type DeviceManagementConfigurationSimpleSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingValueRequest
func (b *DeviceManagementConfigurationSimpleSettingValueRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingValueRequest {
	return &DeviceManagementConfigurationSimpleSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingValueRequest is request for DeviceManagementConfigurationSimpleSettingValue
type DeviceManagementConfigurationSimpleSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingValue
func (r *DeviceManagementConfigurationSimpleSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingValue
func (r *DeviceManagementConfigurationSimpleSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingValue
func (r *DeviceManagementConfigurationSimpleSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationSimpleSettingValueTemplateRequestBuilder is request builder for DeviceManagementConfigurationSimpleSettingValueTemplate
type DeviceManagementConfigurationSimpleSettingValueTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationSimpleSettingValueTemplateRequest
func (b *DeviceManagementConfigurationSimpleSettingValueTemplateRequestBuilder) Request() *DeviceManagementConfigurationSimpleSettingValueTemplateRequest {
	return &DeviceManagementConfigurationSimpleSettingValueTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationSimpleSettingValueTemplateRequest is request for DeviceManagementConfigurationSimpleSettingValueTemplate
type DeviceManagementConfigurationSimpleSettingValueTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationSimpleSettingValueTemplate
func (r *DeviceManagementConfigurationSimpleSettingValueTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationSimpleSettingValueTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationSimpleSettingValueTemplate
func (r *DeviceManagementConfigurationSimpleSettingValueTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationSimpleSettingValueTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationSimpleSettingValueTemplate
func (r *DeviceManagementConfigurationSimpleSettingValueTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationStringSettingValueRequestBuilder is request builder for DeviceManagementConfigurationStringSettingValue
type DeviceManagementConfigurationStringSettingValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationStringSettingValueRequest
func (b *DeviceManagementConfigurationStringSettingValueRequestBuilder) Request() *DeviceManagementConfigurationStringSettingValueRequest {
	return &DeviceManagementConfigurationStringSettingValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationStringSettingValueRequest is request for DeviceManagementConfigurationStringSettingValue
type DeviceManagementConfigurationStringSettingValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationStringSettingValue
func (r *DeviceManagementConfigurationStringSettingValueRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationStringSettingValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationStringSettingValue
func (r *DeviceManagementConfigurationStringSettingValueRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationStringSettingValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationStringSettingValue
func (r *DeviceManagementConfigurationStringSettingValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest
func (b *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest {
	return &DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest is request for DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
type DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationStringSettingValueConstantDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueConstantDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationStringSettingValueDefaultTemplateRequestBuilder is request builder for DeviceManagementConfigurationStringSettingValueDefaultTemplate
type DeviceManagementConfigurationStringSettingValueDefaultTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest
func (b *DeviceManagementConfigurationStringSettingValueDefaultTemplateRequestBuilder) Request() *DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest {
	return &DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest is request for DeviceManagementConfigurationStringSettingValueDefaultTemplate
type DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationStringSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationStringSettingValueDefaultTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationStringSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationStringSettingValueDefaultTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationStringSettingValueDefaultTemplate
func (r *DeviceManagementConfigurationStringSettingValueDefaultTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationStringSettingValueDefinitionRequestBuilder is request builder for DeviceManagementConfigurationStringSettingValueDefinition
type DeviceManagementConfigurationStringSettingValueDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationStringSettingValueDefinitionRequest
func (b *DeviceManagementConfigurationStringSettingValueDefinitionRequestBuilder) Request() *DeviceManagementConfigurationStringSettingValueDefinitionRequest {
	return &DeviceManagementConfigurationStringSettingValueDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationStringSettingValueDefinitionRequest is request for DeviceManagementConfigurationStringSettingValueDefinition
type DeviceManagementConfigurationStringSettingValueDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationStringSettingValueDefinition
func (r *DeviceManagementConfigurationStringSettingValueDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationStringSettingValueDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationStringSettingValueDefinition
func (r *DeviceManagementConfigurationStringSettingValueDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationStringSettingValueDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationStringSettingValueDefinition
func (r *DeviceManagementConfigurationStringSettingValueDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationStringSettingValueTemplateRequestBuilder is request builder for DeviceManagementConfigurationStringSettingValueTemplate
type DeviceManagementConfigurationStringSettingValueTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationStringSettingValueTemplateRequest
func (b *DeviceManagementConfigurationStringSettingValueTemplateRequestBuilder) Request() *DeviceManagementConfigurationStringSettingValueTemplateRequest {
	return &DeviceManagementConfigurationStringSettingValueTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationStringSettingValueTemplateRequest is request for DeviceManagementConfigurationStringSettingValueTemplate
type DeviceManagementConfigurationStringSettingValueTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationStringSettingValueTemplate
func (r *DeviceManagementConfigurationStringSettingValueTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationStringSettingValueTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationStringSettingValueTemplate
func (r *DeviceManagementConfigurationStringSettingValueTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationStringSettingValueTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationStringSettingValueTemplate
func (r *DeviceManagementConfigurationStringSettingValueTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConfigurationWindowsSettingApplicabilityRequestBuilder is request builder for DeviceManagementConfigurationWindowsSettingApplicability
type DeviceManagementConfigurationWindowsSettingApplicabilityRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConfigurationWindowsSettingApplicabilityRequest
func (b *DeviceManagementConfigurationWindowsSettingApplicabilityRequestBuilder) Request() *DeviceManagementConfigurationWindowsSettingApplicabilityRequest {
	return &DeviceManagementConfigurationWindowsSettingApplicabilityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConfigurationWindowsSettingApplicabilityRequest is request for DeviceManagementConfigurationWindowsSettingApplicability
type DeviceManagementConfigurationWindowsSettingApplicabilityRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConfigurationWindowsSettingApplicability
func (r *DeviceManagementConfigurationWindowsSettingApplicabilityRequest) Get(ctx context.Context) (resObj *DeviceManagementConfigurationWindowsSettingApplicability, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConfigurationWindowsSettingApplicability
func (r *DeviceManagementConfigurationWindowsSettingApplicabilityRequest) Update(ctx context.Context, reqObj *DeviceManagementConfigurationWindowsSettingApplicability) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConfigurationWindowsSettingApplicability
func (r *DeviceManagementConfigurationWindowsSettingApplicabilityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementConstraintRequestBuilder is request builder for DeviceManagementConstraint
type DeviceManagementConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementConstraintRequest
func (b *DeviceManagementConstraintRequestBuilder) Request() *DeviceManagementConstraintRequest {
	return &DeviceManagementConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementConstraintRequest is request for DeviceManagementConstraint
type DeviceManagementConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementConstraint
func (r *DeviceManagementConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementConstraint
func (r *DeviceManagementConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementConstraint
func (r *DeviceManagementConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementDerivedCredentialSettingsRequestBuilder is request builder for DeviceManagementDerivedCredentialSettings
type DeviceManagementDerivedCredentialSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementDerivedCredentialSettingsRequest
func (b *DeviceManagementDerivedCredentialSettingsRequestBuilder) Request() *DeviceManagementDerivedCredentialSettingsRequest {
	return &DeviceManagementDerivedCredentialSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementDerivedCredentialSettingsRequest is request for DeviceManagementDerivedCredentialSettings
type DeviceManagementDerivedCredentialSettingsRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Get(ctx context.Context) (resObj *DeviceManagementDerivedCredentialSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Update(ctx context.Context, reqObj *DeviceManagementDerivedCredentialSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementDomainJoinConnectorRequestBuilder is request builder for DeviceManagementDomainJoinConnector
type DeviceManagementDomainJoinConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementDomainJoinConnectorRequest
func (b *DeviceManagementDomainJoinConnectorRequestBuilder) Request() *DeviceManagementDomainJoinConnectorRequest {
	return &DeviceManagementDomainJoinConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementDomainJoinConnectorRequest is request for DeviceManagementDomainJoinConnector
type DeviceManagementDomainJoinConnectorRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementDomainJoinConnector
func (r *DeviceManagementDomainJoinConnectorRequest) Get(ctx context.Context) (resObj *DeviceManagementDomainJoinConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementDomainJoinConnector
func (r *DeviceManagementDomainJoinConnectorRequest) Update(ctx context.Context, reqObj *DeviceManagementDomainJoinConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementDomainJoinConnector
func (r *DeviceManagementDomainJoinConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementEnumConstraintRequestBuilder is request builder for DeviceManagementEnumConstraint
type DeviceManagementEnumConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementEnumConstraintRequest
func (b *DeviceManagementEnumConstraintRequestBuilder) Request() *DeviceManagementEnumConstraintRequest {
	return &DeviceManagementEnumConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementEnumConstraintRequest is request for DeviceManagementEnumConstraint
type DeviceManagementEnumConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementEnumConstraint
func (r *DeviceManagementEnumConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementEnumConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementEnumConstraint
func (r *DeviceManagementEnumConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementEnumConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementEnumConstraint
func (r *DeviceManagementEnumConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementEnumValueRequestBuilder is request builder for DeviceManagementEnumValue
type DeviceManagementEnumValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementEnumValueRequest
func (b *DeviceManagementEnumValueRequestBuilder) Request() *DeviceManagementEnumValueRequest {
	return &DeviceManagementEnumValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementEnumValueRequest is request for DeviceManagementEnumValue
type DeviceManagementEnumValueRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementEnumValue
func (r *DeviceManagementEnumValueRequest) Get(ctx context.Context) (resObj *DeviceManagementEnumValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementEnumValue
func (r *DeviceManagementEnumValueRequest) Update(ctx context.Context, reqObj *DeviceManagementEnumValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementEnumValue
func (r *DeviceManagementEnumValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementExchangeAccessRuleRequestBuilder is request builder for DeviceManagementExchangeAccessRule
type DeviceManagementExchangeAccessRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExchangeAccessRuleRequest
func (b *DeviceManagementExchangeAccessRuleRequestBuilder) Request() *DeviceManagementExchangeAccessRuleRequest {
	return &DeviceManagementExchangeAccessRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExchangeAccessRuleRequest is request for DeviceManagementExchangeAccessRule
type DeviceManagementExchangeAccessRuleRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExchangeAccessRule
func (r *DeviceManagementExchangeAccessRuleRequest) Get(ctx context.Context) (resObj *DeviceManagementExchangeAccessRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExchangeAccessRule
func (r *DeviceManagementExchangeAccessRuleRequest) Update(ctx context.Context, reqObj *DeviceManagementExchangeAccessRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExchangeAccessRule
func (r *DeviceManagementExchangeAccessRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementExchangeConnectorRequestBuilder is request builder for DeviceManagementExchangeConnector
type DeviceManagementExchangeConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExchangeConnectorRequest
func (b *DeviceManagementExchangeConnectorRequestBuilder) Request() *DeviceManagementExchangeConnectorRequest {
	return &DeviceManagementExchangeConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExchangeConnectorRequest is request for DeviceManagementExchangeConnector
type DeviceManagementExchangeConnectorRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExchangeConnector
func (r *DeviceManagementExchangeConnectorRequest) Get(ctx context.Context) (resObj *DeviceManagementExchangeConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExchangeConnector
func (r *DeviceManagementExchangeConnectorRequest) Update(ctx context.Context, reqObj *DeviceManagementExchangeConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExchangeConnector
func (r *DeviceManagementExchangeConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementExchangeDeviceClassRequestBuilder is request builder for DeviceManagementExchangeDeviceClass
type DeviceManagementExchangeDeviceClassRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExchangeDeviceClassRequest
func (b *DeviceManagementExchangeDeviceClassRequestBuilder) Request() *DeviceManagementExchangeDeviceClassRequest {
	return &DeviceManagementExchangeDeviceClassRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExchangeDeviceClassRequest is request for DeviceManagementExchangeDeviceClass
type DeviceManagementExchangeDeviceClassRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExchangeDeviceClass
func (r *DeviceManagementExchangeDeviceClassRequest) Get(ctx context.Context) (resObj *DeviceManagementExchangeDeviceClass, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExchangeDeviceClass
func (r *DeviceManagementExchangeDeviceClassRequest) Update(ctx context.Context, reqObj *DeviceManagementExchangeDeviceClass) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExchangeDeviceClass
func (r *DeviceManagementExchangeDeviceClassRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementExchangeOnPremisesPolicyRequestBuilder is request builder for DeviceManagementExchangeOnPremisesPolicy
type DeviceManagementExchangeOnPremisesPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExchangeOnPremisesPolicyRequest
func (b *DeviceManagementExchangeOnPremisesPolicyRequestBuilder) Request() *DeviceManagementExchangeOnPremisesPolicyRequest {
	return &DeviceManagementExchangeOnPremisesPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExchangeOnPremisesPolicyRequest is request for DeviceManagementExchangeOnPremisesPolicy
type DeviceManagementExchangeOnPremisesPolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Get(ctx context.Context) (resObj *DeviceManagementExchangeOnPremisesPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Update(ctx context.Context, reqObj *DeviceManagementExchangeOnPremisesPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementExportJobRequestBuilder is request builder for DeviceManagementExportJob
type DeviceManagementExportJobRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExportJobRequest
func (b *DeviceManagementExportJobRequestBuilder) Request() *DeviceManagementExportJobRequest {
	return &DeviceManagementExportJobRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExportJobRequest is request for DeviceManagementExportJob
type DeviceManagementExportJobRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Get(ctx context.Context) (resObj *DeviceManagementExportJob, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Update(ctx context.Context, reqObj *DeviceManagementExportJob) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntegerSettingInstanceRequestBuilder is request builder for DeviceManagementIntegerSettingInstance
type DeviceManagementIntegerSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntegerSettingInstanceRequest
func (b *DeviceManagementIntegerSettingInstanceRequestBuilder) Request() *DeviceManagementIntegerSettingInstanceRequest {
	return &DeviceManagementIntegerSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntegerSettingInstanceRequest is request for DeviceManagementIntegerSettingInstance
type DeviceManagementIntegerSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntegerSettingInstance
func (r *DeviceManagementIntegerSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementIntegerSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntegerSettingInstance
func (r *DeviceManagementIntegerSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementIntegerSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntegerSettingInstance
func (r *DeviceManagementIntegerSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentRequestBuilder is request builder for DeviceManagementIntent
type DeviceManagementIntentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentRequest
func (b *DeviceManagementIntentRequestBuilder) Request() *DeviceManagementIntentRequest {
	return &DeviceManagementIntentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentRequest is request for DeviceManagementIntent
type DeviceManagementIntentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntent
func (r *DeviceManagementIntentRequest) Get(ctx context.Context) (resObj *DeviceManagementIntent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntent
func (r *DeviceManagementIntentRequest) Update(ctx context.Context, reqObj *DeviceManagementIntent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntent
func (r *DeviceManagementIntentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentAssignmentRequestBuilder is request builder for DeviceManagementIntentAssignment
type DeviceManagementIntentAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentAssignmentRequest
func (b *DeviceManagementIntentAssignmentRequestBuilder) Request() *DeviceManagementIntentAssignmentRequest {
	return &DeviceManagementIntentAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentAssignmentRequest is request for DeviceManagementIntentAssignment
type DeviceManagementIntentAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentAssignment
func (r *DeviceManagementIntentAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentAssignment
func (r *DeviceManagementIntentAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentAssignment
func (r *DeviceManagementIntentAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentCustomizedSettingRequestBuilder is request builder for DeviceManagementIntentCustomizedSetting
type DeviceManagementIntentCustomizedSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentCustomizedSettingRequest
func (b *DeviceManagementIntentCustomizedSettingRequestBuilder) Request() *DeviceManagementIntentCustomizedSettingRequest {
	return &DeviceManagementIntentCustomizedSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentCustomizedSettingRequest is request for DeviceManagementIntentCustomizedSetting
type DeviceManagementIntentCustomizedSettingRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentCustomizedSetting
func (r *DeviceManagementIntentCustomizedSettingRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentCustomizedSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentCustomizedSetting
func (r *DeviceManagementIntentCustomizedSettingRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentCustomizedSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentCustomizedSetting
func (r *DeviceManagementIntentCustomizedSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder is request builder for DeviceManagementIntentDeviceSettingStateSummary
type DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentDeviceSettingStateSummaryRequest
func (b *DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder) Request() *DeviceManagementIntentDeviceSettingStateSummaryRequest {
	return &DeviceManagementIntentDeviceSettingStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentDeviceSettingStateSummaryRequest is request for DeviceManagementIntentDeviceSettingStateSummary
type DeviceManagementIntentDeviceSettingStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentDeviceSettingStateSummary
func (r *DeviceManagementIntentDeviceSettingStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentDeviceSettingStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentDeviceSettingStateSummary
func (r *DeviceManagementIntentDeviceSettingStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentDeviceSettingStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentDeviceSettingStateSummary
func (r *DeviceManagementIntentDeviceSettingStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentDeviceStateRequestBuilder is request builder for DeviceManagementIntentDeviceState
type DeviceManagementIntentDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentDeviceStateRequest
func (b *DeviceManagementIntentDeviceStateRequestBuilder) Request() *DeviceManagementIntentDeviceStateRequest {
	return &DeviceManagementIntentDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentDeviceStateRequest is request for DeviceManagementIntentDeviceState
type DeviceManagementIntentDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentDeviceState
func (r *DeviceManagementIntentDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentDeviceState
func (r *DeviceManagementIntentDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentDeviceState
func (r *DeviceManagementIntentDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentDeviceStateSummaryRequestBuilder is request builder for DeviceManagementIntentDeviceStateSummary
type DeviceManagementIntentDeviceStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentDeviceStateSummaryRequest
func (b *DeviceManagementIntentDeviceStateSummaryRequestBuilder) Request() *DeviceManagementIntentDeviceStateSummaryRequest {
	return &DeviceManagementIntentDeviceStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentDeviceStateSummaryRequest is request for DeviceManagementIntentDeviceStateSummary
type DeviceManagementIntentDeviceStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentDeviceStateSummary
func (r *DeviceManagementIntentDeviceStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentDeviceStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentDeviceStateSummary
func (r *DeviceManagementIntentDeviceStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentDeviceStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentDeviceStateSummary
func (r *DeviceManagementIntentDeviceStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentSettingCategoryRequestBuilder is request builder for DeviceManagementIntentSettingCategory
type DeviceManagementIntentSettingCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentSettingCategoryRequest
func (b *DeviceManagementIntentSettingCategoryRequestBuilder) Request() *DeviceManagementIntentSettingCategoryRequest {
	return &DeviceManagementIntentSettingCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentSettingCategoryRequest is request for DeviceManagementIntentSettingCategory
type DeviceManagementIntentSettingCategoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentSettingCategory
func (r *DeviceManagementIntentSettingCategoryRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentSettingCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentSettingCategory
func (r *DeviceManagementIntentSettingCategoryRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentSettingCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentSettingCategory
func (r *DeviceManagementIntentSettingCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentSettingSecretConstraintRequestBuilder is request builder for DeviceManagementIntentSettingSecretConstraint
type DeviceManagementIntentSettingSecretConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentSettingSecretConstraintRequest
func (b *DeviceManagementIntentSettingSecretConstraintRequestBuilder) Request() *DeviceManagementIntentSettingSecretConstraintRequest {
	return &DeviceManagementIntentSettingSecretConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentSettingSecretConstraintRequest is request for DeviceManagementIntentSettingSecretConstraint
type DeviceManagementIntentSettingSecretConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentSettingSecretConstraint
func (r *DeviceManagementIntentSettingSecretConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentSettingSecretConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentSettingSecretConstraint
func (r *DeviceManagementIntentSettingSecretConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentSettingSecretConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentSettingSecretConstraint
func (r *DeviceManagementIntentSettingSecretConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentUserStateRequestBuilder is request builder for DeviceManagementIntentUserState
type DeviceManagementIntentUserStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentUserStateRequest
func (b *DeviceManagementIntentUserStateRequestBuilder) Request() *DeviceManagementIntentUserStateRequest {
	return &DeviceManagementIntentUserStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentUserStateRequest is request for DeviceManagementIntentUserState
type DeviceManagementIntentUserStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentUserState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentUserState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementIntentUserStateSummaryRequestBuilder is request builder for DeviceManagementIntentUserStateSummary
type DeviceManagementIntentUserStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentUserStateSummaryRequest
func (b *DeviceManagementIntentUserStateSummaryRequestBuilder) Request() *DeviceManagementIntentUserStateSummaryRequest {
	return &DeviceManagementIntentUserStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentUserStateSummaryRequest is request for DeviceManagementIntentUserStateSummary
type DeviceManagementIntentUserStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentUserStateSummary
func (r *DeviceManagementIntentUserStateSummaryRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentUserStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentUserStateSummary
func (r *DeviceManagementIntentUserStateSummaryRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentUserStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentUserStateSummary
func (r *DeviceManagementIntentUserStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementMonitoringRequestBuilder is request builder for DeviceManagementMonitoring
type DeviceManagementMonitoringRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementMonitoringRequest
func (b *DeviceManagementMonitoringRequestBuilder) Request() *DeviceManagementMonitoringRequest {
	return &DeviceManagementMonitoringRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementMonitoringRequest is request for DeviceManagementMonitoring
type DeviceManagementMonitoringRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementMonitoring
func (r *DeviceManagementMonitoringRequest) Get(ctx context.Context) (resObj *DeviceManagementMonitoring, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementMonitoring
func (r *DeviceManagementMonitoringRequest) Update(ctx context.Context, reqObj *DeviceManagementMonitoring) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementMonitoring
func (r *DeviceManagementMonitoringRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementPartnerRequestBuilder is request builder for DeviceManagementPartner
type DeviceManagementPartnerRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementPartnerRequest
func (b *DeviceManagementPartnerRequestBuilder) Request() *DeviceManagementPartnerRequest {
	return &DeviceManagementPartnerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementPartnerRequest is request for DeviceManagementPartner
type DeviceManagementPartnerRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementPartner
func (r *DeviceManagementPartnerRequest) Get(ctx context.Context) (resObj *DeviceManagementPartner, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementPartner
func (r *DeviceManagementPartnerRequest) Update(ctx context.Context, reqObj *DeviceManagementPartner) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementPartner
func (r *DeviceManagementPartnerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementPartnerAssignmentRequestBuilder is request builder for DeviceManagementPartnerAssignment
type DeviceManagementPartnerAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementPartnerAssignmentRequest
func (b *DeviceManagementPartnerAssignmentRequestBuilder) Request() *DeviceManagementPartnerAssignmentRequest {
	return &DeviceManagementPartnerAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementPartnerAssignmentRequest is request for DeviceManagementPartnerAssignment
type DeviceManagementPartnerAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementPartnerAssignment
func (r *DeviceManagementPartnerAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementPartnerAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementPartnerAssignment
func (r *DeviceManagementPartnerAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementPartnerAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementPartnerAssignment
func (r *DeviceManagementPartnerAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementPriorityMetaDataRequestBuilder is request builder for DeviceManagementPriorityMetaData
type DeviceManagementPriorityMetaDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementPriorityMetaDataRequest
func (b *DeviceManagementPriorityMetaDataRequestBuilder) Request() *DeviceManagementPriorityMetaDataRequest {
	return &DeviceManagementPriorityMetaDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementPriorityMetaDataRequest is request for DeviceManagementPriorityMetaData
type DeviceManagementPriorityMetaDataRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementPriorityMetaData
func (r *DeviceManagementPriorityMetaDataRequest) Get(ctx context.Context) (resObj *DeviceManagementPriorityMetaData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementPriorityMetaData
func (r *DeviceManagementPriorityMetaDataRequest) Update(ctx context.Context, reqObj *DeviceManagementPriorityMetaData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementPriorityMetaData
func (r *DeviceManagementPriorityMetaDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementReportsRequestBuilder is request builder for DeviceManagementReports
type DeviceManagementReportsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementReportsRequest
func (b *DeviceManagementReportsRequestBuilder) Request() *DeviceManagementReportsRequest {
	return &DeviceManagementReportsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementReportsRequest is request for DeviceManagementReports
type DeviceManagementReportsRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementReports
func (r *DeviceManagementReportsRequest) Get(ctx context.Context) (resObj *DeviceManagementReports, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementReports
func (r *DeviceManagementReportsRequest) Update(ctx context.Context, reqObj *DeviceManagementReports) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementReports
func (r *DeviceManagementReportsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementResourceAccessProfileAssignmentRequestBuilder is request builder for DeviceManagementResourceAccessProfileAssignment
type DeviceManagementResourceAccessProfileAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementResourceAccessProfileAssignmentRequest
func (b *DeviceManagementResourceAccessProfileAssignmentRequestBuilder) Request() *DeviceManagementResourceAccessProfileAssignmentRequest {
	return &DeviceManagementResourceAccessProfileAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementResourceAccessProfileAssignmentRequest is request for DeviceManagementResourceAccessProfileAssignment
type DeviceManagementResourceAccessProfileAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementResourceAccessProfileAssignment
func (r *DeviceManagementResourceAccessProfileAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementResourceAccessProfileAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementResourceAccessProfileAssignment
func (r *DeviceManagementResourceAccessProfileAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementResourceAccessProfileAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementResourceAccessProfileAssignment
func (r *DeviceManagementResourceAccessProfileAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementResourceAccessProfileBaseRequestBuilder is request builder for DeviceManagementResourceAccessProfileBase
type DeviceManagementResourceAccessProfileBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementResourceAccessProfileBaseRequest
func (b *DeviceManagementResourceAccessProfileBaseRequestBuilder) Request() *DeviceManagementResourceAccessProfileBaseRequest {
	return &DeviceManagementResourceAccessProfileBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementResourceAccessProfileBaseRequest is request for DeviceManagementResourceAccessProfileBase
type DeviceManagementResourceAccessProfileBaseRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementResourceAccessProfileBase
func (r *DeviceManagementResourceAccessProfileBaseRequest) Get(ctx context.Context) (resObj *DeviceManagementResourceAccessProfileBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementResourceAccessProfileBase
func (r *DeviceManagementResourceAccessProfileBaseRequest) Update(ctx context.Context, reqObj *DeviceManagementResourceAccessProfileBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementResourceAccessProfileBase
func (r *DeviceManagementResourceAccessProfileBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementReusablePolicySettingRequestBuilder is request builder for DeviceManagementReusablePolicySetting
type DeviceManagementReusablePolicySettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementReusablePolicySettingRequest
func (b *DeviceManagementReusablePolicySettingRequestBuilder) Request() *DeviceManagementReusablePolicySettingRequest {
	return &DeviceManagementReusablePolicySettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementReusablePolicySettingRequest is request for DeviceManagementReusablePolicySetting
type DeviceManagementReusablePolicySettingRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementReusablePolicySetting
func (r *DeviceManagementReusablePolicySettingRequest) Get(ctx context.Context) (resObj *DeviceManagementReusablePolicySetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementReusablePolicySetting
func (r *DeviceManagementReusablePolicySettingRequest) Update(ctx context.Context, reqObj *DeviceManagementReusablePolicySetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementReusablePolicySetting
func (r *DeviceManagementReusablePolicySettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptRequestBuilder is request builder for DeviceManagementScript
type DeviceManagementScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptRequest
func (b *DeviceManagementScriptRequestBuilder) Request() *DeviceManagementScriptRequest {
	return &DeviceManagementScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptRequest is request for DeviceManagementScript
type DeviceManagementScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScript
func (r *DeviceManagementScriptRequest) Get(ctx context.Context) (resObj *DeviceManagementScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScript
func (r *DeviceManagementScriptRequest) Update(ctx context.Context, reqObj *DeviceManagementScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScript
func (r *DeviceManagementScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptAssignmentRequestBuilder is request builder for DeviceManagementScriptAssignment
type DeviceManagementScriptAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptAssignmentRequest
func (b *DeviceManagementScriptAssignmentRequestBuilder) Request() *DeviceManagementScriptAssignmentRequest {
	return &DeviceManagementScriptAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptAssignmentRequest is request for DeviceManagementScriptAssignment
type DeviceManagementScriptAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptAssignment
func (r *DeviceManagementScriptAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptAssignment
func (r *DeviceManagementScriptAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptAssignment
func (r *DeviceManagementScriptAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptDeviceStateRequestBuilder is request builder for DeviceManagementScriptDeviceState
type DeviceManagementScriptDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptDeviceStateRequest
func (b *DeviceManagementScriptDeviceStateRequestBuilder) Request() *DeviceManagementScriptDeviceStateRequest {
	return &DeviceManagementScriptDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptDeviceStateRequest is request for DeviceManagementScriptDeviceState
type DeviceManagementScriptDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptGroupAssignmentRequestBuilder is request builder for DeviceManagementScriptGroupAssignment
type DeviceManagementScriptGroupAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptGroupAssignmentRequest
func (b *DeviceManagementScriptGroupAssignmentRequestBuilder) Request() *DeviceManagementScriptGroupAssignmentRequest {
	return &DeviceManagementScriptGroupAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptGroupAssignmentRequest is request for DeviceManagementScriptGroupAssignment
type DeviceManagementScriptGroupAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptGroupAssignment
func (r *DeviceManagementScriptGroupAssignmentRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptGroupAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptGroupAssignment
func (r *DeviceManagementScriptGroupAssignmentRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptGroupAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptGroupAssignment
func (r *DeviceManagementScriptGroupAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptPolicySetItemRequestBuilder is request builder for DeviceManagementScriptPolicySetItem
type DeviceManagementScriptPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptPolicySetItemRequest
func (b *DeviceManagementScriptPolicySetItemRequestBuilder) Request() *DeviceManagementScriptPolicySetItemRequest {
	return &DeviceManagementScriptPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptPolicySetItemRequest is request for DeviceManagementScriptPolicySetItem
type DeviceManagementScriptPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptPolicySetItem
func (r *DeviceManagementScriptPolicySetItemRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptPolicySetItem
func (r *DeviceManagementScriptPolicySetItemRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptPolicySetItem
func (r *DeviceManagementScriptPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptRunSummaryRequestBuilder is request builder for DeviceManagementScriptRunSummary
type DeviceManagementScriptRunSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptRunSummaryRequest
func (b *DeviceManagementScriptRunSummaryRequestBuilder) Request() *DeviceManagementScriptRunSummaryRequest {
	return &DeviceManagementScriptRunSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptRunSummaryRequest is request for DeviceManagementScriptRunSummary
type DeviceManagementScriptRunSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptRunSummary
func (r *DeviceManagementScriptRunSummaryRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptRunSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptRunSummary
func (r *DeviceManagementScriptRunSummaryRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptRunSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptRunSummary
func (r *DeviceManagementScriptRunSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementScriptUserStateRequestBuilder is request builder for DeviceManagementScriptUserState
type DeviceManagementScriptUserStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptUserStateRequest
func (b *DeviceManagementScriptUserStateRequestBuilder) Request() *DeviceManagementScriptUserStateRequest {
	return &DeviceManagementScriptUserStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptUserStateRequest is request for DeviceManagementScriptUserState
type DeviceManagementScriptUserStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptUserState
func (r *DeviceManagementScriptUserStateRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptUserState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptUserState
func (r *DeviceManagementScriptUserStateRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptUserState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptUserState
func (r *DeviceManagementScriptUserStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingAbstractImplementationConstraintRequestBuilder is request builder for DeviceManagementSettingAbstractImplementationConstraint
type DeviceManagementSettingAbstractImplementationConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingAbstractImplementationConstraintRequest
func (b *DeviceManagementSettingAbstractImplementationConstraintRequestBuilder) Request() *DeviceManagementSettingAbstractImplementationConstraintRequest {
	return &DeviceManagementSettingAbstractImplementationConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingAbstractImplementationConstraintRequest is request for DeviceManagementSettingAbstractImplementationConstraint
type DeviceManagementSettingAbstractImplementationConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingAbstractImplementationConstraint
func (r *DeviceManagementSettingAbstractImplementationConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingAbstractImplementationConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingAbstractImplementationConstraint
func (r *DeviceManagementSettingAbstractImplementationConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingAbstractImplementationConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingAbstractImplementationConstraint
func (r *DeviceManagementSettingAbstractImplementationConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingAppConstraintRequestBuilder is request builder for DeviceManagementSettingAppConstraint
type DeviceManagementSettingAppConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingAppConstraintRequest
func (b *DeviceManagementSettingAppConstraintRequestBuilder) Request() *DeviceManagementSettingAppConstraintRequest {
	return &DeviceManagementSettingAppConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingAppConstraintRequest is request for DeviceManagementSettingAppConstraint
type DeviceManagementSettingAppConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingAppConstraint
func (r *DeviceManagementSettingAppConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingAppConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingAppConstraint
func (r *DeviceManagementSettingAppConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingAppConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingAppConstraint
func (r *DeviceManagementSettingAppConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingBooleanConstraintRequestBuilder is request builder for DeviceManagementSettingBooleanConstraint
type DeviceManagementSettingBooleanConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingBooleanConstraintRequest
func (b *DeviceManagementSettingBooleanConstraintRequestBuilder) Request() *DeviceManagementSettingBooleanConstraintRequest {
	return &DeviceManagementSettingBooleanConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingBooleanConstraintRequest is request for DeviceManagementSettingBooleanConstraint
type DeviceManagementSettingBooleanConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingBooleanConstraint
func (r *DeviceManagementSettingBooleanConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingBooleanConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingBooleanConstraint
func (r *DeviceManagementSettingBooleanConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingBooleanConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingBooleanConstraint
func (r *DeviceManagementSettingBooleanConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingCategoryRequestBuilder is request builder for DeviceManagementSettingCategory
type DeviceManagementSettingCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingCategoryRequest
func (b *DeviceManagementSettingCategoryRequestBuilder) Request() *DeviceManagementSettingCategoryRequest {
	return &DeviceManagementSettingCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingCategoryRequest is request for DeviceManagementSettingCategory
type DeviceManagementSettingCategoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingCategory
func (r *DeviceManagementSettingCategoryRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingCategory
func (r *DeviceManagementSettingCategoryRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingCategory
func (r *DeviceManagementSettingCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingCollectionConstraintRequestBuilder is request builder for DeviceManagementSettingCollectionConstraint
type DeviceManagementSettingCollectionConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingCollectionConstraintRequest
func (b *DeviceManagementSettingCollectionConstraintRequestBuilder) Request() *DeviceManagementSettingCollectionConstraintRequest {
	return &DeviceManagementSettingCollectionConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingCollectionConstraintRequest is request for DeviceManagementSettingCollectionConstraint
type DeviceManagementSettingCollectionConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingCollectionConstraint
func (r *DeviceManagementSettingCollectionConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingCollectionConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingCollectionConstraint
func (r *DeviceManagementSettingCollectionConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingCollectionConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingCollectionConstraint
func (r *DeviceManagementSettingCollectionConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingComparisonRequestBuilder is request builder for DeviceManagementSettingComparison
type DeviceManagementSettingComparisonRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingComparisonRequest
func (b *DeviceManagementSettingComparisonRequestBuilder) Request() *DeviceManagementSettingComparisonRequest {
	return &DeviceManagementSettingComparisonRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingComparisonRequest is request for DeviceManagementSettingComparison
type DeviceManagementSettingComparisonRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingComparison
func (r *DeviceManagementSettingComparisonRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingComparison, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingComparison
func (r *DeviceManagementSettingComparisonRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingComparison) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingComparison
func (r *DeviceManagementSettingComparisonRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingDefinitionRequestBuilder is request builder for DeviceManagementSettingDefinition
type DeviceManagementSettingDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingDefinitionRequest
func (b *DeviceManagementSettingDefinitionRequestBuilder) Request() *DeviceManagementSettingDefinitionRequest {
	return &DeviceManagementSettingDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingDefinitionRequest is request for DeviceManagementSettingDefinition
type DeviceManagementSettingDefinitionRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingDefinition
func (r *DeviceManagementSettingDefinitionRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingDefinition
func (r *DeviceManagementSettingDefinitionRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingDefinition
func (r *DeviceManagementSettingDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingDependencyRequestBuilder is request builder for DeviceManagementSettingDependency
type DeviceManagementSettingDependencyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingDependencyRequest
func (b *DeviceManagementSettingDependencyRequestBuilder) Request() *DeviceManagementSettingDependencyRequest {
	return &DeviceManagementSettingDependencyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingDependencyRequest is request for DeviceManagementSettingDependency
type DeviceManagementSettingDependencyRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingDependency
func (r *DeviceManagementSettingDependencyRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingDependency, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingDependency
func (r *DeviceManagementSettingDependencyRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingDependency) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingDependency
func (r *DeviceManagementSettingDependencyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingEnrollmentTypeConstraintRequestBuilder is request builder for DeviceManagementSettingEnrollmentTypeConstraint
type DeviceManagementSettingEnrollmentTypeConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingEnrollmentTypeConstraintRequest
func (b *DeviceManagementSettingEnrollmentTypeConstraintRequestBuilder) Request() *DeviceManagementSettingEnrollmentTypeConstraintRequest {
	return &DeviceManagementSettingEnrollmentTypeConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingEnrollmentTypeConstraintRequest is request for DeviceManagementSettingEnrollmentTypeConstraint
type DeviceManagementSettingEnrollmentTypeConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingEnrollmentTypeConstraint
func (r *DeviceManagementSettingEnrollmentTypeConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingEnrollmentTypeConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingEnrollmentTypeConstraint
func (r *DeviceManagementSettingEnrollmentTypeConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingEnrollmentTypeConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingEnrollmentTypeConstraint
func (r *DeviceManagementSettingEnrollmentTypeConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingFileConstraintRequestBuilder is request builder for DeviceManagementSettingFileConstraint
type DeviceManagementSettingFileConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingFileConstraintRequest
func (b *DeviceManagementSettingFileConstraintRequestBuilder) Request() *DeviceManagementSettingFileConstraintRequest {
	return &DeviceManagementSettingFileConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingFileConstraintRequest is request for DeviceManagementSettingFileConstraint
type DeviceManagementSettingFileConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingFileConstraint
func (r *DeviceManagementSettingFileConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingFileConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingFileConstraint
func (r *DeviceManagementSettingFileConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingFileConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingFileConstraint
func (r *DeviceManagementSettingFileConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingInstanceRequestBuilder is request builder for DeviceManagementSettingInstance
type DeviceManagementSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingInstanceRequest
func (b *DeviceManagementSettingInstanceRequestBuilder) Request() *DeviceManagementSettingInstanceRequest {
	return &DeviceManagementSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingInstanceRequest is request for DeviceManagementSettingInstance
type DeviceManagementSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingInstance
func (r *DeviceManagementSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingInstance
func (r *DeviceManagementSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingInstance
func (r *DeviceManagementSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingIntegerConstraintRequestBuilder is request builder for DeviceManagementSettingIntegerConstraint
type DeviceManagementSettingIntegerConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingIntegerConstraintRequest
func (b *DeviceManagementSettingIntegerConstraintRequestBuilder) Request() *DeviceManagementSettingIntegerConstraintRequest {
	return &DeviceManagementSettingIntegerConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingIntegerConstraintRequest is request for DeviceManagementSettingIntegerConstraint
type DeviceManagementSettingIntegerConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingIntegerConstraint
func (r *DeviceManagementSettingIntegerConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingIntegerConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingIntegerConstraint
func (r *DeviceManagementSettingIntegerConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingIntegerConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingIntegerConstraint
func (r *DeviceManagementSettingIntegerConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingProfileConstraintRequestBuilder is request builder for DeviceManagementSettingProfileConstraint
type DeviceManagementSettingProfileConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingProfileConstraintRequest
func (b *DeviceManagementSettingProfileConstraintRequestBuilder) Request() *DeviceManagementSettingProfileConstraintRequest {
	return &DeviceManagementSettingProfileConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingProfileConstraintRequest is request for DeviceManagementSettingProfileConstraint
type DeviceManagementSettingProfileConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingProfileConstraint
func (r *DeviceManagementSettingProfileConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingProfileConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingProfileConstraint
func (r *DeviceManagementSettingProfileConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingProfileConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingProfileConstraint
func (r *DeviceManagementSettingProfileConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingRegexConstraintRequestBuilder is request builder for DeviceManagementSettingRegexConstraint
type DeviceManagementSettingRegexConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingRegexConstraintRequest
func (b *DeviceManagementSettingRegexConstraintRequestBuilder) Request() *DeviceManagementSettingRegexConstraintRequest {
	return &DeviceManagementSettingRegexConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingRegexConstraintRequest is request for DeviceManagementSettingRegexConstraint
type DeviceManagementSettingRegexConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingRegexConstraint
func (r *DeviceManagementSettingRegexConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingRegexConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingRegexConstraint
func (r *DeviceManagementSettingRegexConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingRegexConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingRegexConstraint
func (r *DeviceManagementSettingRegexConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingRequiredConstraintRequestBuilder is request builder for DeviceManagementSettingRequiredConstraint
type DeviceManagementSettingRequiredConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingRequiredConstraintRequest
func (b *DeviceManagementSettingRequiredConstraintRequestBuilder) Request() *DeviceManagementSettingRequiredConstraintRequest {
	return &DeviceManagementSettingRequiredConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingRequiredConstraintRequest is request for DeviceManagementSettingRequiredConstraint
type DeviceManagementSettingRequiredConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingRequiredConstraint
func (r *DeviceManagementSettingRequiredConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingRequiredConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingRequiredConstraint
func (r *DeviceManagementSettingRequiredConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingRequiredConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingRequiredConstraint
func (r *DeviceManagementSettingRequiredConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingSddlConstraintRequestBuilder is request builder for DeviceManagementSettingSddlConstraint
type DeviceManagementSettingSddlConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingSddlConstraintRequest
func (b *DeviceManagementSettingSddlConstraintRequestBuilder) Request() *DeviceManagementSettingSddlConstraintRequest {
	return &DeviceManagementSettingSddlConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingSddlConstraintRequest is request for DeviceManagementSettingSddlConstraint
type DeviceManagementSettingSddlConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingSddlConstraint
func (r *DeviceManagementSettingSddlConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingSddlConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingSddlConstraint
func (r *DeviceManagementSettingSddlConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingSddlConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingSddlConstraint
func (r *DeviceManagementSettingSddlConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingStringLengthConstraintRequestBuilder is request builder for DeviceManagementSettingStringLengthConstraint
type DeviceManagementSettingStringLengthConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingStringLengthConstraintRequest
func (b *DeviceManagementSettingStringLengthConstraintRequestBuilder) Request() *DeviceManagementSettingStringLengthConstraintRequest {
	return &DeviceManagementSettingStringLengthConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingStringLengthConstraintRequest is request for DeviceManagementSettingStringLengthConstraint
type DeviceManagementSettingStringLengthConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingStringLengthConstraint
func (r *DeviceManagementSettingStringLengthConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingStringLengthConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingStringLengthConstraint
func (r *DeviceManagementSettingStringLengthConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingStringLengthConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingStringLengthConstraint
func (r *DeviceManagementSettingStringLengthConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingXMLConstraintRequestBuilder is request builder for DeviceManagementSettingXMLConstraint
type DeviceManagementSettingXMLConstraintRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingXMLConstraintRequest
func (b *DeviceManagementSettingXMLConstraintRequestBuilder) Request() *DeviceManagementSettingXMLConstraintRequest {
	return &DeviceManagementSettingXMLConstraintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingXMLConstraintRequest is request for DeviceManagementSettingXMLConstraint
type DeviceManagementSettingXMLConstraintRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettingXMLConstraint
func (r *DeviceManagementSettingXMLConstraintRequest) Get(ctx context.Context) (resObj *DeviceManagementSettingXMLConstraint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettingXMLConstraint
func (r *DeviceManagementSettingXMLConstraintRequest) Update(ctx context.Context, reqObj *DeviceManagementSettingXMLConstraint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettingXMLConstraint
func (r *DeviceManagementSettingXMLConstraintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementSettingsRequestBuilder is request builder for DeviceManagementSettings
type DeviceManagementSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementSettingsRequest
func (b *DeviceManagementSettingsRequestBuilder) Request() *DeviceManagementSettingsRequest {
	return &DeviceManagementSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementSettingsRequest is request for DeviceManagementSettings
type DeviceManagementSettingsRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementSettings
func (r *DeviceManagementSettingsRequest) Get(ctx context.Context) (resObj *DeviceManagementSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementSettings
func (r *DeviceManagementSettingsRequest) Update(ctx context.Context, reqObj *DeviceManagementSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementSettings
func (r *DeviceManagementSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementStringSettingInstanceRequestBuilder is request builder for DeviceManagementStringSettingInstance
type DeviceManagementStringSettingInstanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementStringSettingInstanceRequest
func (b *DeviceManagementStringSettingInstanceRequestBuilder) Request() *DeviceManagementStringSettingInstanceRequest {
	return &DeviceManagementStringSettingInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementStringSettingInstanceRequest is request for DeviceManagementStringSettingInstance
type DeviceManagementStringSettingInstanceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementStringSettingInstance
func (r *DeviceManagementStringSettingInstanceRequest) Get(ctx context.Context) (resObj *DeviceManagementStringSettingInstance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementStringSettingInstance
func (r *DeviceManagementStringSettingInstanceRequest) Update(ctx context.Context, reqObj *DeviceManagementStringSettingInstance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementStringSettingInstance
func (r *DeviceManagementStringSettingInstanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementTemplateRequestBuilder is request builder for DeviceManagementTemplate
type DeviceManagementTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementTemplateRequest
func (b *DeviceManagementTemplateRequestBuilder) Request() *DeviceManagementTemplateRequest {
	return &DeviceManagementTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementTemplateRequest is request for DeviceManagementTemplate
type DeviceManagementTemplateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementTemplate
func (r *DeviceManagementTemplateRequest) Get(ctx context.Context) (resObj *DeviceManagementTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementTemplate
func (r *DeviceManagementTemplateRequest) Update(ctx context.Context, reqObj *DeviceManagementTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementTemplate
func (r *DeviceManagementTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementTemplateSettingCategoryRequestBuilder is request builder for DeviceManagementTemplateSettingCategory
type DeviceManagementTemplateSettingCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementTemplateSettingCategoryRequest
func (b *DeviceManagementTemplateSettingCategoryRequestBuilder) Request() *DeviceManagementTemplateSettingCategoryRequest {
	return &DeviceManagementTemplateSettingCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementTemplateSettingCategoryRequest is request for DeviceManagementTemplateSettingCategory
type DeviceManagementTemplateSettingCategoryRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementTemplateSettingCategory
func (r *DeviceManagementTemplateSettingCategoryRequest) Get(ctx context.Context) (resObj *DeviceManagementTemplateSettingCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementTemplateSettingCategory
func (r *DeviceManagementTemplateSettingCategoryRequest) Update(ctx context.Context, reqObj *DeviceManagementTemplateSettingCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementTemplateSettingCategory
func (r *DeviceManagementTemplateSettingCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementTroubleshootingErrorDetailsRequestBuilder is request builder for DeviceManagementTroubleshootingErrorDetails
type DeviceManagementTroubleshootingErrorDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementTroubleshootingErrorDetailsRequest
func (b *DeviceManagementTroubleshootingErrorDetailsRequestBuilder) Request() *DeviceManagementTroubleshootingErrorDetailsRequest {
	return &DeviceManagementTroubleshootingErrorDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementTroubleshootingErrorDetailsRequest is request for DeviceManagementTroubleshootingErrorDetails
type DeviceManagementTroubleshootingErrorDetailsRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementTroubleshootingErrorDetails
func (r *DeviceManagementTroubleshootingErrorDetailsRequest) Get(ctx context.Context) (resObj *DeviceManagementTroubleshootingErrorDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementTroubleshootingErrorDetails
func (r *DeviceManagementTroubleshootingErrorDetailsRequest) Update(ctx context.Context, reqObj *DeviceManagementTroubleshootingErrorDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementTroubleshootingErrorDetails
func (r *DeviceManagementTroubleshootingErrorDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementTroubleshootingErrorResourceRequestBuilder is request builder for DeviceManagementTroubleshootingErrorResource
type DeviceManagementTroubleshootingErrorResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementTroubleshootingErrorResourceRequest
func (b *DeviceManagementTroubleshootingErrorResourceRequestBuilder) Request() *DeviceManagementTroubleshootingErrorResourceRequest {
	return &DeviceManagementTroubleshootingErrorResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementTroubleshootingErrorResourceRequest is request for DeviceManagementTroubleshootingErrorResource
type DeviceManagementTroubleshootingErrorResourceRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementTroubleshootingErrorResource
func (r *DeviceManagementTroubleshootingErrorResourceRequest) Get(ctx context.Context) (resObj *DeviceManagementTroubleshootingErrorResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementTroubleshootingErrorResource
func (r *DeviceManagementTroubleshootingErrorResourceRequest) Update(ctx context.Context, reqObj *DeviceManagementTroubleshootingErrorResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementTroubleshootingErrorResource
func (r *DeviceManagementTroubleshootingErrorResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementTroubleshootingEventRequestBuilder is request builder for DeviceManagementTroubleshootingEvent
type DeviceManagementTroubleshootingEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementTroubleshootingEventRequest
func (b *DeviceManagementTroubleshootingEventRequestBuilder) Request() *DeviceManagementTroubleshootingEventRequest {
	return &DeviceManagementTroubleshootingEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementTroubleshootingEventRequest is request for DeviceManagementTroubleshootingEvent
type DeviceManagementTroubleshootingEventRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementTroubleshootingEvent
func (r *DeviceManagementTroubleshootingEventRequest) Get(ctx context.Context) (resObj *DeviceManagementTroubleshootingEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementTroubleshootingEvent
func (r *DeviceManagementTroubleshootingEventRequest) Update(ctx context.Context, reqObj *DeviceManagementTroubleshootingEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementTroubleshootingEvent
func (r *DeviceManagementTroubleshootingEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementUserRightsLocalUserOrGroupRequestBuilder is request builder for DeviceManagementUserRightsLocalUserOrGroup
type DeviceManagementUserRightsLocalUserOrGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementUserRightsLocalUserOrGroupRequest
func (b *DeviceManagementUserRightsLocalUserOrGroupRequestBuilder) Request() *DeviceManagementUserRightsLocalUserOrGroupRequest {
	return &DeviceManagementUserRightsLocalUserOrGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementUserRightsLocalUserOrGroupRequest is request for DeviceManagementUserRightsLocalUserOrGroup
type DeviceManagementUserRightsLocalUserOrGroupRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementUserRightsLocalUserOrGroup
func (r *DeviceManagementUserRightsLocalUserOrGroupRequest) Get(ctx context.Context) (resObj *DeviceManagementUserRightsLocalUserOrGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementUserRightsLocalUserOrGroup
func (r *DeviceManagementUserRightsLocalUserOrGroupRequest) Update(ctx context.Context, reqObj *DeviceManagementUserRightsLocalUserOrGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementUserRightsLocalUserOrGroup
func (r *DeviceManagementUserRightsLocalUserOrGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementUserRightsSettingRequestBuilder is request builder for DeviceManagementUserRightsSetting
type DeviceManagementUserRightsSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementUserRightsSettingRequest
func (b *DeviceManagementUserRightsSettingRequestBuilder) Request() *DeviceManagementUserRightsSettingRequest {
	return &DeviceManagementUserRightsSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementUserRightsSettingRequest is request for DeviceManagementUserRightsSetting
type DeviceManagementUserRightsSettingRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementUserRightsSetting
func (r *DeviceManagementUserRightsSettingRequest) Get(ctx context.Context) (resObj *DeviceManagementUserRightsSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementUserRightsSetting
func (r *DeviceManagementUserRightsSettingRequest) Update(ctx context.Context, reqObj *DeviceManagementUserRightsSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementUserRightsSetting
func (r *DeviceManagementUserRightsSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceOperatingSystemSummaryRequestBuilder is request builder for DeviceOperatingSystemSummary
type DeviceOperatingSystemSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceOperatingSystemSummaryRequest
func (b *DeviceOperatingSystemSummaryRequestBuilder) Request() *DeviceOperatingSystemSummaryRequest {
	return &DeviceOperatingSystemSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceOperatingSystemSummaryRequest is request for DeviceOperatingSystemSummary
type DeviceOperatingSystemSummaryRequest struct{ BaseRequest }

// Get performs GET request for DeviceOperatingSystemSummary
func (r *DeviceOperatingSystemSummaryRequest) Get(ctx context.Context) (resObj *DeviceOperatingSystemSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceOperatingSystemSummary
func (r *DeviceOperatingSystemSummaryRequest) Update(ctx context.Context, reqObj *DeviceOperatingSystemSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceOperatingSystemSummary
func (r *DeviceOperatingSystemSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceProtectionOverviewRequestBuilder is request builder for DeviceProtectionOverview
type DeviceProtectionOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceProtectionOverviewRequest
func (b *DeviceProtectionOverviewRequestBuilder) Request() *DeviceProtectionOverviewRequest {
	return &DeviceProtectionOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceProtectionOverviewRequest is request for DeviceProtectionOverview
type DeviceProtectionOverviewRequest struct{ BaseRequest }

// Get performs GET request for DeviceProtectionOverview
func (r *DeviceProtectionOverviewRequest) Get(ctx context.Context) (resObj *DeviceProtectionOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceProtectionOverview
func (r *DeviceProtectionOverviewRequest) Update(ctx context.Context, reqObj *DeviceProtectionOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceProtectionOverview
func (r *DeviceProtectionOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceRegistrationPolicyRequestBuilder is request builder for DeviceRegistrationPolicy
type DeviceRegistrationPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceRegistrationPolicyRequest
func (b *DeviceRegistrationPolicyRequestBuilder) Request() *DeviceRegistrationPolicyRequest {
	return &DeviceRegistrationPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceRegistrationPolicyRequest is request for DeviceRegistrationPolicy
type DeviceRegistrationPolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceRegistrationPolicy
func (r *DeviceRegistrationPolicyRequest) Get(ctx context.Context) (resObj *DeviceRegistrationPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceRegistrationPolicy
func (r *DeviceRegistrationPolicyRequest) Update(ctx context.Context, reqObj *DeviceRegistrationPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceRegistrationPolicy
func (r *DeviceRegistrationPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceRestrictionActionRequestBuilder is request builder for DeviceRestrictionAction
type DeviceRestrictionActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceRestrictionActionRequest
func (b *DeviceRestrictionActionRequestBuilder) Request() *DeviceRestrictionActionRequest {
	return &DeviceRestrictionActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceRestrictionActionRequest is request for DeviceRestrictionAction
type DeviceRestrictionActionRequest struct{ BaseRequest }

// Get performs GET request for DeviceRestrictionAction
func (r *DeviceRestrictionActionRequest) Get(ctx context.Context) (resObj *DeviceRestrictionAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceRestrictionAction
func (r *DeviceRestrictionActionRequest) Update(ctx context.Context, reqObj *DeviceRestrictionAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceRestrictionAction
func (r *DeviceRestrictionActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceScopeActionResultRequestBuilder is request builder for DeviceScopeActionResult
type DeviceScopeActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceScopeActionResultRequest
func (b *DeviceScopeActionResultRequestBuilder) Request() *DeviceScopeActionResultRequest {
	return &DeviceScopeActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceScopeActionResultRequest is request for DeviceScopeActionResult
type DeviceScopeActionResultRequest struct{ BaseRequest }

// Get performs GET request for DeviceScopeActionResult
func (r *DeviceScopeActionResultRequest) Get(ctx context.Context) (resObj *DeviceScopeActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceScopeActionResult
func (r *DeviceScopeActionResultRequest) Update(ctx context.Context, reqObj *DeviceScopeActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceScopeActionResult
func (r *DeviceScopeActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceSetupConfigurationRequestBuilder is request builder for DeviceSetupConfiguration
type DeviceSetupConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceSetupConfigurationRequest
func (b *DeviceSetupConfigurationRequestBuilder) Request() *DeviceSetupConfigurationRequest {
	return &DeviceSetupConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceSetupConfigurationRequest is request for DeviceSetupConfiguration
type DeviceSetupConfigurationRequest struct{ BaseRequest }

// Get performs GET request for DeviceSetupConfiguration
func (r *DeviceSetupConfigurationRequest) Get(ctx context.Context) (resObj *DeviceSetupConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceSetupConfiguration
func (r *DeviceSetupConfigurationRequest) Update(ctx context.Context, reqObj *DeviceSetupConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceSetupConfiguration
func (r *DeviceSetupConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceShellScriptRequestBuilder is request builder for DeviceShellScript
type DeviceShellScriptRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceShellScriptRequest
func (b *DeviceShellScriptRequestBuilder) Request() *DeviceShellScriptRequest {
	return &DeviceShellScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceShellScriptRequest is request for DeviceShellScript
type DeviceShellScriptRequest struct{ BaseRequest }

// Get performs GET request for DeviceShellScript
func (r *DeviceShellScriptRequest) Get(ctx context.Context) (resObj *DeviceShellScript, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceShellScript
func (r *DeviceShellScriptRequest) Update(ctx context.Context, reqObj *DeviceShellScript) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceShellScript
func (r *DeviceShellScriptRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type DeviceAndAppManagementAssignmentFilterCollectionEnableRequestBuilder struct{ BaseRequestBuilder }

// Enable action undocumentedrav
func (b *DeviceManagementAssignmentFiltersCollectionRequestBuilder) Enable(reqObj *DeviceAndAppManagementAssignmentFilterCollectionEnableRequestParameter) *DeviceAndAppManagementAssignmentFilterCollectionEnableRequestBuilder {
	bb := &DeviceAndAppManagementAssignmentFilterCollectionEnableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Enable"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceAndAppManagementAssignmentFilterCollectionEnableRequest struct{ BaseRequest }

func (b *DeviceAndAppManagementAssignmentFilterCollectionEnableRequestBuilder) Request() *DeviceAndAppManagementAssignmentFilterCollectionEnableRequest {
	return &DeviceAndAppManagementAssignmentFilterCollectionEnableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceAndAppManagementAssignmentFilterCollectionEnableRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequestBuilder struct{ BaseRequestBuilder }

// ValidateFilter action undocumentedras
func (b *DeviceManagementAssignmentFiltersCollectionRequestBuilder) ValidateFilter(reqObj *DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequestParameter) *DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequestBuilder {
	bb := &DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequest struct{ BaseRequest }

func (b *DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequestBuilder) Request() *DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequest {
	return &DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceAndAppManagementAssignmentFilterCollectionValidateFilterRequest) Post(ctx context.Context) (resObj *AssignmentFilterValidationResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceCompliancePolicyCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceCompliancePolicyCollectionHasPayloadLinksRequestParameter) *DeviceCompliancePolicyCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceCompliancePolicyCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyCollectionHasPayloadLinksRequestBuilder) Request() *DeviceCompliancePolicyCollectionHasPayloadLinksRequest {
	return &DeviceCompliancePolicyCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceCompliancePolicyCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceCompliancePolicyCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequestBuilder struct{ BaseRequestBuilder }

// GetNoncompliantDevicesToRetire action undocumentedras
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) GetNoncompliantDevicesToRetire(reqObj *DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequestParameter) *DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequestBuilder {
	bb := &DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetNoncompliantDevicesToRetire"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequestBuilder) Request() *DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequest {
	return &DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyCollectionGetNoncompliantDevicesToRetireRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequestBuilder struct{ BaseRequestBuilder }

// RefreshDeviceComplianceReportSummarization action undocumentedrav
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) RefreshDeviceComplianceReportSummarization(reqObj *DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequestParameter) *DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequestBuilder {
	bb := &DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RefreshDeviceComplianceReportSummarization"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequestBuilder) Request() *DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequest {
	return &DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyCollectionRefreshDeviceComplianceReportSummarizationRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceCompliancePolicyCollectionSetScheduledRetireStateRequestBuilder struct{ BaseRequestBuilder }

// SetScheduledRetireState action undocumentedrav
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) SetScheduledRetireState(reqObj *DeviceCompliancePolicyCollectionSetScheduledRetireStateRequestParameter) *DeviceCompliancePolicyCollectionSetScheduledRetireStateRequestBuilder {
	bb := &DeviceCompliancePolicyCollectionSetScheduledRetireStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetScheduledRetireState"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyCollectionSetScheduledRetireStateRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyCollectionSetScheduledRetireStateRequestBuilder) Request() *DeviceCompliancePolicyCollectionSetScheduledRetireStateRequest {
	return &DeviceCompliancePolicyCollectionSetScheduledRetireStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyCollectionSetScheduledRetireStateRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceCompliancePolicyCollectionValidateComplianceScriptRequestBuilder struct{ BaseRequestBuilder }

// ValidateComplianceScript action undocumentedras
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) ValidateComplianceScript(reqObj *DeviceCompliancePolicyCollectionValidateComplianceScriptRequestParameter) *DeviceCompliancePolicyCollectionValidateComplianceScriptRequestBuilder {
	bb := &DeviceCompliancePolicyCollectionValidateComplianceScriptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateComplianceScript"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyCollectionValidateComplianceScriptRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyCollectionValidateComplianceScriptRequestBuilder) Request() *DeviceCompliancePolicyCollectionValidateComplianceScriptRequest {
	return &DeviceCompliancePolicyCollectionValidateComplianceScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyCollectionValidateComplianceScriptRequest) Post(ctx context.Context) (resObj *DeviceComplianceScriptValidationResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceConfigurationCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceConfigurationCollectionHasPayloadLinksRequestParameter) *DeviceConfigurationCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceConfigurationCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// HasPayloadLinks action undocumentedrac
func (b *WindowsDomainJoinConfigurationNetworkAccessConfigurationsCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceConfigurationCollectionHasPayloadLinksRequestParameter) *DeviceConfigurationCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceConfigurationCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceConfigurationCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *DeviceConfigurationCollectionHasPayloadLinksRequestBuilder) Request() *DeviceConfigurationCollectionHasPayloadLinksRequest {
	return &DeviceConfigurationCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceConfigurationCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceConfigurationCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceConfigurationCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder struct{ BaseRequestBuilder }

// GetTargetedUsersAndDevices action undocumentedrac
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) GetTargetedUsersAndDevices(reqObj *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestParameter) *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder {
	bb := &DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetTargetedUsersAndDevices"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetTargetedUsersAndDevices action undocumentedrac
func (b *WindowsDomainJoinConfigurationNetworkAccessConfigurationsCollectionRequestBuilder) GetTargetedUsersAndDevices(reqObj *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestParameter) *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder {
	bb := &DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetTargetedUsersAndDevices"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest struct{ BaseRequest }

func (b *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequestBuilder) Request() *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest {
	return &DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceConfigurationTargetedUserAndDevice, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationTargetedUserAndDevice
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceConfigurationTargetedUserAndDevice
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest) PostN(ctx context.Context, n int) ([]DeviceConfigurationTargetedUserAndDevice, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceConfigurationCollectionGetTargetedUsersAndDevicesRequest) Post(ctx context.Context) ([]DeviceConfigurationTargetedUserAndDevice, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestParameter) *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// HasPayloadLinks action undocumentedrac
func (b *UserDeviceEnrollmentConfigurationsCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestParameter) *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequestBuilder) Request() *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest {
	return &DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceEnrollmentConfigurationCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// CreateEnrollmentNotificationConfiguration action undocumentedrav
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) CreateEnrollmentNotificationConfiguration(reqObj *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestParameter) *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder {
	bb := &DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateEnrollmentNotificationConfiguration"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// CreateEnrollmentNotificationConfiguration action undocumentedrav
func (b *UserDeviceEnrollmentConfigurationsCollectionRequestBuilder) CreateEnrollmentNotificationConfiguration(reqObj *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestParameter) *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder {
	bb := &DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateEnrollmentNotificationConfiguration"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequest struct{ BaseRequest }

func (b *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequestBuilder) Request() *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequest {
	return &DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceEnrollmentConfigurationCollectionCreateEnrollmentNotificationConfigurationRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceHealthScriptCollectionEnableGlobalScriptsRequestBuilder struct{ BaseRequestBuilder }

// EnableGlobalScripts action undocumentedrav
func (b *DeviceManagementDeviceHealthScriptsCollectionRequestBuilder) EnableGlobalScripts(reqObj *DeviceHealthScriptCollectionEnableGlobalScriptsRequestParameter) *DeviceHealthScriptCollectionEnableGlobalScriptsRequestBuilder {
	bb := &DeviceHealthScriptCollectionEnableGlobalScriptsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnableGlobalScripts"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceHealthScriptCollectionEnableGlobalScriptsRequest struct{ BaseRequest }

func (b *DeviceHealthScriptCollectionEnableGlobalScriptsRequestBuilder) Request() *DeviceHealthScriptCollectionEnableGlobalScriptsRequest {
	return &DeviceHealthScriptCollectionEnableGlobalScriptsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceHealthScriptCollectionEnableGlobalScriptsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequestBuilder struct{ BaseRequestBuilder }

// QueryByPlatformType action undocumentedrac
func (b *DeviceManagementResourceAccessProfilesCollectionRequestBuilder) QueryByPlatformType(reqObj *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequestParameter) *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequestBuilder {
	bb := &DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/QueryByPlatformType"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest struct{ BaseRequest }

func (b *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequestBuilder) Request() *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest {
	return &DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementResourceAccessProfileBase, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementResourceAccessProfileBase
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementResourceAccessProfileBase
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest) PostN(ctx context.Context, n int) ([]DeviceManagementResourceAccessProfileBase, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementResourceAccessProfileBaseCollectionQueryByPlatformTypeRequest) Post(ctx context.Context) ([]DeviceManagementResourceAccessProfileBase, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementScriptCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceManagementDeviceManagementScriptsCollectionRequestBuilder) HasPayloadLinks(reqObj *DeviceManagementScriptCollectionHasPayloadLinksRequestParameter) *DeviceManagementScriptCollectionHasPayloadLinksRequestBuilder {
	bb := &DeviceManagementScriptCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementScriptCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *DeviceManagementScriptCollectionHasPayloadLinksRequestBuilder) Request() *DeviceManagementScriptCollectionHasPayloadLinksRequest {
	return &DeviceManagementScriptCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementScriptCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementScriptCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementScriptCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder struct{ BaseRequestBuilder }

// ImportOffice365DeviceConfigurationPolicies action undocumentedrac
func (b *DeviceManagementTemplatesCollectionRequestBuilder) ImportOffice365DeviceConfigurationPolicies(reqObj *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestParameter) *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder {
	bb := &DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ImportOffice365DeviceConfigurationPolicies"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ImportOffice365DeviceConfigurationPolicies action undocumentedrac
func (b *DeviceManagementTemplateMigratableToCollectionRequestBuilder) ImportOffice365DeviceConfigurationPolicies(reqObj *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestParameter) *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder {
	bb := &DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ImportOffice365DeviceConfigurationPolicies"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest struct{ BaseRequest }

func (b *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequestBuilder) Request() *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest {
	return &DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementIntent, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementIntent
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementIntent
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest) PostN(ctx context.Context, n int) ([]DeviceManagementIntent, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementTemplateCollectionImportOffice365DeviceConfigurationPoliciesRequest) Post(ctx context.Context) ([]DeviceManagementIntent, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder struct{ BaseRequestBuilder }

// SyncMicrosoftStoreForBusinessApps action undocumentedrav
func (b *DeviceAppManagementRequestBuilder) SyncMicrosoftStoreForBusinessApps(reqObj *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestParameter) *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder {
	bb := &DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SyncMicrosoftStoreForBusinessApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest struct{ BaseRequest }

func (b *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder) Request() *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest {
	return &DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceAppManagementTaskUpdateStatusRequestBuilder struct{ BaseRequestBuilder }

// UpdateStatus action undocumentedrav
func (b *DeviceAppManagementTaskRequestBuilder) UpdateStatus(reqObj *DeviceAppManagementTaskUpdateStatusRequestParameter) *DeviceAppManagementTaskUpdateStatusRequestBuilder {
	bb := &DeviceAppManagementTaskUpdateStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// UpdateStatus action undocumentedrav
func (b *DeviceAppManagementDeviceAppManagementTasksCollectionRequestBuilder) UpdateStatus(reqObj *DeviceAppManagementTaskUpdateStatusRequestParameter) *DeviceAppManagementTaskUpdateStatusRequestBuilder {
	bb := &DeviceAppManagementTaskUpdateStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceAppManagementTaskUpdateStatusRequest struct{ BaseRequest }

func (b *DeviceAppManagementTaskUpdateStatusRequestBuilder) Request() *DeviceAppManagementTaskUpdateStatusRequest {
	return &DeviceAppManagementTaskUpdateStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceAppManagementTaskUpdateStatusRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceCompliancePolicyAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *DeviceCompliancePolicyRequestBuilder) Assign(reqObj *DeviceCompliancePolicyAssignRequestParameter) *DeviceCompliancePolicyAssignRequestBuilder {
	bb := &DeviceCompliancePolicyAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyAssignRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyAssignRequestBuilder) Request() *DeviceCompliancePolicyAssignRequest {
	return &DeviceCompliancePolicyAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceCompliancePolicyAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCompliancePolicyAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceCompliancePolicyAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceCompliancePolicyAssignRequest) PostN(ctx context.Context, n int) ([]DeviceCompliancePolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceCompliancePolicyAssignRequest) Post(ctx context.Context) ([]DeviceCompliancePolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder struct{ BaseRequestBuilder }

// ScheduleActionsForRules action undocumentedrav
func (b *DeviceCompliancePolicyRequestBuilder) ScheduleActionsForRules(reqObj *DeviceCompliancePolicyScheduleActionsForRulesRequestParameter) *DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder {
	bb := &DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ScheduleActionsForRules"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCompliancePolicyScheduleActionsForRulesRequest struct{ BaseRequest }

func (b *DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder) Request() *DeviceCompliancePolicyScheduleActionsForRulesRequest {
	return &DeviceCompliancePolicyScheduleActionsForRulesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCompliancePolicyScheduleActionsForRulesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceComplianceScriptAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceComplianceScriptRequestBuilder) Assign(reqObj *DeviceComplianceScriptAssignRequestParameter) *DeviceComplianceScriptAssignRequestBuilder {
	bb := &DeviceComplianceScriptAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceComplianceScriptAssignRequest struct{ BaseRequest }

func (b *DeviceComplianceScriptAssignRequestBuilder) Request() *DeviceComplianceScriptAssignRequest {
	return &DeviceComplianceScriptAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceComplianceScriptAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *DeviceConfigurationRequestBuilder) Assign(reqObj *DeviceConfigurationAssignRequestParameter) *DeviceConfigurationAssignRequestBuilder {
	bb := &DeviceConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceConfigurationAssignRequest struct{ BaseRequest }

func (b *DeviceConfigurationAssignRequestBuilder) Request() *DeviceConfigurationAssignRequest {
	return &DeviceConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceConfigurationAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceConfigurationAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceConfigurationAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceConfigurationAssignRequest) PostN(ctx context.Context, n int) ([]DeviceConfigurationAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceConfigurationAssignRequest) Post(ctx context.Context) ([]DeviceConfigurationAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceConfigurationAssignedAccessMultiModeProfilesRequestBuilder struct{ BaseRequestBuilder }

// AssignedAccessMultiModeProfiles action undocumentedrav
func (b *DeviceConfigurationRequestBuilder) AssignedAccessMultiModeProfiles(reqObj *DeviceConfigurationAssignedAccessMultiModeProfilesRequestParameter) *DeviceConfigurationAssignedAccessMultiModeProfilesRequestBuilder {
	bb := &DeviceConfigurationAssignedAccessMultiModeProfilesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AssignedAccessMultiModeProfiles"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceConfigurationAssignedAccessMultiModeProfilesRequest struct{ BaseRequest }

func (b *DeviceConfigurationAssignedAccessMultiModeProfilesRequestBuilder) Request() *DeviceConfigurationAssignedAccessMultiModeProfilesRequest {
	return &DeviceConfigurationAssignedAccessMultiModeProfilesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceConfigurationAssignedAccessMultiModeProfilesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceConfigurationWindowsPrivacyAccessControlsRequestBuilder struct{ BaseRequestBuilder }

// WindowsPrivacyAccessControls action undocumentedrav
func (b *DeviceConfigurationRequestBuilder) WindowsPrivacyAccessControls(reqObj *DeviceConfigurationWindowsPrivacyAccessControlsRequestParameter) *DeviceConfigurationWindowsPrivacyAccessControlsRequestBuilder {
	bb := &DeviceConfigurationWindowsPrivacyAccessControlsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WindowsPrivacyAccessControls"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceConfigurationWindowsPrivacyAccessControlsRequest struct{ BaseRequest }

func (b *DeviceConfigurationWindowsPrivacyAccessControlsRequestBuilder) Request() *DeviceConfigurationWindowsPrivacyAccessControlsRequest {
	return &DeviceConfigurationWindowsPrivacyAccessControlsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceConfigurationWindowsPrivacyAccessControlsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceCustomAttributeShellScriptAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceCustomAttributeShellScriptRequestBuilder) Assign(reqObj *DeviceCustomAttributeShellScriptAssignRequestParameter) *DeviceCustomAttributeShellScriptAssignRequestBuilder {
	bb := &DeviceCustomAttributeShellScriptAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceCustomAttributeShellScriptAssignRequest struct{ BaseRequest }

func (b *DeviceCustomAttributeShellScriptAssignRequestBuilder) Request() *DeviceCustomAttributeShellScriptAssignRequest {
	return &DeviceCustomAttributeShellScriptAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceCustomAttributeShellScriptAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceEnrollmentConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceEnrollmentConfigurationRequestBuilder) Assign(reqObj *DeviceEnrollmentConfigurationAssignRequestParameter) *DeviceEnrollmentConfigurationAssignRequestBuilder {
	bb := &DeviceEnrollmentConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// Assign action undocumentedrav
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) Assign(reqObj *DeviceEnrollmentConfigurationAssignRequestParameter) *DeviceEnrollmentConfigurationAssignRequestBuilder {
	bb := &DeviceEnrollmentConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceEnrollmentConfigurationAssignRequest struct{ BaseRequest }

func (b *DeviceEnrollmentConfigurationAssignRequestBuilder) Request() *DeviceEnrollmentConfigurationAssignRequest {
	return &DeviceEnrollmentConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceEnrollmentConfigurationAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceEnrollmentConfigurationSetPriorityRequestBuilder struct{ BaseRequestBuilder }

// SetPriority action undocumentedrav
func (b *DeviceEnrollmentConfigurationRequestBuilder) SetPriority(reqObj *DeviceEnrollmentConfigurationSetPriorityRequestParameter) *DeviceEnrollmentConfigurationSetPriorityRequestBuilder {
	bb := &DeviceEnrollmentConfigurationSetPriorityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetPriority"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SetPriority action undocumentedrav
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) SetPriority(reqObj *DeviceEnrollmentConfigurationSetPriorityRequestParameter) *DeviceEnrollmentConfigurationSetPriorityRequestBuilder {
	bb := &DeviceEnrollmentConfigurationSetPriorityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetPriority"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceEnrollmentConfigurationSetPriorityRequest struct{ BaseRequest }

func (b *DeviceEnrollmentConfigurationSetPriorityRequestBuilder) Request() *DeviceEnrollmentConfigurationSetPriorityRequest {
	return &DeviceEnrollmentConfigurationSetPriorityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceEnrollmentConfigurationSetPriorityRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceHealthScriptAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceHealthScriptRequestBuilder) Assign(reqObj *DeviceHealthScriptAssignRequestParameter) *DeviceHealthScriptAssignRequestBuilder {
	bb := &DeviceHealthScriptAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceHealthScriptAssignRequest struct{ BaseRequest }

func (b *DeviceHealthScriptAssignRequestBuilder) Request() *DeviceHealthScriptAssignRequest {
	return &DeviceHealthScriptAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceHealthScriptAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder struct{ BaseRequestBuilder }

// GetGlobalScriptHighestAvailableVersion action undocumentedras
func (b *DeviceHealthScriptRequestBuilder) GetGlobalScriptHighestAvailableVersion(reqObj *DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestParameter) *DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder {
	bb := &DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetGlobalScriptHighestAvailableVersion"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequest struct{ BaseRequest }

func (b *DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder) Request() *DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequest {
	return &DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceHealthScriptUpdateGlobalScriptRequestBuilder struct{ BaseRequestBuilder }

// UpdateGlobalScript action undocumentedras
func (b *DeviceHealthScriptRequestBuilder) UpdateGlobalScript(reqObj *DeviceHealthScriptUpdateGlobalScriptRequestParameter) *DeviceHealthScriptUpdateGlobalScriptRequestBuilder {
	bb := &DeviceHealthScriptUpdateGlobalScriptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateGlobalScript"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceHealthScriptUpdateGlobalScriptRequest struct{ BaseRequest }

func (b *DeviceHealthScriptUpdateGlobalScriptRequestBuilder) Request() *DeviceHealthScriptUpdateGlobalScriptRequest {
	return &DeviceHealthScriptUpdateGlobalScriptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceHealthScriptUpdateGlobalScriptRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceLogCollectionResponseCreateDownloadURLRequestBuilder struct{ BaseRequestBuilder }

// CreateDownloadURL action undocumentedras
func (b *DeviceLogCollectionResponseRequestBuilder) CreateDownloadURL(reqObj *DeviceLogCollectionResponseCreateDownloadURLRequestParameter) *DeviceLogCollectionResponseCreateDownloadURLRequestBuilder {
	bb := &DeviceLogCollectionResponseCreateDownloadURLRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateDownloadUrl"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceLogCollectionResponseCreateDownloadURLRequest struct{ BaseRequest }

func (b *DeviceLogCollectionResponseCreateDownloadURLRequestBuilder) Request() *DeviceLogCollectionResponseCreateDownloadURLRequest {
	return &DeviceLogCollectionResponseCreateDownloadURLRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceLogCollectionResponseCreateDownloadURLRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder struct{ BaseRequestBuilder }

// SendCustomNotificationToCompanyPortal action undocumentedrav
func (b *DeviceManagementRequestBuilder) SendCustomNotificationToCompanyPortal(reqObj *DeviceManagementSendCustomNotificationToCompanyPortalRequestParameter) *DeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder {
	bb := &DeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SendCustomNotificationToCompanyPortal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementSendCustomNotificationToCompanyPortalRequest struct{ BaseRequest }

func (b *DeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder) Request() *DeviceManagementSendCustomNotificationToCompanyPortalRequest {
	return &DeviceManagementSendCustomNotificationToCompanyPortalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementSendCustomNotificationToCompanyPortalRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementEvaluateAssignmentFilterRequestBuilder struct{ BaseRequestBuilder }

// EvaluateAssignmentFilter action undocumentedras
func (b *DeviceManagementRequestBuilder) EvaluateAssignmentFilter(reqObj *DeviceManagementEvaluateAssignmentFilterRequestParameter) *DeviceManagementEvaluateAssignmentFilterRequestBuilder {
	bb := &DeviceManagementEvaluateAssignmentFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateAssignmentFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementEvaluateAssignmentFilterRequest struct{ BaseRequest }

func (b *DeviceManagementEvaluateAssignmentFilterRequestBuilder) Request() *DeviceManagementEvaluateAssignmentFilterRequest {
	return &DeviceManagementEvaluateAssignmentFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementEvaluateAssignmentFilterRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder struct{ BaseRequestBuilder }

// GetAssignmentFiltersStatusDetails action undocumentedras
func (b *DeviceManagementRequestBuilder) GetAssignmentFiltersStatusDetails(reqObj *DeviceManagementGetAssignmentFiltersStatusDetailsRequestParameter) *DeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder {
	bb := &DeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAssignmentFiltersStatusDetails"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementGetAssignmentFiltersStatusDetailsRequest struct{ BaseRequest }

func (b *DeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder) Request() *DeviceManagementGetAssignmentFiltersStatusDetailsRequest {
	return &DeviceManagementGetAssignmentFiltersStatusDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementGetAssignmentFiltersStatusDetailsRequest) Post(ctx context.Context) (resObj *AssignmentFilterStatusDetails, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder struct{ BaseRequestBuilder }

// EnableAndroidDeviceAdministratorEnrollment action undocumentedrav
func (b *DeviceManagementRequestBuilder) EnableAndroidDeviceAdministratorEnrollment(reqObj *DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestParameter) *DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder {
	bb := &DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnableAndroidDeviceAdministratorEnrollment"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequest struct{ BaseRequest }

func (b *DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder) Request() *DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequest {
	return &DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementEnableLegacyPcManagementRequestBuilder struct{ BaseRequestBuilder }

// EnableLegacyPcManagement action undocumentedrav
func (b *DeviceManagementRequestBuilder) EnableLegacyPcManagement(reqObj *DeviceManagementEnableLegacyPcManagementRequestParameter) *DeviceManagementEnableLegacyPcManagementRequestBuilder {
	bb := &DeviceManagementEnableLegacyPcManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnableLegacyPcManagement"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementEnableLegacyPcManagementRequest struct{ BaseRequest }

func (b *DeviceManagementEnableLegacyPcManagementRequestBuilder) Request() *DeviceManagementEnableLegacyPcManagementRequest {
	return &DeviceManagementEnableLegacyPcManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementEnableLegacyPcManagementRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementEnableUnlicensedAdminstratorsRequestBuilder struct{ BaseRequestBuilder }

// EnableUnlicensedAdminstrators action undocumentedrav
func (b *DeviceManagementRequestBuilder) EnableUnlicensedAdminstrators(reqObj *DeviceManagementEnableUnlicensedAdminstratorsRequestParameter) *DeviceManagementEnableUnlicensedAdminstratorsRequestBuilder {
	bb := &DeviceManagementEnableUnlicensedAdminstratorsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnableUnlicensedAdminstrators"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementEnableUnlicensedAdminstratorsRequest struct{ BaseRequest }

func (b *DeviceManagementEnableUnlicensedAdminstratorsRequestBuilder) Request() *DeviceManagementEnableUnlicensedAdminstratorsRequest {
	return &DeviceManagementEnableUnlicensedAdminstratorsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementEnableUnlicensedAdminstratorsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementCompliancePolicyAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *DeviceManagementCompliancePolicyRequestBuilder) Assign(reqObj *DeviceManagementCompliancePolicyAssignRequestParameter) *DeviceManagementCompliancePolicyAssignRequestBuilder {
	bb := &DeviceManagementCompliancePolicyAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementCompliancePolicyAssignRequest struct{ BaseRequest }

func (b *DeviceManagementCompliancePolicyAssignRequestBuilder) Request() *DeviceManagementCompliancePolicyAssignRequest {
	return &DeviceManagementCompliancePolicyAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementCompliancePolicyAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementConfigurationPolicyAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementConfigurationPolicyAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementCompliancePolicyAssignRequest) PostN(ctx context.Context, n int) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementCompliancePolicyAssignRequest) Post(ctx context.Context) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementCompliancePolicySetScheduledActionsRequestBuilder struct{ BaseRequestBuilder }

// SetScheduledActions action undocumentedrac
func (b *DeviceManagementCompliancePolicyRequestBuilder) SetScheduledActions(reqObj *DeviceManagementCompliancePolicySetScheduledActionsRequestParameter) *DeviceManagementCompliancePolicySetScheduledActionsRequestBuilder {
	bb := &DeviceManagementCompliancePolicySetScheduledActionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetScheduledActions"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementCompliancePolicySetScheduledActionsRequest struct{ BaseRequest }

func (b *DeviceManagementCompliancePolicySetScheduledActionsRequestBuilder) Request() *DeviceManagementCompliancePolicySetScheduledActionsRequest {
	return &DeviceManagementCompliancePolicySetScheduledActionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementCompliancePolicySetScheduledActionsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementComplianceScheduledActionForRule, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementComplianceScheduledActionForRule
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementComplianceScheduledActionForRule
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementCompliancePolicySetScheduledActionsRequest) PostN(ctx context.Context, n int) ([]DeviceManagementComplianceScheduledActionForRule, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementCompliancePolicySetScheduledActionsRequest) Post(ctx context.Context) ([]DeviceManagementComplianceScheduledActionForRule, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementConfigurationPolicyAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *DeviceManagementConfigurationPolicyRequestBuilder) Assign(reqObj *DeviceManagementConfigurationPolicyAssignRequestParameter) *DeviceManagementConfigurationPolicyAssignRequestBuilder {
	bb := &DeviceManagementConfigurationPolicyAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementConfigurationPolicyAssignRequest struct{ BaseRequest }

func (b *DeviceManagementConfigurationPolicyAssignRequestBuilder) Request() *DeviceManagementConfigurationPolicyAssignRequest {
	return &DeviceManagementConfigurationPolicyAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementConfigurationPolicyAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementConfigurationPolicyAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementConfigurationPolicyAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementConfigurationPolicyAssignRequest) PostN(ctx context.Context, n int) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementConfigurationPolicyAssignRequest) Post(ctx context.Context) ([]DeviceManagementConfigurationPolicyAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementConfigurationPolicyCreateCopyRequestBuilder struct{ BaseRequestBuilder }

// CreateCopy action undocumentedras
func (b *DeviceManagementConfigurationPolicyRequestBuilder) CreateCopy(reqObj *DeviceManagementConfigurationPolicyCreateCopyRequestParameter) *DeviceManagementConfigurationPolicyCreateCopyRequestBuilder {
	bb := &DeviceManagementConfigurationPolicyCreateCopyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateCopy"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementConfigurationPolicyCreateCopyRequest struct{ BaseRequest }

func (b *DeviceManagementConfigurationPolicyCreateCopyRequestBuilder) Request() *DeviceManagementConfigurationPolicyCreateCopyRequest {
	return &DeviceManagementConfigurationPolicyCreateCopyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementConfigurationPolicyCreateCopyRequest) Post(ctx context.Context) (resObj *DeviceManagementConfigurationPolicy, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementConfigurationPolicyReorderRequestBuilder struct{ BaseRequestBuilder }

// Reorder action undocumentedrav
func (b *DeviceManagementConfigurationPolicyRequestBuilder) Reorder(reqObj *DeviceManagementConfigurationPolicyReorderRequestParameter) *DeviceManagementConfigurationPolicyReorderRequestBuilder {
	bb := &DeviceManagementConfigurationPolicyReorderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Reorder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementConfigurationPolicyReorderRequest struct{ BaseRequest }

func (b *DeviceManagementConfigurationPolicyReorderRequestBuilder) Request() *DeviceManagementConfigurationPolicyReorderRequest {
	return &DeviceManagementConfigurationPolicyReorderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementConfigurationPolicyReorderRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementExchangeConnectorSyncRequestBuilder struct{ BaseRequestBuilder }

// Sync action undocumentedrav
func (b *DeviceManagementExchangeConnectorRequestBuilder) Sync(reqObj *DeviceManagementExchangeConnectorSyncRequestParameter) *DeviceManagementExchangeConnectorSyncRequestBuilder {
	bb := &DeviceManagementExchangeConnectorSyncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Sync"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementExchangeConnectorSyncRequest struct{ BaseRequest }

func (b *DeviceManagementExchangeConnectorSyncRequestBuilder) Request() *DeviceManagementExchangeConnectorSyncRequest {
	return &DeviceManagementExchangeConnectorSyncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementExchangeConnectorSyncRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementIntentAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceManagementIntentRequestBuilder) Assign(reqObj *DeviceManagementIntentAssignRequestParameter) *DeviceManagementIntentAssignRequestBuilder {
	bb := &DeviceManagementIntentAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementIntentAssignRequest struct{ BaseRequest }

func (b *DeviceManagementIntentAssignRequestBuilder) Request() *DeviceManagementIntentAssignRequest {
	return &DeviceManagementIntentAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementIntentAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementIntentCreateCopyRequestBuilder struct{ BaseRequestBuilder }

// CreateCopy action undocumentedras
func (b *DeviceManagementIntentRequestBuilder) CreateCopy(reqObj *DeviceManagementIntentCreateCopyRequestParameter) *DeviceManagementIntentCreateCopyRequestBuilder {
	bb := &DeviceManagementIntentCreateCopyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateCopy"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementIntentCreateCopyRequest struct{ BaseRequest }

func (b *DeviceManagementIntentCreateCopyRequestBuilder) Request() *DeviceManagementIntentCreateCopyRequest {
	return &DeviceManagementIntentCreateCopyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementIntentCreateCopyRequest) Post(ctx context.Context) (resObj *DeviceManagementIntent, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementIntentMigrateToTemplateRequestBuilder struct{ BaseRequestBuilder }

// MigrateToTemplate action undocumentedrav
func (b *DeviceManagementIntentRequestBuilder) MigrateToTemplate(reqObj *DeviceManagementIntentMigrateToTemplateRequestParameter) *DeviceManagementIntentMigrateToTemplateRequestBuilder {
	bb := &DeviceManagementIntentMigrateToTemplateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/MigrateToTemplate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementIntentMigrateToTemplateRequest struct{ BaseRequest }

func (b *DeviceManagementIntentMigrateToTemplateRequestBuilder) Request() *DeviceManagementIntentMigrateToTemplateRequest {
	return &DeviceManagementIntentMigrateToTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementIntentMigrateToTemplateRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementIntentUpdateSettingsRequestBuilder struct{ BaseRequestBuilder }

// UpdateSettings action undocumentedrav
func (b *DeviceManagementIntentRequestBuilder) UpdateSettings(reqObj *DeviceManagementIntentUpdateSettingsRequestParameter) *DeviceManagementIntentUpdateSettingsRequestBuilder {
	bb := &DeviceManagementIntentUpdateSettingsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateSettings"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementIntentUpdateSettingsRequest struct{ BaseRequest }

func (b *DeviceManagementIntentUpdateSettingsRequestBuilder) Request() *DeviceManagementIntentUpdateSettingsRequest {
	return &DeviceManagementIntentUpdateSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementIntentUpdateSettingsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementPartnerTerminateRequestBuilder struct{ BaseRequestBuilder }

// Terminate action undocumentedrav
func (b *DeviceManagementPartnerRequestBuilder) Terminate(reqObj *DeviceManagementPartnerTerminateRequestParameter) *DeviceManagementPartnerTerminateRequestBuilder {
	bb := &DeviceManagementPartnerTerminateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Terminate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementPartnerTerminateRequest struct{ BaseRequest }

func (b *DeviceManagementPartnerTerminateRequestBuilder) Request() *DeviceManagementPartnerTerminateRequest {
	return &DeviceManagementPartnerTerminateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementPartnerTerminateRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetAppsInstallSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetAppsInstallSummaryReport(reqObj *DeviceManagementReportsGetAppsInstallSummaryReportRequestParameter) *DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAppsInstallSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetAppsInstallSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetAppsInstallSummaryReportRequest {
	return &DeviceManagementReportsGetAppsInstallSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetAppsInstallSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder struct{ BaseRequestBuilder }

// GetAppStatusOverviewReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetAppStatusOverviewReport(reqObj *DeviceManagementReportsGetAppStatusOverviewReportRequestParameter) *DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder {
	bb := &DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAppStatusOverviewReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetAppStatusOverviewReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder) Request() *DeviceManagementReportsGetAppStatusOverviewReportRequest {
	return &DeviceManagementReportsGetAppStatusOverviewReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetAppStatusOverviewReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceInstallStatusReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceInstallStatusReport(reqObj *DeviceManagementReportsGetDeviceInstallStatusReportRequestParameter) *DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceInstallStatusReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceInstallStatusReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceInstallStatusReportRequest {
	return &DeviceManagementReportsGetDeviceInstallStatusReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceInstallStatusReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetFailedMobileAppsReportRequestBuilder struct{ BaseRequestBuilder }

// GetFailedMobileAppsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetFailedMobileAppsReport(reqObj *DeviceManagementReportsGetFailedMobileAppsReportRequestParameter) *DeviceManagementReportsGetFailedMobileAppsReportRequestBuilder {
	bb := &DeviceManagementReportsGetFailedMobileAppsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetFailedMobileAppsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetFailedMobileAppsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetFailedMobileAppsReportRequestBuilder) Request() *DeviceManagementReportsGetFailedMobileAppsReportRequest {
	return &DeviceManagementReportsGetFailedMobileAppsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetFailedMobileAppsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetFailedMobileAppsSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetFailedMobileAppsSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetFailedMobileAppsSummaryReport(reqObj *DeviceManagementReportsGetFailedMobileAppsSummaryReportRequestParameter) *DeviceManagementReportsGetFailedMobileAppsSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetFailedMobileAppsSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetFailedMobileAppsSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetFailedMobileAppsSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetFailedMobileAppsSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetFailedMobileAppsSummaryReportRequest {
	return &DeviceManagementReportsGetFailedMobileAppsSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetFailedMobileAppsSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetRelatedAppsStatusReportRequestBuilder struct{ BaseRequestBuilder }

// GetRelatedAppsStatusReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetRelatedAppsStatusReport(reqObj *DeviceManagementReportsGetRelatedAppsStatusReportRequestParameter) *DeviceManagementReportsGetRelatedAppsStatusReportRequestBuilder {
	bb := &DeviceManagementReportsGetRelatedAppsStatusReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetRelatedAppsStatusReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetRelatedAppsStatusReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetRelatedAppsStatusReportRequestBuilder) Request() *DeviceManagementReportsGetRelatedAppsStatusReportRequest {
	return &DeviceManagementReportsGetRelatedAppsStatusReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetRelatedAppsStatusReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetUserInstallStatusReportRequestBuilder struct{ BaseRequestBuilder }

// GetUserInstallStatusReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetUserInstallStatusReport(reqObj *DeviceManagementReportsGetUserInstallStatusReportRequestParameter) *DeviceManagementReportsGetUserInstallStatusReportRequestBuilder {
	bb := &DeviceManagementReportsGetUserInstallStatusReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetUserInstallStatusReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetUserInstallStatusReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetUserInstallStatusReportRequestBuilder) Request() *DeviceManagementReportsGetUserInstallStatusReportRequest {
	return &DeviceManagementReportsGetUserInstallStatusReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetUserInstallStatusReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequestBuilder struct{ BaseRequestBuilder }

// GetCompliancePoliciesReportForDevice action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCompliancePoliciesReportForDevice(reqObj *DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequestParameter) *DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequestBuilder {
	bb := &DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCompliancePoliciesReportForDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequestBuilder) Request() *DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequest {
	return &DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCompliancePoliciesReportForDeviceRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCompliancePolicyDevicesReportRequestBuilder struct{ BaseRequestBuilder }

// GetCompliancePolicyDevicesReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCompliancePolicyDevicesReport(reqObj *DeviceManagementReportsGetCompliancePolicyDevicesReportRequestParameter) *DeviceManagementReportsGetCompliancePolicyDevicesReportRequestBuilder {
	bb := &DeviceManagementReportsGetCompliancePolicyDevicesReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCompliancePolicyDevicesReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCompliancePolicyDevicesReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCompliancePolicyDevicesReportRequestBuilder) Request() *DeviceManagementReportsGetCompliancePolicyDevicesReportRequest {
	return &DeviceManagementReportsGetCompliancePolicyDevicesReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCompliancePolicyDevicesReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetCompliancePolicyDeviceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCompliancePolicyDeviceSummaryReport(reqObj *DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequestParameter) *DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCompliancePolicyDeviceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequest {
	return &DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCompliancePolicyDeviceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetComplianceSettingDetailsReportRequestBuilder struct{ BaseRequestBuilder }

// GetComplianceSettingDetailsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetComplianceSettingDetailsReport(reqObj *DeviceManagementReportsGetComplianceSettingDetailsReportRequestParameter) *DeviceManagementReportsGetComplianceSettingDetailsReportRequestBuilder {
	bb := &DeviceManagementReportsGetComplianceSettingDetailsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetComplianceSettingDetailsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetComplianceSettingDetailsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetComplianceSettingDetailsReportRequestBuilder) Request() *DeviceManagementReportsGetComplianceSettingDetailsReportRequest {
	return &DeviceManagementReportsGetComplianceSettingDetailsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetComplianceSettingDetailsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetComplianceSettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetComplianceSettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetComplianceSettingsReport(reqObj *DeviceManagementReportsGetComplianceSettingsReportRequestParameter) *DeviceManagementReportsGetComplianceSettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetComplianceSettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetComplianceSettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetComplianceSettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetComplianceSettingsReportRequestBuilder) Request() *DeviceManagementReportsGetComplianceSettingsReportRequest {
	return &DeviceManagementReportsGetComplianceSettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetComplianceSettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPoliciesReportForDevice action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPoliciesReportForDevice(reqObj *DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestParameter) *DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPoliciesReportForDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequest {
	return &DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPolicyDevicesReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPolicyDevicesReport(reqObj *DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestParameter) *DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPolicyDevicesReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPolicyDevicesReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPolicyDevicesReportRequest {
	return &DeviceManagementReportsGetConfigurationPolicyDevicesReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPolicyDevicesReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPolicyDeviceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPolicyDeviceSummaryReport(reqObj *DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestParameter) *DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPolicyDeviceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequest {
	return &DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPolicySettingsDeviceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPolicySettingsDeviceSummaryReport(reqObj *DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequestParameter) *DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPolicySettingsDeviceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequest {
	return &DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPolicySettingsDeviceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationSettingDetailsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationSettingDetailsReport(reqObj *DeviceManagementReportsGetConfigurationSettingDetailsReportRequestParameter) *DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationSettingDetailsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationSettingDetailsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationSettingDetailsReportRequest {
	return &DeviceManagementReportsGetConfigurationSettingDetailsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationSettingDetailsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationSettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationSettingsReport(reqObj *DeviceManagementReportsGetConfigurationSettingsReportRequestParameter) *DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationSettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationSettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationSettingsReportRequest {
	return &DeviceManagementReportsGetConfigurationSettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationSettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceConfigurationPolicySettingsSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceConfigurationPolicySettingsSummaryReport(reqObj *DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequestParameter) *DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceConfigurationPolicySettingsSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequest {
	return &DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceConfigurationPolicySettingsSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceConfigurationPolicyStatusSummary action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceConfigurationPolicyStatusSummary(reqObj *DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequestParameter) *DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceConfigurationPolicyStatusSummary"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequestBuilder) Request() *DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequest {
	return &DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceConfigurationPolicyStatusSummaryRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetEncryptionReportForDevicesRequestBuilder struct{ BaseRequestBuilder }

// GetEncryptionReportForDevices action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetEncryptionReportForDevices(reqObj *DeviceManagementReportsGetEncryptionReportForDevicesRequestParameter) *DeviceManagementReportsGetEncryptionReportForDevicesRequestBuilder {
	bb := &DeviceManagementReportsGetEncryptionReportForDevicesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetEncryptionReportForDevices"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetEncryptionReportForDevicesRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetEncryptionReportForDevicesRequestBuilder) Request() *DeviceManagementReportsGetEncryptionReportForDevicesRequest {
	return &DeviceManagementReportsGetEncryptionReportForDevicesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetEncryptionReportForDevicesRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetQuietTimePolicyUsersReportRequestBuilder struct{ BaseRequestBuilder }

// GetQuietTimePolicyUsersReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetQuietTimePolicyUsersReport(reqObj *DeviceManagementReportsGetQuietTimePolicyUsersReportRequestParameter) *DeviceManagementReportsGetQuietTimePolicyUsersReportRequestBuilder {
	bb := &DeviceManagementReportsGetQuietTimePolicyUsersReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetQuietTimePolicyUsersReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetQuietTimePolicyUsersReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetQuietTimePolicyUsersReportRequestBuilder) Request() *DeviceManagementReportsGetQuietTimePolicyUsersReportRequest {
	return &DeviceManagementReportsGetQuietTimePolicyUsersReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetQuietTimePolicyUsersReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetQuietTimePolicyUserSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetQuietTimePolicyUserSummaryReport(reqObj *DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequestParameter) *DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetQuietTimePolicyUserSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequest {
	return &DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetQuietTimePolicyUserSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequestBuilder struct{ BaseRequestBuilder }

// GetEnrollmentConfigurationPoliciesByDevice action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetEnrollmentConfigurationPoliciesByDevice(reqObj *DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequestParameter) *DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequestBuilder {
	bb := &DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetEnrollmentConfigurationPoliciesByDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequestBuilder) Request() *DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequest {
	return &DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetEnrollmentConfigurationPoliciesByDeviceRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetActiveMalwareReportRequestBuilder struct{ BaseRequestBuilder }

// GetActiveMalwareReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetActiveMalwareReport(reqObj *DeviceManagementReportsGetActiveMalwareReportRequestParameter) *DeviceManagementReportsGetActiveMalwareReportRequestBuilder {
	bb := &DeviceManagementReportsGetActiveMalwareReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetActiveMalwareReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetActiveMalwareReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetActiveMalwareReportRequestBuilder) Request() *DeviceManagementReportsGetActiveMalwareReportRequest {
	return &DeviceManagementReportsGetActiveMalwareReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetActiveMalwareReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetActiveMalwareSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetActiveMalwareSummaryReport(reqObj *DeviceManagementReportsGetActiveMalwareSummaryReportRequestParameter) *DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetActiveMalwareSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetActiveMalwareSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetActiveMalwareSummaryReportRequest {
	return &DeviceManagementReportsGetActiveMalwareSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetActiveMalwareSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetMalwareSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetMalwareSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetMalwareSummaryReport(reqObj *DeviceManagementReportsGetMalwareSummaryReportRequestParameter) *DeviceManagementReportsGetMalwareSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetMalwareSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMalwareSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetMalwareSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetMalwareSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetMalwareSummaryReportRequest {
	return &DeviceManagementReportsGetMalwareSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetMalwareSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder struct{ BaseRequestBuilder }

// GetUnhealthyDefenderAgentsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetUnhealthyDefenderAgentsReport(reqObj *DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestParameter) *DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder {
	bb := &DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetUnhealthyDefenderAgentsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder) Request() *DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequest {
	return &DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder struct{ BaseRequestBuilder }

// GetUnhealthyFirewallReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetUnhealthyFirewallReport(reqObj *DeviceManagementReportsGetUnhealthyFirewallReportRequestParameter) *DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder {
	bb := &DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetUnhealthyFirewallReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetUnhealthyFirewallReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder) Request() *DeviceManagementReportsGetUnhealthyFirewallReportRequest {
	return &DeviceManagementReportsGetUnhealthyFirewallReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetUnhealthyFirewallReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetUnhealthyFirewallSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetUnhealthyFirewallSummaryReport(reqObj *DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestParameter) *DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetUnhealthyFirewallSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequest {
	return &DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetAllCertificatesReportRequestBuilder struct{ BaseRequestBuilder }

// GetAllCertificatesReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetAllCertificatesReport(reqObj *DeviceManagementReportsGetAllCertificatesReportRequestParameter) *DeviceManagementReportsGetAllCertificatesReportRequestBuilder {
	bb := &DeviceManagementReportsGetAllCertificatesReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAllCertificatesReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetAllCertificatesReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetAllCertificatesReportRequestBuilder) Request() *DeviceManagementReportsGetAllCertificatesReportRequest {
	return &DeviceManagementReportsGetAllCertificatesReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetAllCertificatesReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCertificatesReportRequestBuilder struct{ BaseRequestBuilder }

// GetCertificatesReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCertificatesReport(reqObj *DeviceManagementReportsGetCertificatesReportRequestParameter) *DeviceManagementReportsGetCertificatesReportRequestBuilder {
	bb := &DeviceManagementReportsGetCertificatesReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCertificatesReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCertificatesReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCertificatesReportRequestBuilder) Request() *DeviceManagementReportsGetCertificatesReportRequest {
	return &DeviceManagementReportsGetCertificatesReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCertificatesReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetZebraFotaDeploymentReportRequestBuilder struct{ BaseRequestBuilder }

// GetZebraFotaDeploymentReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetZebraFotaDeploymentReport(reqObj *DeviceManagementReportsGetZebraFotaDeploymentReportRequestParameter) *DeviceManagementReportsGetZebraFotaDeploymentReportRequestBuilder {
	bb := &DeviceManagementReportsGetZebraFotaDeploymentReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetZebraFotaDeploymentReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetZebraFotaDeploymentReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetZebraFotaDeploymentReportRequestBuilder) Request() *DeviceManagementReportsGetZebraFotaDeploymentReportRequest {
	return &DeviceManagementReportsGetZebraFotaDeploymentReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetZebraFotaDeploymentReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetGroupPolicySettingsDeviceSettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetGroupPolicySettingsDeviceSettingsReport(reqObj *DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequestParameter) *DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetGroupPolicySettingsDeviceSettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequestBuilder) Request() *DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequest {
	return &DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetGroupPolicySettingsDeviceSettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequestBuilder struct{ BaseRequestBuilder }

// GetMobileApplicationManagementAppConfigurationReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetMobileApplicationManagementAppConfigurationReport(reqObj *DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequestParameter) *DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequestBuilder {
	bb := &DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMobileApplicationManagementAppConfigurationReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequestBuilder) Request() *DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequest {
	return &DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetMobileApplicationManagementAppConfigurationReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetMobileApplicationManagementAppRegistrationSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetMobileApplicationManagementAppRegistrationSummaryReport(reqObj *DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequestParameter) *DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMobileApplicationManagementAppRegistrationSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequest {
	return &DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetMobileApplicationManagementAppRegistrationSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigManagerDevicePolicyStatusReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigManagerDevicePolicyStatusReport(reqObj *DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequestParameter) *DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigManagerDevicePolicyStatusReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequestBuilder) Request() *DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequest {
	return &DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigManagerDevicePolicyStatusReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetRemoteAssistanceSessionsReportRequestBuilder struct{ BaseRequestBuilder }

// GetRemoteAssistanceSessionsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetRemoteAssistanceSessionsReport(reqObj *DeviceManagementReportsGetRemoteAssistanceSessionsReportRequestParameter) *DeviceManagementReportsGetRemoteAssistanceSessionsReportRequestBuilder {
	bb := &DeviceManagementReportsGetRemoteAssistanceSessionsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetRemoteAssistanceSessionsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetRemoteAssistanceSessionsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetRemoteAssistanceSessionsReportRequestBuilder) Request() *DeviceManagementReportsGetRemoteAssistanceSessionsReportRequest {
	return &DeviceManagementReportsGetRemoteAssistanceSessionsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetRemoteAssistanceSessionsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCachedReportRequestBuilder struct{ BaseRequestBuilder }

// GetCachedReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCachedReport(reqObj *DeviceManagementReportsGetCachedReportRequestParameter) *DeviceManagementReportsGetCachedReportRequestBuilder {
	bb := &DeviceManagementReportsGetCachedReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCachedReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCachedReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCachedReportRequestBuilder) Request() *DeviceManagementReportsGetCachedReportRequest {
	return &DeviceManagementReportsGetCachedReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCachedReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetCompliancePolicyNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCompliancePolicyNonComplianceReport(reqObj *DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequestParameter) *DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCompliancePolicyNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequest {
	return &DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCompliancePolicyNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetCompliancePolicyNonComplianceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetCompliancePolicyNonComplianceSummaryReport(reqObj *DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequestParameter) *DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetCompliancePolicyNonComplianceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequest {
	return &DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetCompliancePolicyNonComplianceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetComplianceSettingNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetComplianceSettingNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetComplianceSettingNonComplianceReport(reqObj *DeviceManagementReportsGetComplianceSettingNonComplianceReportRequestParameter) *DeviceManagementReportsGetComplianceSettingNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetComplianceSettingNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetComplianceSettingNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetComplianceSettingNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetComplianceSettingNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetComplianceSettingNonComplianceReportRequest {
	return &DeviceManagementReportsGetComplianceSettingNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetComplianceSettingNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPolicyNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPolicyNonComplianceReport(reqObj *DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequestParameter) *DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPolicyNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequest {
	return &DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPolicyNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationPolicyNonComplianceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationPolicyNonComplianceSummaryReport(reqObj *DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequestParameter) *DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationPolicyNonComplianceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequest {
	return &DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationPolicyNonComplianceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetConfigurationSettingNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetConfigurationSettingNonComplianceReport(reqObj *DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequestParameter) *DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetConfigurationSettingNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequest {
	return &DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetConfigurationSettingNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceManagementIntentPerSettingContributingProfiles action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceManagementIntentPerSettingContributingProfiles(reqObj *DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequestParameter) *DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceManagementIntentPerSettingContributingProfiles"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder) Request() *DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequest {
	return &DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceManagementIntentPerSettingContributingProfilesRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceManagementIntentSettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceManagementIntentSettingsReport(reqObj *DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequestParameter) *DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceManagementIntentSettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequest {
	return &DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceManagementIntentSettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceNonComplianceReport(reqObj *DeviceManagementReportsGetDeviceNonComplianceReportRequestParameter) *DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceNonComplianceReportRequest {
	return &DeviceManagementReportsGetDeviceNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDevicePoliciesComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetDevicePoliciesComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDevicePoliciesComplianceReport(reqObj *DeviceManagementReportsGetDevicePoliciesComplianceReportRequestParameter) *DeviceManagementReportsGetDevicePoliciesComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetDevicePoliciesComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDevicePoliciesComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDevicePoliciesComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDevicePoliciesComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetDevicePoliciesComplianceReportRequest {
	return &DeviceManagementReportsGetDevicePoliciesComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDevicePoliciesComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetDevicePolicySettingsComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDevicePolicySettingsComplianceReport(reqObj *DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequestParameter) *DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDevicePolicySettingsComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequest {
	return &DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDevicePolicySettingsComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetDevicesStatusByPolicyPlatformComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDevicesStatusByPolicyPlatformComplianceReport(reqObj *DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequestParameter) *DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDevicesStatusByPolicyPlatformComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequest {
	return &DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDevicesStatusByPolicyPlatformComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDevicesStatusBySettingReportRequestBuilder struct{ BaseRequestBuilder }

// GetDevicesStatusBySettingReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDevicesStatusBySettingReport(reqObj *DeviceManagementReportsGetDevicesStatusBySettingReportRequestParameter) *DeviceManagementReportsGetDevicesStatusBySettingReportRequestBuilder {
	bb := &DeviceManagementReportsGetDevicesStatusBySettingReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDevicesStatusBySettingReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDevicesStatusBySettingReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDevicesStatusBySettingReportRequestBuilder) Request() *DeviceManagementReportsGetDevicesStatusBySettingReportRequest {
	return &DeviceManagementReportsGetDevicesStatusBySettingReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDevicesStatusBySettingReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceStatusByCompliacePolicyReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceStatusByCompliacePolicyReport(reqObj *DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequestParameter) *DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceStatusByCompliacePolicyReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequest {
	return &DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceStatusByCompliacePolicyReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceStatusByCompliancePolicySettingReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceStatusByCompliancePolicySettingReport(reqObj *DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequestParameter) *DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceStatusByCompliancePolicySettingReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequest {
	return &DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceStatusByCompliancePolicySettingReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceStatusSummaryByCompliacePolicyReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceStatusSummaryByCompliacePolicyReport(reqObj *DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequestParameter) *DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceStatusSummaryByCompliacePolicyReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequest {
	return &DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceStatusSummaryByCompliacePolicyReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetDeviceStatusSummaryByCompliancePolicySettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDeviceStatusSummaryByCompliancePolicySettingsReport(reqObj *DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequestParameter) *DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDeviceStatusSummaryByCompliancePolicySettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequestBuilder) Request() *DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequest {
	return &DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDeviceStatusSummaryByCompliancePolicySettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequestBuilder struct{ BaseRequestBuilder }

// GetDevicesWithoutCompliancePolicyReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetDevicesWithoutCompliancePolicyReport(reqObj *DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequestParameter) *DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequestBuilder {
	bb := &DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetDevicesWithoutCompliancePolicyReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequestBuilder) Request() *DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequest {
	return &DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetDevicesWithoutCompliancePolicyReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetHistoricalReportRequestBuilder struct{ BaseRequestBuilder }

// GetHistoricalReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetHistoricalReport(reqObj *DeviceManagementReportsGetHistoricalReportRequestParameter) *DeviceManagementReportsGetHistoricalReportRequestBuilder {
	bb := &DeviceManagementReportsGetHistoricalReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetHistoricalReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetHistoricalReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetHistoricalReportRequestBuilder) Request() *DeviceManagementReportsGetHistoricalReportRequest {
	return &DeviceManagementReportsGetHistoricalReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetHistoricalReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequestBuilder struct{ BaseRequestBuilder }

// GetNoncompliantDevicesAndSettingsReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetNoncompliantDevicesAndSettingsReport(reqObj *DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequestParameter) *DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequestBuilder {
	bb := &DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetNoncompliantDevicesAndSettingsReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequestBuilder) Request() *DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequest {
	return &DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetNoncompliantDevicesAndSettingsReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder struct{ BaseRequestBuilder }

// GetPolicyNonComplianceMetadata action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetPolicyNonComplianceMetadata(reqObj *DeviceManagementReportsGetPolicyNonComplianceMetadataRequestParameter) *DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder {
	bb := &DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetPolicyNonComplianceMetadata"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetPolicyNonComplianceMetadataRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder) Request() *DeviceManagementReportsGetPolicyNonComplianceMetadataRequest {
	return &DeviceManagementReportsGetPolicyNonComplianceMetadataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetPolicyNonComplianceMetadataRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetPolicyNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetPolicyNonComplianceReport(reqObj *DeviceManagementReportsGetPolicyNonComplianceReportRequestParameter) *DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetPolicyNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetPolicyNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetPolicyNonComplianceReportRequest {
	return &DeviceManagementReportsGetPolicyNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetPolicyNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetPolicyNonComplianceSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetPolicyNonComplianceSummaryReport(reqObj *DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestParameter) *DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetPolicyNonComplianceSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequest {
	return &DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetReportFiltersRequestBuilder struct{ BaseRequestBuilder }

// GetReportFilters action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetReportFilters(reqObj *DeviceManagementReportsGetReportFiltersRequestParameter) *DeviceManagementReportsGetReportFiltersRequestBuilder {
	bb := &DeviceManagementReportsGetReportFiltersRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetReportFilters"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetReportFiltersRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetReportFiltersRequestBuilder) Request() *DeviceManagementReportsGetReportFiltersRequest {
	return &DeviceManagementReportsGetReportFiltersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetReportFiltersRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder struct{ BaseRequestBuilder }

// GetSettingNonComplianceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetSettingNonComplianceReport(reqObj *DeviceManagementReportsGetSettingNonComplianceReportRequestParameter) *DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder {
	bb := &DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetSettingNonComplianceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetSettingNonComplianceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder) Request() *DeviceManagementReportsGetSettingNonComplianceReportRequest {
	return &DeviceManagementReportsGetSettingNonComplianceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetSettingNonComplianceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequestBuilder struct{ BaseRequestBuilder }

// GetWindowsQualityUpdateAlertsPerPolicyPerDeviceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetWindowsQualityUpdateAlertsPerPolicyPerDeviceReport(reqObj *DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequestParameter) *DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequestBuilder {
	bb := &DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetWindowsQualityUpdateAlertsPerPolicyPerDeviceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequestBuilder) Request() *DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequest {
	return &DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetWindowsQualityUpdateAlertsPerPolicyPerDeviceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetWindowsQualityUpdateAlertSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetWindowsQualityUpdateAlertSummaryReport(reqObj *DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequestParameter) *DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetWindowsQualityUpdateAlertSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequest {
	return &DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetWindowsQualityUpdateAlertSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder struct{ BaseRequestBuilder }

// GetWindowsUpdateAlertsPerPolicyPerDeviceReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetWindowsUpdateAlertsPerPolicyPerDeviceReport(reqObj *DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestParameter) *DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder {
	bb := &DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetWindowsUpdateAlertsPerPolicyPerDeviceReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder) Request() *DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequest {
	return &DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder struct{ BaseRequestBuilder }

// GetWindowsUpdateAlertSummaryReport action undocumentedras
func (b *DeviceManagementReportsRequestBuilder) GetWindowsUpdateAlertSummaryReport(reqObj *DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestParameter) *DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder {
	bb := &DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetWindowsUpdateAlertSummaryReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequest struct{ BaseRequest }

func (b *DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder) Request() *DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequest {
	return &DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementResourceAccessProfileBaseAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *DeviceManagementResourceAccessProfileBaseRequestBuilder) Assign(reqObj *DeviceManagementResourceAccessProfileBaseAssignRequestParameter) *DeviceManagementResourceAccessProfileBaseAssignRequestBuilder {
	bb := &DeviceManagementResourceAccessProfileBaseAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementResourceAccessProfileBaseAssignRequest struct{ BaseRequest }

func (b *DeviceManagementResourceAccessProfileBaseAssignRequestBuilder) Request() *DeviceManagementResourceAccessProfileBaseAssignRequest {
	return &DeviceManagementResourceAccessProfileBaseAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementResourceAccessProfileBaseAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DeviceManagementResourceAccessProfileAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementResourceAccessProfileAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DeviceManagementResourceAccessProfileAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DeviceManagementResourceAccessProfileBaseAssignRequest) PostN(ctx context.Context, n int) ([]DeviceManagementResourceAccessProfileAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DeviceManagementResourceAccessProfileBaseAssignRequest) Post(ctx context.Context) ([]DeviceManagementResourceAccessProfileAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DeviceManagementReusablePolicySettingCloneRequestBuilder struct{ BaseRequestBuilder }

// Clone action undocumentedras
func (b *DeviceManagementReusablePolicySettingRequestBuilder) Clone(reqObj *DeviceManagementReusablePolicySettingCloneRequestParameter) *DeviceManagementReusablePolicySettingCloneRequestBuilder {
	bb := &DeviceManagementReusablePolicySettingCloneRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Clone"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementReusablePolicySettingCloneRequest struct{ BaseRequest }

func (b *DeviceManagementReusablePolicySettingCloneRequestBuilder) Request() *DeviceManagementReusablePolicySettingCloneRequest {
	return &DeviceManagementReusablePolicySettingCloneRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementReusablePolicySettingCloneRequest) Post(ctx context.Context) (resObj *DeviceManagementReusablePolicySetting, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceManagementScriptAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceManagementScriptRequestBuilder) Assign(reqObj *DeviceManagementScriptAssignRequestParameter) *DeviceManagementScriptAssignRequestBuilder {
	bb := &DeviceManagementScriptAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementScriptAssignRequest struct{ BaseRequest }

func (b *DeviceManagementScriptAssignRequestBuilder) Request() *DeviceManagementScriptAssignRequest {
	return &DeviceManagementScriptAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementScriptAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DeviceManagementTemplateCreateInstanceRequestBuilder struct{ BaseRequestBuilder }

// CreateInstance action undocumentedras
func (b *DeviceManagementTemplateRequestBuilder) CreateInstance(reqObj *DeviceManagementTemplateCreateInstanceRequestParameter) *DeviceManagementTemplateCreateInstanceRequestBuilder {
	bb := &DeviceManagementTemplateCreateInstanceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateInstance"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceManagementTemplateCreateInstanceRequest struct{ BaseRequest }

func (b *DeviceManagementTemplateCreateInstanceRequestBuilder) Request() *DeviceManagementTemplateCreateInstanceRequest {
	return &DeviceManagementTemplateCreateInstanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceManagementTemplateCreateInstanceRequest) Post(ctx context.Context) (resObj *DeviceManagementIntent, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type DeviceShellScriptAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *DeviceShellScriptRequestBuilder) Assign(reqObj *DeviceShellScriptAssignRequestParameter) *DeviceShellScriptAssignRequestBuilder {
	bb := &DeviceShellScriptAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DeviceShellScriptAssignRequest struct{ BaseRequest }

func (b *DeviceShellScriptAssignRequestBuilder) Request() *DeviceShellScriptAssignRequest {
	return &DeviceShellScriptAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DeviceShellScriptAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

// DeviceManagementAlertImpactRequestBuilder is request builder for DeviceManagementAlertImpact
type DeviceManagementAlertImpactRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAlertImpactRequest
func (b *DeviceManagementAlertImpactRequestBuilder) Request() *DeviceManagementAlertImpactRequest {
	return &DeviceManagementAlertImpactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAlertImpactRequest is request for DeviceManagementAlertImpact
type DeviceManagementAlertImpactRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAlertImpact
func (r *DeviceManagementAlertImpactRequest) Get(ctx context.Context) (resObj *DeviceManagementAlertImpact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAlertImpact
func (r *DeviceManagementAlertImpactRequest) Update(ctx context.Context, reqObj *DeviceManagementAlertImpact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAlertImpact
func (r *DeviceManagementAlertImpactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAlertRecordRequestBuilder is request builder for DeviceManagementAlertRecord
type DeviceManagementAlertRecordRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAlertRecordRequest
func (b *DeviceManagementAlertRecordRequestBuilder) Request() *DeviceManagementAlertRecordRequest {
	return &DeviceManagementAlertRecordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAlertRecordRequest is request for DeviceManagementAlertRecord
type DeviceManagementAlertRecordRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAlertRecord
func (r *DeviceManagementAlertRecordRequest) Get(ctx context.Context) (resObj *DeviceManagementAlertRecord, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAlertRecord
func (r *DeviceManagementAlertRecordRequest) Update(ctx context.Context, reqObj *DeviceManagementAlertRecord) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAlertRecord
func (r *DeviceManagementAlertRecordRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementAlertRuleRequestBuilder is request builder for DeviceManagementAlertRule
type DeviceManagementAlertRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementAlertRuleRequest
func (b *DeviceManagementAlertRuleRequestBuilder) Request() *DeviceManagementAlertRuleRequest {
	return &DeviceManagementAlertRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementAlertRuleRequest is request for DeviceManagementAlertRule
type DeviceManagementAlertRuleRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementAlertRule
func (r *DeviceManagementAlertRuleRequest) Get(ctx context.Context) (resObj *DeviceManagementAlertRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementAlertRule
func (r *DeviceManagementAlertRuleRequest) Update(ctx context.Context, reqObj *DeviceManagementAlertRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementAlertRule
func (r *DeviceManagementAlertRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementNotificationChannelRequestBuilder is request builder for DeviceManagementNotificationChannel
type DeviceManagementNotificationChannelRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementNotificationChannelRequest
func (b *DeviceManagementNotificationChannelRequestBuilder) Request() *DeviceManagementNotificationChannelRequest {
	return &DeviceManagementNotificationChannelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementNotificationChannelRequest is request for DeviceManagementNotificationChannel
type DeviceManagementNotificationChannelRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementNotificationChannel
func (r *DeviceManagementNotificationChannelRequest) Get(ctx context.Context) (resObj *DeviceManagementNotificationChannel, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementNotificationChannel
func (r *DeviceManagementNotificationChannelRequest) Update(ctx context.Context, reqObj *DeviceManagementNotificationChannel) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementNotificationChannel
func (r *DeviceManagementNotificationChannelRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementNotificationReceiverRequestBuilder is request builder for DeviceManagementNotificationReceiver
type DeviceManagementNotificationReceiverRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementNotificationReceiverRequest
func (b *DeviceManagementNotificationReceiverRequestBuilder) Request() *DeviceManagementNotificationReceiverRequest {
	return &DeviceManagementNotificationReceiverRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementNotificationReceiverRequest is request for DeviceManagementNotificationReceiver
type DeviceManagementNotificationReceiverRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementNotificationReceiver
func (r *DeviceManagementNotificationReceiverRequest) Get(ctx context.Context) (resObj *DeviceManagementNotificationReceiver, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementNotificationReceiver
func (r *DeviceManagementNotificationReceiverRequest) Update(ctx context.Context, reqObj *DeviceManagementNotificationReceiver) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementNotificationReceiver
func (r *DeviceManagementNotificationReceiverRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementPortalNotificationRequestBuilder is request builder for DeviceManagementPortalNotification
type DeviceManagementPortalNotificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementPortalNotificationRequest
func (b *DeviceManagementPortalNotificationRequestBuilder) Request() *DeviceManagementPortalNotificationRequest {
	return &DeviceManagementPortalNotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementPortalNotificationRequest is request for DeviceManagementPortalNotification
type DeviceManagementPortalNotificationRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementPortalNotification
func (r *DeviceManagementPortalNotificationRequest) Get(ctx context.Context) (resObj *DeviceManagementPortalNotification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementPortalNotification
func (r *DeviceManagementPortalNotificationRequest) Update(ctx context.Context, reqObj *DeviceManagementPortalNotification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementPortalNotification
func (r *DeviceManagementPortalNotificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DeviceManagementRuleThresholdRequestBuilder is request builder for DeviceManagementRuleThreshold
type DeviceManagementRuleThresholdRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementRuleThresholdRequest
func (b *DeviceManagementRuleThresholdRequestBuilder) Request() *DeviceManagementRuleThresholdRequest {
	return &DeviceManagementRuleThresholdRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementRuleThresholdRequest is request for DeviceManagementRuleThreshold
type DeviceManagementRuleThresholdRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementRuleThreshold
func (r *DeviceManagementRuleThresholdRequest) Get(ctx context.Context) (resObj *DeviceManagementRuleThreshold, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementRuleThreshold
func (r *DeviceManagementRuleThresholdRequest) Update(ctx context.Context, reqObj *DeviceManagementRuleThreshold) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementRuleThreshold
func (r *DeviceManagementRuleThresholdRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
