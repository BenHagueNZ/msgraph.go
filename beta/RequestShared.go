// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// SharedRequestBuilder is request builder for Shared
type SharedRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedRequest
func (b *SharedRequestBuilder) Request() *SharedRequest {
	return &SharedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedRequest is request for Shared
type SharedRequest struct{ BaseRequest }

// Get performs GET request for Shared
func (r *SharedRequest) Get(ctx context.Context) (resObj *Shared, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Shared
func (r *SharedRequest) Update(ctx context.Context, reqObj *Shared) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Shared
func (r *SharedRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedAppleDeviceUserRequestBuilder is request builder for SharedAppleDeviceUser
type SharedAppleDeviceUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedAppleDeviceUserRequest
func (b *SharedAppleDeviceUserRequestBuilder) Request() *SharedAppleDeviceUserRequest {
	return &SharedAppleDeviceUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedAppleDeviceUserRequest is request for SharedAppleDeviceUser
type SharedAppleDeviceUserRequest struct{ BaseRequest }

// Get performs GET request for SharedAppleDeviceUser
func (r *SharedAppleDeviceUserRequest) Get(ctx context.Context) (resObj *SharedAppleDeviceUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedAppleDeviceUser
func (r *SharedAppleDeviceUserRequest) Update(ctx context.Context, reqObj *SharedAppleDeviceUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedAppleDeviceUser
func (r *SharedAppleDeviceUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedDriveItemRequestBuilder is request builder for SharedDriveItem
type SharedDriveItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedDriveItemRequest
func (b *SharedDriveItemRequestBuilder) Request() *SharedDriveItemRequest {
	return &SharedDriveItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedDriveItemRequest is request for SharedDriveItem
type SharedDriveItemRequest struct{ BaseRequest }

// Get performs GET request for SharedDriveItem
func (r *SharedDriveItemRequest) Get(ctx context.Context) (resObj *SharedDriveItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedDriveItem
func (r *SharedDriveItemRequest) Update(ctx context.Context, reqObj *SharedDriveItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedDriveItem
func (r *SharedDriveItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedEmailDomainRequestBuilder is request builder for SharedEmailDomain
type SharedEmailDomainRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedEmailDomainRequest
func (b *SharedEmailDomainRequestBuilder) Request() *SharedEmailDomainRequest {
	return &SharedEmailDomainRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedEmailDomainRequest is request for SharedEmailDomain
type SharedEmailDomainRequest struct{ BaseRequest }

// Get performs GET request for SharedEmailDomain
func (r *SharedEmailDomainRequest) Get(ctx context.Context) (resObj *SharedEmailDomain, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedEmailDomain
func (r *SharedEmailDomainRequest) Update(ctx context.Context, reqObj *SharedEmailDomain) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedEmailDomain
func (r *SharedEmailDomainRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedEmailDomainInvitationRequestBuilder is request builder for SharedEmailDomainInvitation
type SharedEmailDomainInvitationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedEmailDomainInvitationRequest
func (b *SharedEmailDomainInvitationRequestBuilder) Request() *SharedEmailDomainInvitationRequest {
	return &SharedEmailDomainInvitationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedEmailDomainInvitationRequest is request for SharedEmailDomainInvitation
type SharedEmailDomainInvitationRequest struct{ BaseRequest }

// Get performs GET request for SharedEmailDomainInvitation
func (r *SharedEmailDomainInvitationRequest) Get(ctx context.Context) (resObj *SharedEmailDomainInvitation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedEmailDomainInvitation
func (r *SharedEmailDomainInvitationRequest) Update(ctx context.Context, reqObj *SharedEmailDomainInvitation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedEmailDomainInvitation
func (r *SharedEmailDomainInvitationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedInsightRequestBuilder is request builder for SharedInsight
type SharedInsightRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedInsightRequest
func (b *SharedInsightRequestBuilder) Request() *SharedInsightRequest {
	return &SharedInsightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedInsightRequest is request for SharedInsight
type SharedInsightRequest struct{ BaseRequest }

// Get performs GET request for SharedInsight
func (r *SharedInsightRequest) Get(ctx context.Context) (resObj *SharedInsight, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedInsight
func (r *SharedInsightRequest) Update(ctx context.Context, reqObj *SharedInsight) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedInsight
func (r *SharedInsightRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedPCAccountManagerPolicyRequestBuilder is request builder for SharedPCAccountManagerPolicy
type SharedPCAccountManagerPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedPCAccountManagerPolicyRequest
func (b *SharedPCAccountManagerPolicyRequestBuilder) Request() *SharedPCAccountManagerPolicyRequest {
	return &SharedPCAccountManagerPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedPCAccountManagerPolicyRequest is request for SharedPCAccountManagerPolicy
type SharedPCAccountManagerPolicyRequest struct{ BaseRequest }

// Get performs GET request for SharedPCAccountManagerPolicy
func (r *SharedPCAccountManagerPolicyRequest) Get(ctx context.Context) (resObj *SharedPCAccountManagerPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedPCAccountManagerPolicy
func (r *SharedPCAccountManagerPolicyRequest) Update(ctx context.Context, reqObj *SharedPCAccountManagerPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedPCAccountManagerPolicy
func (r *SharedPCAccountManagerPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedPCConfigurationRequestBuilder is request builder for SharedPCConfiguration
type SharedPCConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedPCConfigurationRequest
func (b *SharedPCConfigurationRequestBuilder) Request() *SharedPCConfigurationRequest {
	return &SharedPCConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedPCConfigurationRequest is request for SharedPCConfiguration
type SharedPCConfigurationRequest struct{ BaseRequest }

// Get performs GET request for SharedPCConfiguration
func (r *SharedPCConfigurationRequest) Get(ctx context.Context) (resObj *SharedPCConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedPCConfiguration
func (r *SharedPCConfigurationRequest) Update(ctx context.Context, reqObj *SharedPCConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedPCConfiguration
func (r *SharedPCConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharedWithChannelTeamInfoRequestBuilder is request builder for SharedWithChannelTeamInfo
type SharedWithChannelTeamInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharedWithChannelTeamInfoRequest
func (b *SharedWithChannelTeamInfoRequestBuilder) Request() *SharedWithChannelTeamInfoRequest {
	return &SharedWithChannelTeamInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharedWithChannelTeamInfoRequest is request for SharedWithChannelTeamInfo
type SharedWithChannelTeamInfoRequest struct{ BaseRequest }

// Get performs GET request for SharedWithChannelTeamInfo
func (r *SharedWithChannelTeamInfoRequest) Get(ctx context.Context) (resObj *SharedWithChannelTeamInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharedWithChannelTeamInfo
func (r *SharedWithChannelTeamInfoRequest) Update(ctx context.Context, reqObj *SharedWithChannelTeamInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharedWithChannelTeamInfo
func (r *SharedWithChannelTeamInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
