// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// InsightIdentityRequestBuilder is request builder for InsightIdentity
type InsightIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns InsightIdentityRequest
func (b *InsightIdentityRequestBuilder) Request() *InsightIdentityRequest {
	return &InsightIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// InsightIdentityRequest is request for InsightIdentity
type InsightIdentityRequest struct{ BaseRequest }

// Get performs GET request for InsightIdentity
func (r *InsightIdentityRequest) Get(ctx context.Context) (resObj *InsightIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for InsightIdentity
func (r *InsightIdentityRequest) Update(ctx context.Context, reqObj *InsightIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for InsightIdentity
func (r *InsightIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// InsightValueDoubleRequestBuilder is request builder for InsightValueDouble
type InsightValueDoubleRequestBuilder struct{ BaseRequestBuilder }

// Request returns InsightValueDoubleRequest
func (b *InsightValueDoubleRequestBuilder) Request() *InsightValueDoubleRequest {
	return &InsightValueDoubleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// InsightValueDoubleRequest is request for InsightValueDouble
type InsightValueDoubleRequest struct{ BaseRequest }

// Get performs GET request for InsightValueDouble
func (r *InsightValueDoubleRequest) Get(ctx context.Context) (resObj *InsightValueDouble, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for InsightValueDouble
func (r *InsightValueDoubleRequest) Update(ctx context.Context, reqObj *InsightValueDouble) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for InsightValueDouble
func (r *InsightValueDoubleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// InsightValueIntRequestBuilder is request builder for InsightValueInt
type InsightValueIntRequestBuilder struct{ BaseRequestBuilder }

// Request returns InsightValueIntRequest
func (b *InsightValueIntRequestBuilder) Request() *InsightValueIntRequest {
	return &InsightValueIntRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// InsightValueIntRequest is request for InsightValueInt
type InsightValueIntRequest struct{ BaseRequest }

// Get performs GET request for InsightValueInt
func (r *InsightValueIntRequest) Get(ctx context.Context) (resObj *InsightValueInt, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for InsightValueInt
func (r *InsightValueIntRequest) Update(ctx context.Context, reqObj *InsightValueInt) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for InsightValueInt
func (r *InsightValueIntRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
