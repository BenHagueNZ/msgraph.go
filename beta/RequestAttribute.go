// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// AttributeDefinitionRequestBuilder is request builder for AttributeDefinition
type AttributeDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeDefinitionRequest
func (b *AttributeDefinitionRequestBuilder) Request() *AttributeDefinitionRequest {
	return &AttributeDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeDefinitionRequest is request for AttributeDefinition
type AttributeDefinitionRequest struct{ BaseRequest }

// Get performs GET request for AttributeDefinition
func (r *AttributeDefinitionRequest) Get(ctx context.Context) (resObj *AttributeDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeDefinition
func (r *AttributeDefinitionRequest) Update(ctx context.Context, reqObj *AttributeDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeDefinition
func (r *AttributeDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AttributeMappingRequestBuilder is request builder for AttributeMapping
type AttributeMappingRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeMappingRequest
func (b *AttributeMappingRequestBuilder) Request() *AttributeMappingRequest {
	return &AttributeMappingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeMappingRequest is request for AttributeMapping
type AttributeMappingRequest struct{ BaseRequest }

// Get performs GET request for AttributeMapping
func (r *AttributeMappingRequest) Get(ctx context.Context) (resObj *AttributeMapping, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeMapping
func (r *AttributeMappingRequest) Update(ctx context.Context, reqObj *AttributeMapping) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeMapping
func (r *AttributeMappingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AttributeMappingFunctionSchemaRequestBuilder is request builder for AttributeMappingFunctionSchema
type AttributeMappingFunctionSchemaRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeMappingFunctionSchemaRequest
func (b *AttributeMappingFunctionSchemaRequestBuilder) Request() *AttributeMappingFunctionSchemaRequest {
	return &AttributeMappingFunctionSchemaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeMappingFunctionSchemaRequest is request for AttributeMappingFunctionSchema
type AttributeMappingFunctionSchemaRequest struct{ BaseRequest }

// Get performs GET request for AttributeMappingFunctionSchema
func (r *AttributeMappingFunctionSchemaRequest) Get(ctx context.Context) (resObj *AttributeMappingFunctionSchema, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeMappingFunctionSchema
func (r *AttributeMappingFunctionSchemaRequest) Update(ctx context.Context, reqObj *AttributeMappingFunctionSchema) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeMappingFunctionSchema
func (r *AttributeMappingFunctionSchemaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AttributeMappingParameterSchemaRequestBuilder is request builder for AttributeMappingParameterSchema
type AttributeMappingParameterSchemaRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeMappingParameterSchemaRequest
func (b *AttributeMappingParameterSchemaRequestBuilder) Request() *AttributeMappingParameterSchemaRequest {
	return &AttributeMappingParameterSchemaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeMappingParameterSchemaRequest is request for AttributeMappingParameterSchema
type AttributeMappingParameterSchemaRequest struct{ BaseRequest }

// Get performs GET request for AttributeMappingParameterSchema
func (r *AttributeMappingParameterSchemaRequest) Get(ctx context.Context) (resObj *AttributeMappingParameterSchema, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeMappingParameterSchema
func (r *AttributeMappingParameterSchemaRequest) Update(ctx context.Context, reqObj *AttributeMappingParameterSchema) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeMappingParameterSchema
func (r *AttributeMappingParameterSchemaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AttributeMappingSourceRequestBuilder is request builder for AttributeMappingSource
type AttributeMappingSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeMappingSourceRequest
func (b *AttributeMappingSourceRequestBuilder) Request() *AttributeMappingSourceRequest {
	return &AttributeMappingSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeMappingSourceRequest is request for AttributeMappingSource
type AttributeMappingSourceRequest struct{ BaseRequest }

// Get performs GET request for AttributeMappingSource
func (r *AttributeMappingSourceRequest) Get(ctx context.Context) (resObj *AttributeMappingSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeMappingSource
func (r *AttributeMappingSourceRequest) Update(ctx context.Context, reqObj *AttributeMappingSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeMappingSource
func (r *AttributeMappingSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AttributeSetRequestBuilder is request builder for AttributeSet
type AttributeSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns AttributeSetRequest
func (b *AttributeSetRequestBuilder) Request() *AttributeSetRequest {
	return &AttributeSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AttributeSetRequest is request for AttributeSet
type AttributeSetRequest struct{ BaseRequest }

// Get performs GET request for AttributeSet
func (r *AttributeSetRequest) Get(ctx context.Context) (resObj *AttributeSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AttributeSet
func (r *AttributeSetRequest) Update(ctx context.Context, reqObj *AttributeSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AttributeSet
func (r *AttributeSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
