// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// B2cAuthenticationMethodsPolicyRequestBuilder is request builder for B2cAuthenticationMethodsPolicy
type B2cAuthenticationMethodsPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns B2cAuthenticationMethodsPolicyRequest
func (b *B2cAuthenticationMethodsPolicyRequestBuilder) Request() *B2cAuthenticationMethodsPolicyRequest {
	return &B2cAuthenticationMethodsPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// B2cAuthenticationMethodsPolicyRequest is request for B2cAuthenticationMethodsPolicy
type B2cAuthenticationMethodsPolicyRequest struct{ BaseRequest }

// Get performs GET request for B2cAuthenticationMethodsPolicy
func (r *B2cAuthenticationMethodsPolicyRequest) Get(ctx context.Context) (resObj *B2cAuthenticationMethodsPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for B2cAuthenticationMethodsPolicy
func (r *B2cAuthenticationMethodsPolicyRequest) Update(ctx context.Context, reqObj *B2cAuthenticationMethodsPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for B2cAuthenticationMethodsPolicy
func (r *B2cAuthenticationMethodsPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// B2cIdentityUserFlowRequestBuilder is request builder for B2cIdentityUserFlow
type B2cIdentityUserFlowRequestBuilder struct{ BaseRequestBuilder }

// Request returns B2cIdentityUserFlowRequest
func (b *B2cIdentityUserFlowRequestBuilder) Request() *B2cIdentityUserFlowRequest {
	return &B2cIdentityUserFlowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// B2cIdentityUserFlowRequest is request for B2cIdentityUserFlow
type B2cIdentityUserFlowRequest struct{ BaseRequest }

// Get performs GET request for B2cIdentityUserFlow
func (r *B2cIdentityUserFlowRequest) Get(ctx context.Context) (resObj *B2cIdentityUserFlow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for B2cIdentityUserFlow
func (r *B2cIdentityUserFlowRequest) Update(ctx context.Context, reqObj *B2cIdentityUserFlow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for B2cIdentityUserFlow
func (r *B2cIdentityUserFlowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
