// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ExternalRequestBuilder is request builder for External
type ExternalRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalRequest
func (b *ExternalRequestBuilder) Request() *ExternalRequest {
	return &ExternalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalRequest is request for External
type ExternalRequest struct{ BaseRequest }

// Get performs GET request for External
func (r *ExternalRequest) Get(ctx context.Context) (resObj *External, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for External
func (r *ExternalRequest) Update(ctx context.Context, reqObj *External) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for External
func (r *ExternalRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectionRequestBuilder is request builder for ExternalConnection
type ExternalConnectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectionRequest
func (b *ExternalConnectionRequestBuilder) Request() *ExternalConnectionRequest {
	return &ExternalConnectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectionRequest is request for ExternalConnection
type ExternalConnectionRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnection
func (r *ExternalConnectionRequest) Get(ctx context.Context) (resObj *ExternalConnection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnection
func (r *ExternalConnectionRequest) Update(ctx context.Context, reqObj *ExternalConnection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnection
func (r *ExternalConnectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalRequestBuilder is request builder for ExternalConnectorsExternal
type ExternalConnectorsExternalRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalRequest
func (b *ExternalConnectorsExternalRequestBuilder) Request() *ExternalConnectorsExternalRequest {
	return &ExternalConnectorsExternalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalRequest is request for ExternalConnectorsExternal
type ExternalConnectorsExternalRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternal
func (r *ExternalConnectorsExternalRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternal, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternal
func (r *ExternalConnectorsExternalRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternal) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternal
func (r *ExternalConnectorsExternalRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalConnectionRequestBuilder is request builder for ExternalConnectorsExternalConnection
type ExternalConnectorsExternalConnectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalConnectionRequest
func (b *ExternalConnectorsExternalConnectionRequestBuilder) Request() *ExternalConnectorsExternalConnectionRequest {
	return &ExternalConnectorsExternalConnectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalConnectionRequest is request for ExternalConnectorsExternalConnection
type ExternalConnectorsExternalConnectionRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalConnection
func (r *ExternalConnectorsExternalConnectionRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalConnection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalConnection
func (r *ExternalConnectorsExternalConnectionRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalConnection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalConnection
func (r *ExternalConnectorsExternalConnectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalDomainFederationRequestBuilder is request builder for ExternalDomainFederation
type ExternalDomainFederationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalDomainFederationRequest
func (b *ExternalDomainFederationRequestBuilder) Request() *ExternalDomainFederationRequest {
	return &ExternalDomainFederationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalDomainFederationRequest is request for ExternalDomainFederation
type ExternalDomainFederationRequest struct{ BaseRequest }

// Get performs GET request for ExternalDomainFederation
func (r *ExternalDomainFederationRequest) Get(ctx context.Context) (resObj *ExternalDomainFederation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalDomainFederation
func (r *ExternalDomainFederationRequest) Update(ctx context.Context, reqObj *ExternalDomainFederation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalDomainFederation
func (r *ExternalDomainFederationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalDomainNameRequestBuilder is request builder for ExternalDomainName
type ExternalDomainNameRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalDomainNameRequest
func (b *ExternalDomainNameRequestBuilder) Request() *ExternalDomainNameRequest {
	return &ExternalDomainNameRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalDomainNameRequest is request for ExternalDomainName
type ExternalDomainNameRequest struct{ BaseRequest }

// Get performs GET request for ExternalDomainName
func (r *ExternalDomainNameRequest) Get(ctx context.Context) (resObj *ExternalDomainName, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalDomainName
func (r *ExternalDomainNameRequest) Update(ctx context.Context, reqObj *ExternalDomainName) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalDomainName
func (r *ExternalDomainNameRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalGroupRequestBuilder is request builder for ExternalGroup
type ExternalGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalGroupRequest
func (b *ExternalGroupRequestBuilder) Request() *ExternalGroupRequest {
	return &ExternalGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalGroupRequest is request for ExternalGroup
type ExternalGroupRequest struct{ BaseRequest }

// Get performs GET request for ExternalGroup
func (r *ExternalGroupRequest) Get(ctx context.Context) (resObj *ExternalGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalGroup
func (r *ExternalGroupRequest) Update(ctx context.Context, reqObj *ExternalGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalGroup
func (r *ExternalGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalIdentitiesPolicyRequestBuilder is request builder for ExternalIdentitiesPolicy
type ExternalIdentitiesPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalIdentitiesPolicyRequest
func (b *ExternalIdentitiesPolicyRequestBuilder) Request() *ExternalIdentitiesPolicyRequest {
	return &ExternalIdentitiesPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalIdentitiesPolicyRequest is request for ExternalIdentitiesPolicy
type ExternalIdentitiesPolicyRequest struct{ BaseRequest }

// Get performs GET request for ExternalIdentitiesPolicy
func (r *ExternalIdentitiesPolicyRequest) Get(ctx context.Context) (resObj *ExternalIdentitiesPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalIdentitiesPolicy
func (r *ExternalIdentitiesPolicyRequest) Update(ctx context.Context, reqObj *ExternalIdentitiesPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalIdentitiesPolicy
func (r *ExternalIdentitiesPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalItemRequestBuilder is request builder for ExternalItem
type ExternalItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalItemRequest
func (b *ExternalItemRequestBuilder) Request() *ExternalItemRequest {
	return &ExternalItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalItemRequest is request for ExternalItem
type ExternalItemRequest struct{ BaseRequest }

// Get performs GET request for ExternalItem
func (r *ExternalItemRequest) Get(ctx context.Context) (resObj *ExternalItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalItem
func (r *ExternalItemRequest) Update(ctx context.Context, reqObj *ExternalItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalItem
func (r *ExternalItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalItemContentRequestBuilder is request builder for ExternalItemContent
type ExternalItemContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalItemContentRequest
func (b *ExternalItemContentRequestBuilder) Request() *ExternalItemContentRequest {
	return &ExternalItemContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalItemContentRequest is request for ExternalItemContent
type ExternalItemContentRequest struct{ BaseRequest }

// Get performs GET request for ExternalItemContent
func (r *ExternalItemContentRequest) Get(ctx context.Context) (resObj *ExternalItemContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalItemContent
func (r *ExternalItemContentRequest) Update(ctx context.Context, reqObj *ExternalItemContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalItemContent
func (r *ExternalItemContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalLinkRequestBuilder is request builder for ExternalLink
type ExternalLinkRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalLinkRequest
func (b *ExternalLinkRequestBuilder) Request() *ExternalLinkRequest {
	return &ExternalLinkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalLinkRequest is request for ExternalLink
type ExternalLinkRequest struct{ BaseRequest }

// Get performs GET request for ExternalLink
func (r *ExternalLinkRequest) Get(ctx context.Context) (resObj *ExternalLink, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalLink
func (r *ExternalLinkRequest) Update(ctx context.Context, reqObj *ExternalLink) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalLink
func (r *ExternalLinkRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalMeetingRegistrantRequestBuilder is request builder for ExternalMeetingRegistrant
type ExternalMeetingRegistrantRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalMeetingRegistrantRequest
func (b *ExternalMeetingRegistrantRequestBuilder) Request() *ExternalMeetingRegistrantRequest {
	return &ExternalMeetingRegistrantRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalMeetingRegistrantRequest is request for ExternalMeetingRegistrant
type ExternalMeetingRegistrantRequest struct{ BaseRequest }

// Get performs GET request for ExternalMeetingRegistrant
func (r *ExternalMeetingRegistrantRequest) Get(ctx context.Context) (resObj *ExternalMeetingRegistrant, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalMeetingRegistrant
func (r *ExternalMeetingRegistrantRequest) Update(ctx context.Context, reqObj *ExternalMeetingRegistrant) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalMeetingRegistrant
func (r *ExternalMeetingRegistrantRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalMeetingRegistrationRequestBuilder is request builder for ExternalMeetingRegistration
type ExternalMeetingRegistrationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalMeetingRegistrationRequest
func (b *ExternalMeetingRegistrationRequestBuilder) Request() *ExternalMeetingRegistrationRequest {
	return &ExternalMeetingRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalMeetingRegistrationRequest is request for ExternalMeetingRegistration
type ExternalMeetingRegistrationRequest struct{ BaseRequest }

// Get performs GET request for ExternalMeetingRegistration
func (r *ExternalMeetingRegistrationRequest) Get(ctx context.Context) (resObj *ExternalMeetingRegistration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalMeetingRegistration
func (r *ExternalMeetingRegistrationRequest) Update(ctx context.Context, reqObj *ExternalMeetingRegistration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalMeetingRegistration
func (r *ExternalMeetingRegistrationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalSponsorsRequestBuilder is request builder for ExternalSponsors
type ExternalSponsorsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalSponsorsRequest
func (b *ExternalSponsorsRequestBuilder) Request() *ExternalSponsorsRequest {
	return &ExternalSponsorsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalSponsorsRequest is request for ExternalSponsors
type ExternalSponsorsRequest struct{ BaseRequest }

// Get performs GET request for ExternalSponsors
func (r *ExternalSponsorsRequest) Get(ctx context.Context) (resObj *ExternalSponsors, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalSponsors
func (r *ExternalSponsorsRequest) Update(ctx context.Context, reqObj *ExternalSponsors) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalSponsors
func (r *ExternalSponsorsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsACLRequestBuilder is request builder for ExternalConnectorsACL
type ExternalConnectorsACLRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsACLRequest
func (b *ExternalConnectorsACLRequestBuilder) Request() *ExternalConnectorsACLRequest {
	return &ExternalConnectorsACLRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsACLRequest is request for ExternalConnectorsACL
type ExternalConnectorsACLRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsACL
func (r *ExternalConnectorsACLRequest) Get(ctx context.Context) (resObj *ExternalConnectorsACL, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsACL
func (r *ExternalConnectorsACLRequest) Update(ctx context.Context, reqObj *ExternalConnectorsACL) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsACL
func (r *ExternalConnectorsACLRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsActivitySettingsRequestBuilder is request builder for ExternalConnectorsActivitySettings
type ExternalConnectorsActivitySettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsActivitySettingsRequest
func (b *ExternalConnectorsActivitySettingsRequestBuilder) Request() *ExternalConnectorsActivitySettingsRequest {
	return &ExternalConnectorsActivitySettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsActivitySettingsRequest is request for ExternalConnectorsActivitySettings
type ExternalConnectorsActivitySettingsRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsActivitySettings
func (r *ExternalConnectorsActivitySettingsRequest) Get(ctx context.Context) (resObj *ExternalConnectorsActivitySettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsActivitySettings
func (r *ExternalConnectorsActivitySettingsRequest) Update(ctx context.Context, reqObj *ExternalConnectorsActivitySettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsActivitySettings
func (r *ExternalConnectorsActivitySettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsComplianceSettingsRequestBuilder is request builder for ExternalConnectorsComplianceSettings
type ExternalConnectorsComplianceSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsComplianceSettingsRequest
func (b *ExternalConnectorsComplianceSettingsRequestBuilder) Request() *ExternalConnectorsComplianceSettingsRequest {
	return &ExternalConnectorsComplianceSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsComplianceSettingsRequest is request for ExternalConnectorsComplianceSettings
type ExternalConnectorsComplianceSettingsRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsComplianceSettings
func (r *ExternalConnectorsComplianceSettingsRequest) Get(ctx context.Context) (resObj *ExternalConnectorsComplianceSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsComplianceSettings
func (r *ExternalConnectorsComplianceSettingsRequest) Update(ctx context.Context, reqObj *ExternalConnectorsComplianceSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsComplianceSettings
func (r *ExternalConnectorsComplianceSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsConfigurationRequestBuilder is request builder for ExternalConnectorsConfiguration
type ExternalConnectorsConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsConfigurationRequest
func (b *ExternalConnectorsConfigurationRequestBuilder) Request() *ExternalConnectorsConfigurationRequest {
	return &ExternalConnectorsConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsConfigurationRequest is request for ExternalConnectorsConfiguration
type ExternalConnectorsConfigurationRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsConfiguration
func (r *ExternalConnectorsConfigurationRequest) Get(ctx context.Context) (resObj *ExternalConnectorsConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsConfiguration
func (r *ExternalConnectorsConfigurationRequest) Update(ctx context.Context, reqObj *ExternalConnectorsConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsConfiguration
func (r *ExternalConnectorsConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsConnectionOperationRequestBuilder is request builder for ExternalConnectorsConnectionOperation
type ExternalConnectorsConnectionOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsConnectionOperationRequest
func (b *ExternalConnectorsConnectionOperationRequestBuilder) Request() *ExternalConnectorsConnectionOperationRequest {
	return &ExternalConnectorsConnectionOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsConnectionOperationRequest is request for ExternalConnectorsConnectionOperation
type ExternalConnectorsConnectionOperationRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsConnectionOperation
func (r *ExternalConnectorsConnectionOperationRequest) Get(ctx context.Context) (resObj *ExternalConnectorsConnectionOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsConnectionOperation
func (r *ExternalConnectorsConnectionOperationRequest) Update(ctx context.Context, reqObj *ExternalConnectorsConnectionOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsConnectionOperation
func (r *ExternalConnectorsConnectionOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsConnectionQuotaRequestBuilder is request builder for ExternalConnectorsConnectionQuota
type ExternalConnectorsConnectionQuotaRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsConnectionQuotaRequest
func (b *ExternalConnectorsConnectionQuotaRequestBuilder) Request() *ExternalConnectorsConnectionQuotaRequest {
	return &ExternalConnectorsConnectionQuotaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsConnectionQuotaRequest is request for ExternalConnectorsConnectionQuota
type ExternalConnectorsConnectionQuotaRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsConnectionQuota
func (r *ExternalConnectorsConnectionQuotaRequest) Get(ctx context.Context) (resObj *ExternalConnectorsConnectionQuota, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsConnectionQuota
func (r *ExternalConnectorsConnectionQuotaRequest) Update(ctx context.Context, reqObj *ExternalConnectorsConnectionQuota) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsConnectionQuota
func (r *ExternalConnectorsConnectionQuotaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsDisplayTemplateRequestBuilder is request builder for ExternalConnectorsDisplayTemplate
type ExternalConnectorsDisplayTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsDisplayTemplateRequest
func (b *ExternalConnectorsDisplayTemplateRequestBuilder) Request() *ExternalConnectorsDisplayTemplateRequest {
	return &ExternalConnectorsDisplayTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsDisplayTemplateRequest is request for ExternalConnectorsDisplayTemplate
type ExternalConnectorsDisplayTemplateRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsDisplayTemplate
func (r *ExternalConnectorsDisplayTemplateRequest) Get(ctx context.Context) (resObj *ExternalConnectorsDisplayTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsDisplayTemplate
func (r *ExternalConnectorsDisplayTemplateRequest) Update(ctx context.Context, reqObj *ExternalConnectorsDisplayTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsDisplayTemplate
func (r *ExternalConnectorsDisplayTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalActivityRequestBuilder is request builder for ExternalConnectorsExternalActivity
type ExternalConnectorsExternalActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalActivityRequest
func (b *ExternalConnectorsExternalActivityRequestBuilder) Request() *ExternalConnectorsExternalActivityRequest {
	return &ExternalConnectorsExternalActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalActivityRequest is request for ExternalConnectorsExternalActivity
type ExternalConnectorsExternalActivityRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalActivity
func (r *ExternalConnectorsExternalActivityRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalActivity
func (r *ExternalConnectorsExternalActivityRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalActivity
func (r *ExternalConnectorsExternalActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalActivityResultRequestBuilder is request builder for ExternalConnectorsExternalActivityResult
type ExternalConnectorsExternalActivityResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalActivityResultRequest
func (b *ExternalConnectorsExternalActivityResultRequestBuilder) Request() *ExternalConnectorsExternalActivityResultRequest {
	return &ExternalConnectorsExternalActivityResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalActivityResultRequest is request for ExternalConnectorsExternalActivityResult
type ExternalConnectorsExternalActivityResultRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalActivityResult
func (r *ExternalConnectorsExternalActivityResultRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalActivityResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalActivityResult
func (r *ExternalConnectorsExternalActivityResultRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalActivityResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalActivityResult
func (r *ExternalConnectorsExternalActivityResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalGroupRequestBuilder is request builder for ExternalConnectorsExternalGroup
type ExternalConnectorsExternalGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalGroupRequest
func (b *ExternalConnectorsExternalGroupRequestBuilder) Request() *ExternalConnectorsExternalGroupRequest {
	return &ExternalConnectorsExternalGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalGroupRequest is request for ExternalConnectorsExternalGroup
type ExternalConnectorsExternalGroupRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalGroup
func (r *ExternalConnectorsExternalGroupRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalGroup
func (r *ExternalConnectorsExternalGroupRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalGroup
func (r *ExternalConnectorsExternalGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalItemRequestBuilder is request builder for ExternalConnectorsExternalItem
type ExternalConnectorsExternalItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalItemRequest
func (b *ExternalConnectorsExternalItemRequestBuilder) Request() *ExternalConnectorsExternalItemRequest {
	return &ExternalConnectorsExternalItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalItemRequest is request for ExternalConnectorsExternalItem
type ExternalConnectorsExternalItemRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalItem
func (r *ExternalConnectorsExternalItemRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalItem
func (r *ExternalConnectorsExternalItemRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalItem
func (r *ExternalConnectorsExternalItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsExternalItemContentRequestBuilder is request builder for ExternalConnectorsExternalItemContent
type ExternalConnectorsExternalItemContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsExternalItemContentRequest
func (b *ExternalConnectorsExternalItemContentRequestBuilder) Request() *ExternalConnectorsExternalItemContentRequest {
	return &ExternalConnectorsExternalItemContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsExternalItemContentRequest is request for ExternalConnectorsExternalItemContent
type ExternalConnectorsExternalItemContentRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsExternalItemContent
func (r *ExternalConnectorsExternalItemContentRequest) Get(ctx context.Context) (resObj *ExternalConnectorsExternalItemContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsExternalItemContent
func (r *ExternalConnectorsExternalItemContentRequest) Update(ctx context.Context, reqObj *ExternalConnectorsExternalItemContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsExternalItemContent
func (r *ExternalConnectorsExternalItemContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsIdentityRequestBuilder is request builder for ExternalConnectorsIdentity
type ExternalConnectorsIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsIdentityRequest
func (b *ExternalConnectorsIdentityRequestBuilder) Request() *ExternalConnectorsIdentityRequest {
	return &ExternalConnectorsIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsIdentityRequest is request for ExternalConnectorsIdentity
type ExternalConnectorsIdentityRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsIdentity
func (r *ExternalConnectorsIdentityRequest) Get(ctx context.Context) (resObj *ExternalConnectorsIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsIdentity
func (r *ExternalConnectorsIdentityRequest) Update(ctx context.Context, reqObj *ExternalConnectorsIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsIdentity
func (r *ExternalConnectorsIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsItemIDResolverRequestBuilder is request builder for ExternalConnectorsItemIDResolver
type ExternalConnectorsItemIDResolverRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsItemIDResolverRequest
func (b *ExternalConnectorsItemIDResolverRequestBuilder) Request() *ExternalConnectorsItemIDResolverRequest {
	return &ExternalConnectorsItemIDResolverRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsItemIDResolverRequest is request for ExternalConnectorsItemIDResolver
type ExternalConnectorsItemIDResolverRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsItemIDResolver
func (r *ExternalConnectorsItemIDResolverRequest) Get(ctx context.Context) (resObj *ExternalConnectorsItemIDResolver, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsItemIDResolver
func (r *ExternalConnectorsItemIDResolverRequest) Update(ctx context.Context, reqObj *ExternalConnectorsItemIDResolver) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsItemIDResolver
func (r *ExternalConnectorsItemIDResolverRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsPropertiesRequestBuilder is request builder for ExternalConnectorsProperties
type ExternalConnectorsPropertiesRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsPropertiesRequest
func (b *ExternalConnectorsPropertiesRequestBuilder) Request() *ExternalConnectorsPropertiesRequest {
	return &ExternalConnectorsPropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsPropertiesRequest is request for ExternalConnectorsProperties
type ExternalConnectorsPropertiesRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsProperties
func (r *ExternalConnectorsPropertiesRequest) Get(ctx context.Context) (resObj *ExternalConnectorsProperties, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsProperties
func (r *ExternalConnectorsPropertiesRequest) Update(ctx context.Context, reqObj *ExternalConnectorsProperties) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsProperties
func (r *ExternalConnectorsPropertiesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsPropertyRequestBuilder is request builder for ExternalConnectorsProperty
type ExternalConnectorsPropertyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsPropertyRequest
func (b *ExternalConnectorsPropertyRequestBuilder) Request() *ExternalConnectorsPropertyRequest {
	return &ExternalConnectorsPropertyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsPropertyRequest is request for ExternalConnectorsProperty
type ExternalConnectorsPropertyRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsProperty
func (r *ExternalConnectorsPropertyRequest) Get(ctx context.Context) (resObj *ExternalConnectorsProperty, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsProperty
func (r *ExternalConnectorsPropertyRequest) Update(ctx context.Context, reqObj *ExternalConnectorsProperty) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsProperty
func (r *ExternalConnectorsPropertyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsPropertyRuleRequestBuilder is request builder for ExternalConnectorsPropertyRule
type ExternalConnectorsPropertyRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsPropertyRuleRequest
func (b *ExternalConnectorsPropertyRuleRequestBuilder) Request() *ExternalConnectorsPropertyRuleRequest {
	return &ExternalConnectorsPropertyRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsPropertyRuleRequest is request for ExternalConnectorsPropertyRule
type ExternalConnectorsPropertyRuleRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsPropertyRule
func (r *ExternalConnectorsPropertyRuleRequest) Get(ctx context.Context) (resObj *ExternalConnectorsPropertyRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsPropertyRule
func (r *ExternalConnectorsPropertyRuleRequest) Update(ctx context.Context, reqObj *ExternalConnectorsPropertyRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsPropertyRule
func (r *ExternalConnectorsPropertyRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsRankingHintRequestBuilder is request builder for ExternalConnectorsRankingHint
type ExternalConnectorsRankingHintRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsRankingHintRequest
func (b *ExternalConnectorsRankingHintRequestBuilder) Request() *ExternalConnectorsRankingHintRequest {
	return &ExternalConnectorsRankingHintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsRankingHintRequest is request for ExternalConnectorsRankingHint
type ExternalConnectorsRankingHintRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsRankingHint
func (r *ExternalConnectorsRankingHintRequest) Get(ctx context.Context) (resObj *ExternalConnectorsRankingHint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsRankingHint
func (r *ExternalConnectorsRankingHintRequest) Update(ctx context.Context, reqObj *ExternalConnectorsRankingHint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsRankingHint
func (r *ExternalConnectorsRankingHintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsSchemaRequestBuilder is request builder for ExternalConnectorsSchema
type ExternalConnectorsSchemaRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsSchemaRequest
func (b *ExternalConnectorsSchemaRequestBuilder) Request() *ExternalConnectorsSchemaRequest {
	return &ExternalConnectorsSchemaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsSchemaRequest is request for ExternalConnectorsSchema
type ExternalConnectorsSchemaRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsSchema
func (r *ExternalConnectorsSchemaRequest) Get(ctx context.Context) (resObj *ExternalConnectorsSchema, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsSchema
func (r *ExternalConnectorsSchemaRequest) Update(ctx context.Context, reqObj *ExternalConnectorsSchema) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsSchema
func (r *ExternalConnectorsSchemaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsSearchSettingsRequestBuilder is request builder for ExternalConnectorsSearchSettings
type ExternalConnectorsSearchSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsSearchSettingsRequest
func (b *ExternalConnectorsSearchSettingsRequestBuilder) Request() *ExternalConnectorsSearchSettingsRequest {
	return &ExternalConnectorsSearchSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsSearchSettingsRequest is request for ExternalConnectorsSearchSettings
type ExternalConnectorsSearchSettingsRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsSearchSettings
func (r *ExternalConnectorsSearchSettingsRequest) Get(ctx context.Context) (resObj *ExternalConnectorsSearchSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsSearchSettings
func (r *ExternalConnectorsSearchSettingsRequest) Update(ctx context.Context, reqObj *ExternalConnectorsSearchSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsSearchSettings
func (r *ExternalConnectorsSearchSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsURLMatchInfoRequestBuilder is request builder for ExternalConnectorsURLMatchInfo
type ExternalConnectorsURLMatchInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsURLMatchInfoRequest
func (b *ExternalConnectorsURLMatchInfoRequestBuilder) Request() *ExternalConnectorsURLMatchInfoRequest {
	return &ExternalConnectorsURLMatchInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsURLMatchInfoRequest is request for ExternalConnectorsURLMatchInfo
type ExternalConnectorsURLMatchInfoRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsURLMatchInfo
func (r *ExternalConnectorsURLMatchInfoRequest) Get(ctx context.Context) (resObj *ExternalConnectorsURLMatchInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsURLMatchInfo
func (r *ExternalConnectorsURLMatchInfoRequest) Update(ctx context.Context, reqObj *ExternalConnectorsURLMatchInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsURLMatchInfo
func (r *ExternalConnectorsURLMatchInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ExternalConnectorsURLToItemResolverBaseRequestBuilder is request builder for ExternalConnectorsURLToItemResolverBase
type ExternalConnectorsURLToItemResolverBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns ExternalConnectorsURLToItemResolverBaseRequest
func (b *ExternalConnectorsURLToItemResolverBaseRequestBuilder) Request() *ExternalConnectorsURLToItemResolverBaseRequest {
	return &ExternalConnectorsURLToItemResolverBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ExternalConnectorsURLToItemResolverBaseRequest is request for ExternalConnectorsURLToItemResolverBase
type ExternalConnectorsURLToItemResolverBaseRequest struct{ BaseRequest }

// Get performs GET request for ExternalConnectorsURLToItemResolverBase
func (r *ExternalConnectorsURLToItemResolverBaseRequest) Get(ctx context.Context) (resObj *ExternalConnectorsURLToItemResolverBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ExternalConnectorsURLToItemResolverBase
func (r *ExternalConnectorsURLToItemResolverBaseRequest) Update(ctx context.Context, reqObj *ExternalConnectorsURLToItemResolverBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ExternalConnectorsURLToItemResolverBase
func (r *ExternalConnectorsURLToItemResolverBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
