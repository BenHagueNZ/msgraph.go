// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// GroupRequestBuilder is request builder for Group
type GroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupRequest
func (b *GroupRequestBuilder) Request() *GroupRequest {
	return &GroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupRequest is request for Group
type GroupRequest struct{ BaseRequest }

// Get performs GET request for Group
func (r *GroupRequest) Get(ctx context.Context) (resObj *Group, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Group
func (r *GroupRequest) Update(ctx context.Context, reqObj *Group) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Group
func (r *GroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupAssignmentTargetRequestBuilder is request builder for GroupAssignmentTarget
type GroupAssignmentTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupAssignmentTargetRequest
func (b *GroupAssignmentTargetRequestBuilder) Request() *GroupAssignmentTargetRequest {
	return &GroupAssignmentTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupAssignmentTargetRequest is request for GroupAssignmentTarget
type GroupAssignmentTargetRequest struct{ BaseRequest }

// Get performs GET request for GroupAssignmentTarget
func (r *GroupAssignmentTargetRequest) Get(ctx context.Context) (resObj *GroupAssignmentTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupAssignmentTarget
func (r *GroupAssignmentTargetRequest) Update(ctx context.Context, reqObj *GroupAssignmentTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupAssignmentTarget
func (r *GroupAssignmentTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupFilterRequestBuilder is request builder for GroupFilter
type GroupFilterRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupFilterRequest
func (b *GroupFilterRequestBuilder) Request() *GroupFilterRequest {
	return &GroupFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupFilterRequest is request for GroupFilter
type GroupFilterRequest struct{ BaseRequest }

// Get performs GET request for GroupFilter
func (r *GroupFilterRequest) Get(ctx context.Context) (resObj *GroupFilter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupFilter
func (r *GroupFilterRequest) Update(ctx context.Context, reqObj *GroupFilter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupFilter
func (r *GroupFilterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupLifecyclePolicyRequestBuilder is request builder for GroupLifecyclePolicy
type GroupLifecyclePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupLifecyclePolicyRequest
func (b *GroupLifecyclePolicyRequestBuilder) Request() *GroupLifecyclePolicyRequest {
	return &GroupLifecyclePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupLifecyclePolicyRequest is request for GroupLifecyclePolicy
type GroupLifecyclePolicyRequest struct{ BaseRequest }

// Get performs GET request for GroupLifecyclePolicy
func (r *GroupLifecyclePolicyRequest) Get(ctx context.Context) (resObj *GroupLifecyclePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupLifecyclePolicy
func (r *GroupLifecyclePolicyRequest) Update(ctx context.Context, reqObj *GroupLifecyclePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupLifecyclePolicy
func (r *GroupLifecyclePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupMembersRequestBuilder is request builder for GroupMembers
type GroupMembersRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupMembersRequest
func (b *GroupMembersRequestBuilder) Request() *GroupMembersRequest {
	return &GroupMembersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupMembersRequest is request for GroupMembers
type GroupMembersRequest struct{ BaseRequest }

// Get performs GET request for GroupMembers
func (r *GroupMembersRequest) Get(ctx context.Context) (resObj *GroupMembers, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupMembers
func (r *GroupMembersRequest) Update(ctx context.Context, reqObj *GroupMembers) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupMembers
func (r *GroupMembersRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupMembershipGovernanceCriteriaRequestBuilder is request builder for GroupMembershipGovernanceCriteria
type GroupMembershipGovernanceCriteriaRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupMembershipGovernanceCriteriaRequest
func (b *GroupMembershipGovernanceCriteriaRequestBuilder) Request() *GroupMembershipGovernanceCriteriaRequest {
	return &GroupMembershipGovernanceCriteriaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupMembershipGovernanceCriteriaRequest is request for GroupMembershipGovernanceCriteria
type GroupMembershipGovernanceCriteriaRequest struct{ BaseRequest }

// Get performs GET request for GroupMembershipGovernanceCriteria
func (r *GroupMembershipGovernanceCriteriaRequest) Get(ctx context.Context) (resObj *GroupMembershipGovernanceCriteria, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupMembershipGovernanceCriteria
func (r *GroupMembershipGovernanceCriteriaRequest) Update(ctx context.Context, reqObj *GroupMembershipGovernanceCriteria) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupMembershipGovernanceCriteria
func (r *GroupMembershipGovernanceCriteriaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPeerOutlierRecommendationInsightSettingsRequestBuilder is request builder for GroupPeerOutlierRecommendationInsightSettings
type GroupPeerOutlierRecommendationInsightSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPeerOutlierRecommendationInsightSettingsRequest
func (b *GroupPeerOutlierRecommendationInsightSettingsRequestBuilder) Request() *GroupPeerOutlierRecommendationInsightSettingsRequest {
	return &GroupPeerOutlierRecommendationInsightSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPeerOutlierRecommendationInsightSettingsRequest is request for GroupPeerOutlierRecommendationInsightSettings
type GroupPeerOutlierRecommendationInsightSettingsRequest struct{ BaseRequest }

// Get performs GET request for GroupPeerOutlierRecommendationInsightSettings
func (r *GroupPeerOutlierRecommendationInsightSettingsRequest) Get(ctx context.Context) (resObj *GroupPeerOutlierRecommendationInsightSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPeerOutlierRecommendationInsightSettings
func (r *GroupPeerOutlierRecommendationInsightSettingsRequest) Update(ctx context.Context, reqObj *GroupPeerOutlierRecommendationInsightSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPeerOutlierRecommendationInsightSettings
func (r *GroupPeerOutlierRecommendationInsightSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyCategoryRequestBuilder is request builder for GroupPolicyCategory
type GroupPolicyCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyCategoryRequest
func (b *GroupPolicyCategoryRequestBuilder) Request() *GroupPolicyCategoryRequest {
	return &GroupPolicyCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyCategoryRequest is request for GroupPolicyCategory
type GroupPolicyCategoryRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyCategory
func (r *GroupPolicyCategoryRequest) Get(ctx context.Context) (resObj *GroupPolicyCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyCategory
func (r *GroupPolicyCategoryRequest) Update(ctx context.Context, reqObj *GroupPolicyCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyCategory
func (r *GroupPolicyCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyConfigurationRequestBuilder is request builder for GroupPolicyConfiguration
type GroupPolicyConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyConfigurationRequest
func (b *GroupPolicyConfigurationRequestBuilder) Request() *GroupPolicyConfigurationRequest {
	return &GroupPolicyConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyConfigurationRequest is request for GroupPolicyConfiguration
type GroupPolicyConfigurationRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyConfiguration
func (r *GroupPolicyConfigurationRequest) Get(ctx context.Context) (resObj *GroupPolicyConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyConfiguration
func (r *GroupPolicyConfigurationRequest) Update(ctx context.Context, reqObj *GroupPolicyConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyConfiguration
func (r *GroupPolicyConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyConfigurationAssignmentRequestBuilder is request builder for GroupPolicyConfigurationAssignment
type GroupPolicyConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyConfigurationAssignmentRequest
func (b *GroupPolicyConfigurationAssignmentRequestBuilder) Request() *GroupPolicyConfigurationAssignmentRequest {
	return &GroupPolicyConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyConfigurationAssignmentRequest is request for GroupPolicyConfigurationAssignment
type GroupPolicyConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyConfigurationAssignment
func (r *GroupPolicyConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *GroupPolicyConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyConfigurationAssignment
func (r *GroupPolicyConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *GroupPolicyConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyConfigurationAssignment
func (r *GroupPolicyConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyDefinitionRequestBuilder is request builder for GroupPolicyDefinition
type GroupPolicyDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyDefinitionRequest
func (b *GroupPolicyDefinitionRequestBuilder) Request() *GroupPolicyDefinitionRequest {
	return &GroupPolicyDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyDefinitionRequest is request for GroupPolicyDefinition
type GroupPolicyDefinitionRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyDefinition
func (r *GroupPolicyDefinitionRequest) Get(ctx context.Context) (resObj *GroupPolicyDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyDefinition
func (r *GroupPolicyDefinitionRequest) Update(ctx context.Context, reqObj *GroupPolicyDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyDefinition
func (r *GroupPolicyDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyDefinitionFileRequestBuilder is request builder for GroupPolicyDefinitionFile
type GroupPolicyDefinitionFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyDefinitionFileRequest
func (b *GroupPolicyDefinitionFileRequestBuilder) Request() *GroupPolicyDefinitionFileRequest {
	return &GroupPolicyDefinitionFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyDefinitionFileRequest is request for GroupPolicyDefinitionFile
type GroupPolicyDefinitionFileRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyDefinitionFile
func (r *GroupPolicyDefinitionFileRequest) Get(ctx context.Context) (resObj *GroupPolicyDefinitionFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyDefinitionFile
func (r *GroupPolicyDefinitionFileRequest) Update(ctx context.Context, reqObj *GroupPolicyDefinitionFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyDefinitionFile
func (r *GroupPolicyDefinitionFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyDefinitionValueRequestBuilder is request builder for GroupPolicyDefinitionValue
type GroupPolicyDefinitionValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyDefinitionValueRequest
func (b *GroupPolicyDefinitionValueRequestBuilder) Request() *GroupPolicyDefinitionValueRequest {
	return &GroupPolicyDefinitionValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyDefinitionValueRequest is request for GroupPolicyDefinitionValue
type GroupPolicyDefinitionValueRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyDefinitionValue
func (r *GroupPolicyDefinitionValueRequest) Get(ctx context.Context) (resObj *GroupPolicyDefinitionValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyDefinitionValue
func (r *GroupPolicyDefinitionValueRequest) Update(ctx context.Context, reqObj *GroupPolicyDefinitionValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyDefinitionValue
func (r *GroupPolicyDefinitionValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyMigrationReportRequestBuilder is request builder for GroupPolicyMigrationReport
type GroupPolicyMigrationReportRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyMigrationReportRequest
func (b *GroupPolicyMigrationReportRequestBuilder) Request() *GroupPolicyMigrationReportRequest {
	return &GroupPolicyMigrationReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyMigrationReportRequest is request for GroupPolicyMigrationReport
type GroupPolicyMigrationReportRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Get(ctx context.Context) (resObj *GroupPolicyMigrationReport, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Update(ctx context.Context, reqObj *GroupPolicyMigrationReport) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyObjectFileRequestBuilder is request builder for GroupPolicyObjectFile
type GroupPolicyObjectFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyObjectFileRequest
func (b *GroupPolicyObjectFileRequestBuilder) Request() *GroupPolicyObjectFileRequest {
	return &GroupPolicyObjectFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyObjectFileRequest is request for GroupPolicyObjectFile
type GroupPolicyObjectFileRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyObjectFile
func (r *GroupPolicyObjectFileRequest) Get(ctx context.Context) (resObj *GroupPolicyObjectFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyObjectFile
func (r *GroupPolicyObjectFileRequest) Update(ctx context.Context, reqObj *GroupPolicyObjectFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyObjectFile
func (r *GroupPolicyObjectFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyOperationRequestBuilder is request builder for GroupPolicyOperation
type GroupPolicyOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyOperationRequest
func (b *GroupPolicyOperationRequestBuilder) Request() *GroupPolicyOperationRequest {
	return &GroupPolicyOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyOperationRequest is request for GroupPolicyOperation
type GroupPolicyOperationRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyOperation
func (r *GroupPolicyOperationRequest) Get(ctx context.Context) (resObj *GroupPolicyOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyOperation
func (r *GroupPolicyOperationRequest) Update(ctx context.Context, reqObj *GroupPolicyOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyOperation
func (r *GroupPolicyOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationRequestBuilder is request builder for GroupPolicyPresentation
type GroupPolicyPresentationRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationRequest
func (b *GroupPolicyPresentationRequestBuilder) Request() *GroupPolicyPresentationRequest {
	return &GroupPolicyPresentationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationRequest is request for GroupPolicyPresentation
type GroupPolicyPresentationRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentation
func (r *GroupPolicyPresentationRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentation
func (r *GroupPolicyPresentationRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentation
func (r *GroupPolicyPresentationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationCheckBoxRequestBuilder is request builder for GroupPolicyPresentationCheckBox
type GroupPolicyPresentationCheckBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationCheckBoxRequest
func (b *GroupPolicyPresentationCheckBoxRequestBuilder) Request() *GroupPolicyPresentationCheckBoxRequest {
	return &GroupPolicyPresentationCheckBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationCheckBoxRequest is request for GroupPolicyPresentationCheckBox
type GroupPolicyPresentationCheckBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationCheckBox
func (r *GroupPolicyPresentationCheckBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationCheckBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationCheckBox
func (r *GroupPolicyPresentationCheckBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationCheckBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationCheckBox
func (r *GroupPolicyPresentationCheckBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationComboBoxRequestBuilder is request builder for GroupPolicyPresentationComboBox
type GroupPolicyPresentationComboBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationComboBoxRequest
func (b *GroupPolicyPresentationComboBoxRequestBuilder) Request() *GroupPolicyPresentationComboBoxRequest {
	return &GroupPolicyPresentationComboBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationComboBoxRequest is request for GroupPolicyPresentationComboBox
type GroupPolicyPresentationComboBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationComboBox
func (r *GroupPolicyPresentationComboBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationComboBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationComboBox
func (r *GroupPolicyPresentationComboBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationComboBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationComboBox
func (r *GroupPolicyPresentationComboBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationDecimalTextBoxRequestBuilder is request builder for GroupPolicyPresentationDecimalTextBox
type GroupPolicyPresentationDecimalTextBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationDecimalTextBoxRequest
func (b *GroupPolicyPresentationDecimalTextBoxRequestBuilder) Request() *GroupPolicyPresentationDecimalTextBoxRequest {
	return &GroupPolicyPresentationDecimalTextBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationDecimalTextBoxRequest is request for GroupPolicyPresentationDecimalTextBox
type GroupPolicyPresentationDecimalTextBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationDecimalTextBox
func (r *GroupPolicyPresentationDecimalTextBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationDecimalTextBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationDecimalTextBox
func (r *GroupPolicyPresentationDecimalTextBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationDecimalTextBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationDecimalTextBox
func (r *GroupPolicyPresentationDecimalTextBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationDropdownListRequestBuilder is request builder for GroupPolicyPresentationDropdownList
type GroupPolicyPresentationDropdownListRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationDropdownListRequest
func (b *GroupPolicyPresentationDropdownListRequestBuilder) Request() *GroupPolicyPresentationDropdownListRequest {
	return &GroupPolicyPresentationDropdownListRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationDropdownListRequest is request for GroupPolicyPresentationDropdownList
type GroupPolicyPresentationDropdownListRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationDropdownList
func (r *GroupPolicyPresentationDropdownListRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationDropdownList, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationDropdownList
func (r *GroupPolicyPresentationDropdownListRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationDropdownList) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationDropdownList
func (r *GroupPolicyPresentationDropdownListRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationDropdownListItemRequestBuilder is request builder for GroupPolicyPresentationDropdownListItem
type GroupPolicyPresentationDropdownListItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationDropdownListItemRequest
func (b *GroupPolicyPresentationDropdownListItemRequestBuilder) Request() *GroupPolicyPresentationDropdownListItemRequest {
	return &GroupPolicyPresentationDropdownListItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationDropdownListItemRequest is request for GroupPolicyPresentationDropdownListItem
type GroupPolicyPresentationDropdownListItemRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationDropdownListItem
func (r *GroupPolicyPresentationDropdownListItemRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationDropdownListItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationDropdownListItem
func (r *GroupPolicyPresentationDropdownListItemRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationDropdownListItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationDropdownListItem
func (r *GroupPolicyPresentationDropdownListItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationListBoxRequestBuilder is request builder for GroupPolicyPresentationListBox
type GroupPolicyPresentationListBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationListBoxRequest
func (b *GroupPolicyPresentationListBoxRequestBuilder) Request() *GroupPolicyPresentationListBoxRequest {
	return &GroupPolicyPresentationListBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationListBoxRequest is request for GroupPolicyPresentationListBox
type GroupPolicyPresentationListBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationListBox
func (r *GroupPolicyPresentationListBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationListBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationListBox
func (r *GroupPolicyPresentationListBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationListBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationListBox
func (r *GroupPolicyPresentationListBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationLongDecimalTextBoxRequestBuilder is request builder for GroupPolicyPresentationLongDecimalTextBox
type GroupPolicyPresentationLongDecimalTextBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationLongDecimalTextBoxRequest
func (b *GroupPolicyPresentationLongDecimalTextBoxRequestBuilder) Request() *GroupPolicyPresentationLongDecimalTextBoxRequest {
	return &GroupPolicyPresentationLongDecimalTextBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationLongDecimalTextBoxRequest is request for GroupPolicyPresentationLongDecimalTextBox
type GroupPolicyPresentationLongDecimalTextBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationLongDecimalTextBox
func (r *GroupPolicyPresentationLongDecimalTextBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationLongDecimalTextBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationLongDecimalTextBox
func (r *GroupPolicyPresentationLongDecimalTextBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationLongDecimalTextBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationLongDecimalTextBox
func (r *GroupPolicyPresentationLongDecimalTextBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationMultiTextBoxRequestBuilder is request builder for GroupPolicyPresentationMultiTextBox
type GroupPolicyPresentationMultiTextBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationMultiTextBoxRequest
func (b *GroupPolicyPresentationMultiTextBoxRequestBuilder) Request() *GroupPolicyPresentationMultiTextBoxRequest {
	return &GroupPolicyPresentationMultiTextBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationMultiTextBoxRequest is request for GroupPolicyPresentationMultiTextBox
type GroupPolicyPresentationMultiTextBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationMultiTextBox
func (r *GroupPolicyPresentationMultiTextBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationMultiTextBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationMultiTextBox
func (r *GroupPolicyPresentationMultiTextBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationMultiTextBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationMultiTextBox
func (r *GroupPolicyPresentationMultiTextBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationTextRequestBuilder is request builder for GroupPolicyPresentationText
type GroupPolicyPresentationTextRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationTextRequest
func (b *GroupPolicyPresentationTextRequestBuilder) Request() *GroupPolicyPresentationTextRequest {
	return &GroupPolicyPresentationTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationTextRequest is request for GroupPolicyPresentationText
type GroupPolicyPresentationTextRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationText
func (r *GroupPolicyPresentationTextRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationText, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationText
func (r *GroupPolicyPresentationTextRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationText) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationText
func (r *GroupPolicyPresentationTextRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationTextBoxRequestBuilder is request builder for GroupPolicyPresentationTextBox
type GroupPolicyPresentationTextBoxRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationTextBoxRequest
func (b *GroupPolicyPresentationTextBoxRequestBuilder) Request() *GroupPolicyPresentationTextBoxRequest {
	return &GroupPolicyPresentationTextBoxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationTextBoxRequest is request for GroupPolicyPresentationTextBox
type GroupPolicyPresentationTextBoxRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationTextBox
func (r *GroupPolicyPresentationTextBoxRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationTextBox, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationTextBox
func (r *GroupPolicyPresentationTextBoxRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationTextBox) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationTextBox
func (r *GroupPolicyPresentationTextBoxRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueRequestBuilder is request builder for GroupPolicyPresentationValue
type GroupPolicyPresentationValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueRequest
func (b *GroupPolicyPresentationValueRequestBuilder) Request() *GroupPolicyPresentationValueRequest {
	return &GroupPolicyPresentationValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueRequest is request for GroupPolicyPresentationValue
type GroupPolicyPresentationValueRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValue
func (r *GroupPolicyPresentationValueRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValue
func (r *GroupPolicyPresentationValueRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValue
func (r *GroupPolicyPresentationValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueBooleanRequestBuilder is request builder for GroupPolicyPresentationValueBoolean
type GroupPolicyPresentationValueBooleanRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueBooleanRequest
func (b *GroupPolicyPresentationValueBooleanRequestBuilder) Request() *GroupPolicyPresentationValueBooleanRequest {
	return &GroupPolicyPresentationValueBooleanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueBooleanRequest is request for GroupPolicyPresentationValueBoolean
type GroupPolicyPresentationValueBooleanRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueBoolean
func (r *GroupPolicyPresentationValueBooleanRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueBoolean, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueBoolean
func (r *GroupPolicyPresentationValueBooleanRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueBoolean) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueBoolean
func (r *GroupPolicyPresentationValueBooleanRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueDecimalRequestBuilder is request builder for GroupPolicyPresentationValueDecimal
type GroupPolicyPresentationValueDecimalRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueDecimalRequest
func (b *GroupPolicyPresentationValueDecimalRequestBuilder) Request() *GroupPolicyPresentationValueDecimalRequest {
	return &GroupPolicyPresentationValueDecimalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueDecimalRequest is request for GroupPolicyPresentationValueDecimal
type GroupPolicyPresentationValueDecimalRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueDecimal
func (r *GroupPolicyPresentationValueDecimalRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueDecimal, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueDecimal
func (r *GroupPolicyPresentationValueDecimalRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueDecimal) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueDecimal
func (r *GroupPolicyPresentationValueDecimalRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueListRequestBuilder is request builder for GroupPolicyPresentationValueList
type GroupPolicyPresentationValueListRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueListRequest
func (b *GroupPolicyPresentationValueListRequestBuilder) Request() *GroupPolicyPresentationValueListRequest {
	return &GroupPolicyPresentationValueListRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueListRequest is request for GroupPolicyPresentationValueList
type GroupPolicyPresentationValueListRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueList
func (r *GroupPolicyPresentationValueListRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueList, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueList
func (r *GroupPolicyPresentationValueListRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueList) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueList
func (r *GroupPolicyPresentationValueListRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueLongDecimalRequestBuilder is request builder for GroupPolicyPresentationValueLongDecimal
type GroupPolicyPresentationValueLongDecimalRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueLongDecimalRequest
func (b *GroupPolicyPresentationValueLongDecimalRequestBuilder) Request() *GroupPolicyPresentationValueLongDecimalRequest {
	return &GroupPolicyPresentationValueLongDecimalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueLongDecimalRequest is request for GroupPolicyPresentationValueLongDecimal
type GroupPolicyPresentationValueLongDecimalRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueLongDecimal
func (r *GroupPolicyPresentationValueLongDecimalRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueLongDecimal, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueLongDecimal
func (r *GroupPolicyPresentationValueLongDecimalRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueLongDecimal) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueLongDecimal
func (r *GroupPolicyPresentationValueLongDecimalRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueMultiTextRequestBuilder is request builder for GroupPolicyPresentationValueMultiText
type GroupPolicyPresentationValueMultiTextRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueMultiTextRequest
func (b *GroupPolicyPresentationValueMultiTextRequestBuilder) Request() *GroupPolicyPresentationValueMultiTextRequest {
	return &GroupPolicyPresentationValueMultiTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueMultiTextRequest is request for GroupPolicyPresentationValueMultiText
type GroupPolicyPresentationValueMultiTextRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueMultiText
func (r *GroupPolicyPresentationValueMultiTextRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueMultiText, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueMultiText
func (r *GroupPolicyPresentationValueMultiTextRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueMultiText) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueMultiText
func (r *GroupPolicyPresentationValueMultiTextRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyPresentationValueTextRequestBuilder is request builder for GroupPolicyPresentationValueText
type GroupPolicyPresentationValueTextRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyPresentationValueTextRequest
func (b *GroupPolicyPresentationValueTextRequestBuilder) Request() *GroupPolicyPresentationValueTextRequest {
	return &GroupPolicyPresentationValueTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyPresentationValueTextRequest is request for GroupPolicyPresentationValueText
type GroupPolicyPresentationValueTextRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyPresentationValueText
func (r *GroupPolicyPresentationValueTextRequest) Get(ctx context.Context) (resObj *GroupPolicyPresentationValueText, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyPresentationValueText
func (r *GroupPolicyPresentationValueTextRequest) Update(ctx context.Context, reqObj *GroupPolicyPresentationValueText) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyPresentationValueText
func (r *GroupPolicyPresentationValueTextRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicySettingMappingRequestBuilder is request builder for GroupPolicySettingMapping
type GroupPolicySettingMappingRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicySettingMappingRequest
func (b *GroupPolicySettingMappingRequestBuilder) Request() *GroupPolicySettingMappingRequest {
	return &GroupPolicySettingMappingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicySettingMappingRequest is request for GroupPolicySettingMapping
type GroupPolicySettingMappingRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicySettingMapping
func (r *GroupPolicySettingMappingRequest) Get(ctx context.Context) (resObj *GroupPolicySettingMapping, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicySettingMapping
func (r *GroupPolicySettingMappingRequest) Update(ctx context.Context, reqObj *GroupPolicySettingMapping) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicySettingMapping
func (r *GroupPolicySettingMappingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyUploadedDefinitionFileRequestBuilder is request builder for GroupPolicyUploadedDefinitionFile
type GroupPolicyUploadedDefinitionFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyUploadedDefinitionFileRequest
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileRequest {
	return &GroupPolicyUploadedDefinitionFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyUploadedDefinitionFileRequest is request for GroupPolicyUploadedDefinitionFile
type GroupPolicyUploadedDefinitionFileRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyUploadedDefinitionFile
func (r *GroupPolicyUploadedDefinitionFileRequest) Get(ctx context.Context) (resObj *GroupPolicyUploadedDefinitionFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyUploadedDefinitionFile
func (r *GroupPolicyUploadedDefinitionFileRequest) Update(ctx context.Context, reqObj *GroupPolicyUploadedDefinitionFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyUploadedDefinitionFile
func (r *GroupPolicyUploadedDefinitionFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyUploadedLanguageFileRequestBuilder is request builder for GroupPolicyUploadedLanguageFile
type GroupPolicyUploadedLanguageFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyUploadedLanguageFileRequest
func (b *GroupPolicyUploadedLanguageFileRequestBuilder) Request() *GroupPolicyUploadedLanguageFileRequest {
	return &GroupPolicyUploadedLanguageFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyUploadedLanguageFileRequest is request for GroupPolicyUploadedLanguageFile
type GroupPolicyUploadedLanguageFileRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyUploadedLanguageFile
func (r *GroupPolicyUploadedLanguageFileRequest) Get(ctx context.Context) (resObj *GroupPolicyUploadedLanguageFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyUploadedLanguageFile
func (r *GroupPolicyUploadedLanguageFileRequest) Update(ctx context.Context, reqObj *GroupPolicyUploadedLanguageFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyUploadedLanguageFile
func (r *GroupPolicyUploadedLanguageFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicyUploadedPresentationRequestBuilder is request builder for GroupPolicyUploadedPresentation
type GroupPolicyUploadedPresentationRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyUploadedPresentationRequest
func (b *GroupPolicyUploadedPresentationRequestBuilder) Request() *GroupPolicyUploadedPresentationRequest {
	return &GroupPolicyUploadedPresentationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyUploadedPresentationRequest is request for GroupPolicyUploadedPresentation
type GroupPolicyUploadedPresentationRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyUploadedPresentation
func (r *GroupPolicyUploadedPresentationRequest) Get(ctx context.Context) (resObj *GroupPolicyUploadedPresentation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyUploadedPresentation
func (r *GroupPolicyUploadedPresentationRequest) Update(ctx context.Context, reqObj *GroupPolicyUploadedPresentation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyUploadedPresentation
func (r *GroupPolicyUploadedPresentationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPrintUsageSummaryRequestBuilder is request builder for GroupPrintUsageSummary
type GroupPrintUsageSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPrintUsageSummaryRequest
func (b *GroupPrintUsageSummaryRequestBuilder) Request() *GroupPrintUsageSummaryRequest {
	return &GroupPrintUsageSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPrintUsageSummaryRequest is request for GroupPrintUsageSummary
type GroupPrintUsageSummaryRequest struct{ BaseRequest }

// Get performs GET request for GroupPrintUsageSummary
func (r *GroupPrintUsageSummaryRequest) Get(ctx context.Context) (resObj *GroupPrintUsageSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPrintUsageSummary
func (r *GroupPrintUsageSummaryRequest) Update(ctx context.Context, reqObj *GroupPrintUsageSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPrintUsageSummary
func (r *GroupPrintUsageSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupWritebackConfigurationRequestBuilder is request builder for GroupWritebackConfiguration
type GroupWritebackConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupWritebackConfigurationRequest
func (b *GroupWritebackConfigurationRequestBuilder) Request() *GroupWritebackConfigurationRequest {
	return &GroupWritebackConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupWritebackConfigurationRequest is request for GroupWritebackConfiguration
type GroupWritebackConfigurationRequest struct{ BaseRequest }

// Get performs GET request for GroupWritebackConfiguration
func (r *GroupWritebackConfigurationRequest) Get(ctx context.Context) (resObj *GroupWritebackConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupWritebackConfiguration
func (r *GroupWritebackConfigurationRequest) Update(ctx context.Context, reqObj *GroupWritebackConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupWritebackConfiguration
func (r *GroupWritebackConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type GroupCollectionEvaluateDynamicMembershipRequestBuilder struct{ BaseRequestBuilder }

// EvaluateDynamicMembership action undocumentedras
func (b *AccessPackageIncompatibleGroupsCollectionRequestBuilder) EvaluateDynamicMembership(reqObj *GroupCollectionEvaluateDynamicMembershipRequestParameter) *GroupCollectionEvaluateDynamicMembershipRequestBuilder {
	bb := &GroupCollectionEvaluateDynamicMembershipRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateDynamicMembership"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// EvaluateDynamicMembership action undocumentedras
func (b *MobilityManagementPolicyIncludedGroupsCollectionRequestBuilder) EvaluateDynamicMembership(reqObj *GroupCollectionEvaluateDynamicMembershipRequestParameter) *GroupCollectionEvaluateDynamicMembershipRequestBuilder {
	bb := &GroupCollectionEvaluateDynamicMembershipRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateDynamicMembership"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// EvaluateDynamicMembership action undocumentedras
func (b *PrinterShareAllowedGroupsCollectionRequestBuilder) EvaluateDynamicMembership(reqObj *GroupCollectionEvaluateDynamicMembershipRequestParameter) *GroupCollectionEvaluateDynamicMembershipRequestBuilder {
	bb := &GroupCollectionEvaluateDynamicMembershipRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateDynamicMembership"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// EvaluateDynamicMembership action undocumentedras
func (b *UserJoinedGroupsCollectionRequestBuilder) EvaluateDynamicMembership(reqObj *GroupCollectionEvaluateDynamicMembershipRequestParameter) *GroupCollectionEvaluateDynamicMembershipRequestBuilder {
	bb := &GroupCollectionEvaluateDynamicMembershipRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateDynamicMembership"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupCollectionEvaluateDynamicMembershipRequest struct{ BaseRequest }

func (b *GroupCollectionEvaluateDynamicMembershipRequestBuilder) Request() *GroupCollectionEvaluateDynamicMembershipRequest {
	return &GroupCollectionEvaluateDynamicMembershipRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupCollectionEvaluateDynamicMembershipRequest) Post(ctx context.Context) (resObj *EvaluateDynamicMembershipResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupLifecyclePolicyCollectionRenewGroupRequestBuilder struct{ BaseRequestBuilder }

// RenewGroup action undocumentedras
func (b *GroupGroupLifecyclePoliciesCollectionRequestBuilder) RenewGroup(reqObj *GroupLifecyclePolicyCollectionRenewGroupRequestParameter) *GroupLifecyclePolicyCollectionRenewGroupRequestBuilder {
	bb := &GroupLifecyclePolicyCollectionRenewGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RenewGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupLifecyclePolicyCollectionRenewGroupRequest struct{ BaseRequest }

func (b *GroupLifecyclePolicyCollectionRenewGroupRequestBuilder) Request() *GroupLifecyclePolicyCollectionRenewGroupRequest {
	return &GroupLifecyclePolicyCollectionRenewGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupLifecyclePolicyCollectionRenewGroupRequest) Post(ctx context.Context) (resObj *bool, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder struct{ BaseRequestBuilder }

// CreateMigrationReport action undocumentedras
func (b *DeviceManagementGroupPolicyMigrationReportsCollectionRequestBuilder) CreateMigrationReport(reqObj *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestParameter) *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder {
	bb := &GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateMigrationReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyMigrationReportCollectionCreateMigrationReportRequest struct{ BaseRequest }

func (b *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder) Request() *GroupPolicyMigrationReportCollectionCreateMigrationReportRequest {
	return &GroupPolicyMigrationReportCollectionCreateMigrationReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyMigrationReportCollectionCreateMigrationReportRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupAssignLicenseRequestBuilder struct{ BaseRequestBuilder }

// AssignLicense action undocumentedras
func (b *GroupRequestBuilder) AssignLicense(reqObj *GroupAssignLicenseRequestParameter) *GroupAssignLicenseRequestBuilder {
	bb := &GroupAssignLicenseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AssignLicense"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupAssignLicenseRequest struct{ BaseRequest }

func (b *GroupAssignLicenseRequestBuilder) Request() *GroupAssignLicenseRequest {
	return &GroupAssignLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupAssignLicenseRequest) Post(ctx context.Context) (resObj *Group, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupRetryServiceProvisioningRequestBuilder struct{ BaseRequestBuilder }

// RetryServiceProvisioning action undocumentedrav
func (b *GroupRequestBuilder) RetryServiceProvisioning(reqObj *GroupRetryServiceProvisioningRequestParameter) *GroupRetryServiceProvisioningRequestBuilder {
	bb := &GroupRetryServiceProvisioningRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RetryServiceProvisioning"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupRetryServiceProvisioningRequest struct{ BaseRequest }

func (b *GroupRetryServiceProvisioningRequestBuilder) Request() *GroupRetryServiceProvisioningRequest {
	return &GroupRetryServiceProvisioningRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupRetryServiceProvisioningRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupCheckGrantedPermissionsForAppRequestBuilder struct{ BaseRequestBuilder }

// CheckGrantedPermissionsForApp action undocumentedrac
func (b *GroupRequestBuilder) CheckGrantedPermissionsForApp(reqObj *GroupCheckGrantedPermissionsForAppRequestParameter) *GroupCheckGrantedPermissionsForAppRequestBuilder {
	bb := &GroupCheckGrantedPermissionsForAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CheckGrantedPermissionsForApp"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupCheckGrantedPermissionsForAppRequest struct{ BaseRequest }

func (b *GroupCheckGrantedPermissionsForAppRequestBuilder) Request() *GroupCheckGrantedPermissionsForAppRequest {
	return &GroupCheckGrantedPermissionsForAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupCheckGrantedPermissionsForAppRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ResourceSpecificPermissionGrant, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ResourceSpecificPermissionGrant
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ResourceSpecificPermissionGrant
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *GroupCheckGrantedPermissionsForAppRequest) PostN(ctx context.Context, n int) ([]ResourceSpecificPermissionGrant, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *GroupCheckGrantedPermissionsForAppRequest) Post(ctx context.Context) ([]ResourceSpecificPermissionGrant, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type GroupValidatePropertiesRequestBuilder struct{ BaseRequestBuilder }

// ValidateProperties action undocumentedrav
func (b *GroupRequestBuilder) ValidateProperties(reqObj *GroupValidatePropertiesRequestParameter) *GroupValidatePropertiesRequestBuilder {
	bb := &GroupValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupValidatePropertiesRequest struct{ BaseRequest }

func (b *GroupValidatePropertiesRequestBuilder) Request() *GroupValidatePropertiesRequest {
	return &GroupValidatePropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupValidatePropertiesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupAddFavoriteRequestBuilder struct{ BaseRequestBuilder }

// AddFavorite action undocumentedrav
func (b *GroupRequestBuilder) AddFavorite(reqObj *GroupAddFavoriteRequestParameter) *GroupAddFavoriteRequestBuilder {
	bb := &GroupAddFavoriteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AddFavorite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupAddFavoriteRequest struct{ BaseRequest }

func (b *GroupAddFavoriteRequestBuilder) Request() *GroupAddFavoriteRequest {
	return &GroupAddFavoriteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupAddFavoriteRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupRemoveFavoriteRequestBuilder struct{ BaseRequestBuilder }

// RemoveFavorite action undocumentedrav
func (b *GroupRequestBuilder) RemoveFavorite(reqObj *GroupRemoveFavoriteRequestParameter) *GroupRemoveFavoriteRequestBuilder {
	bb := &GroupRemoveFavoriteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoveFavorite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupRemoveFavoriteRequest struct{ BaseRequest }

func (b *GroupRemoveFavoriteRequestBuilder) Request() *GroupRemoveFavoriteRequest {
	return &GroupRemoveFavoriteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupRemoveFavoriteRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupResetUnseenCountRequestBuilder struct{ BaseRequestBuilder }

// ResetUnseenCount action undocumentedrav
func (b *GroupRequestBuilder) ResetUnseenCount(reqObj *GroupResetUnseenCountRequestParameter) *GroupResetUnseenCountRequestBuilder {
	bb := &GroupResetUnseenCountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ResetUnseenCount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupResetUnseenCountRequest struct{ BaseRequest }

func (b *GroupResetUnseenCountRequestBuilder) Request() *GroupResetUnseenCountRequest {
	return &GroupResetUnseenCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupResetUnseenCountRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupSubscribeByMailRequestBuilder struct{ BaseRequestBuilder }

// SubscribeByMail action undocumentedrav
func (b *GroupRequestBuilder) SubscribeByMail(reqObj *GroupSubscribeByMailRequestParameter) *GroupSubscribeByMailRequestBuilder {
	bb := &GroupSubscribeByMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SubscribeByMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupSubscribeByMailRequest struct{ BaseRequest }

func (b *GroupSubscribeByMailRequestBuilder) Request() *GroupSubscribeByMailRequest {
	return &GroupSubscribeByMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupSubscribeByMailRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupUnsubscribeByMailRequestBuilder struct{ BaseRequestBuilder }

// UnsubscribeByMail action undocumentedrav
func (b *GroupRequestBuilder) UnsubscribeByMail(reqObj *GroupUnsubscribeByMailRequestParameter) *GroupUnsubscribeByMailRequestBuilder {
	bb := &GroupUnsubscribeByMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UnsubscribeByMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupUnsubscribeByMailRequest struct{ BaseRequest }

func (b *GroupUnsubscribeByMailRequestBuilder) Request() *GroupUnsubscribeByMailRequest {
	return &GroupUnsubscribeByMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupUnsubscribeByMailRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupEvaluateDynamicMembershipRequestBuilder struct{ BaseRequestBuilder }

// EvaluateDynamicMembership action undocumentedras
func (b *GroupRequestBuilder) EvaluateDynamicMembership(reqObj *GroupEvaluateDynamicMembershipRequestParameter) *GroupEvaluateDynamicMembershipRequestBuilder {
	bb := &GroupEvaluateDynamicMembershipRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EvaluateDynamicMembership"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupEvaluateDynamicMembershipRequest struct{ BaseRequest }

func (b *GroupEvaluateDynamicMembershipRequestBuilder) Request() *GroupEvaluateDynamicMembershipRequest {
	return &GroupEvaluateDynamicMembershipRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupEvaluateDynamicMembershipRequest) Post(ctx context.Context) (resObj *EvaluateDynamicMembershipResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupRenewRequestBuilder struct{ BaseRequestBuilder }

// Renew action undocumentedrav
func (b *GroupRequestBuilder) Renew(reqObj *GroupRenewRequestParameter) *GroupRenewRequestBuilder {
	bb := &GroupRenewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Renew"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupRenewRequest struct{ BaseRequest }

func (b *GroupRenewRequestBuilder) Request() *GroupRenewRequest {
	return &GroupRenewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupRenewRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupLifecyclePolicyAddGroupRequestBuilder struct{ BaseRequestBuilder }

// AddGroup action undocumentedras
func (b *GroupLifecyclePolicyRequestBuilder) AddGroup(reqObj *GroupLifecyclePolicyAddGroupRequestParameter) *GroupLifecyclePolicyAddGroupRequestBuilder {
	bb := &GroupLifecyclePolicyAddGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AddGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupLifecyclePolicyAddGroupRequest struct{ BaseRequest }

func (b *GroupLifecyclePolicyAddGroupRequestBuilder) Request() *GroupLifecyclePolicyAddGroupRequest {
	return &GroupLifecyclePolicyAddGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupLifecyclePolicyAddGroupRequest) Post(ctx context.Context) (resObj *bool, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupLifecyclePolicyRemoveGroupRequestBuilder struct{ BaseRequestBuilder }

// RemoveGroup action undocumentedras
func (b *GroupLifecyclePolicyRequestBuilder) RemoveGroup(reqObj *GroupLifecyclePolicyRemoveGroupRequestParameter) *GroupLifecyclePolicyRemoveGroupRequestBuilder {
	bb := &GroupLifecyclePolicyRemoveGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoveGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupLifecyclePolicyRemoveGroupRequest struct{ BaseRequest }

func (b *GroupLifecyclePolicyRemoveGroupRequestBuilder) Request() *GroupLifecyclePolicyRemoveGroupRequest {
	return &GroupLifecyclePolicyRemoveGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupLifecyclePolicyRemoveGroupRequest) Post(ctx context.Context) (resObj *bool, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupPolicyConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrac
func (b *GroupPolicyConfigurationRequestBuilder) Assign(reqObj *GroupPolicyConfigurationAssignRequestParameter) *GroupPolicyConfigurationAssignRequestBuilder {
	bb := &GroupPolicyConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyConfigurationAssignRequest struct{ BaseRequest }

func (b *GroupPolicyConfigurationAssignRequestBuilder) Request() *GroupPolicyConfigurationAssignRequest {
	return &GroupPolicyConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyConfigurationAssignRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]GroupPolicyConfigurationAssignment, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupPolicyConfigurationAssignment
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []GroupPolicyConfigurationAssignment
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *GroupPolicyConfigurationAssignRequest) PostN(ctx context.Context, n int) ([]GroupPolicyConfigurationAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *GroupPolicyConfigurationAssignRequest) Post(ctx context.Context) ([]GroupPolicyConfigurationAssignment, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type GroupPolicyConfigurationUpdateDefinitionValuesRequestBuilder struct{ BaseRequestBuilder }

// UpdateDefinitionValues action undocumentedrav
func (b *GroupPolicyConfigurationRequestBuilder) UpdateDefinitionValues(reqObj *GroupPolicyConfigurationUpdateDefinitionValuesRequestParameter) *GroupPolicyConfigurationUpdateDefinitionValuesRequestBuilder {
	bb := &GroupPolicyConfigurationUpdateDefinitionValuesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateDefinitionValues"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyConfigurationUpdateDefinitionValuesRequest struct{ BaseRequest }

func (b *GroupPolicyConfigurationUpdateDefinitionValuesRequestBuilder) Request() *GroupPolicyConfigurationUpdateDefinitionValuesRequest {
	return &GroupPolicyConfigurationUpdateDefinitionValuesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyConfigurationUpdateDefinitionValuesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupPolicyMigrationReportUpdateScopeTagsRequestBuilder struct{ BaseRequestBuilder }

// UpdateScopeTags action undocumentedras
func (b *GroupPolicyMigrationReportRequestBuilder) UpdateScopeTags(reqObj *GroupPolicyMigrationReportUpdateScopeTagsRequestParameter) *GroupPolicyMigrationReportUpdateScopeTagsRequestBuilder {
	bb := &GroupPolicyMigrationReportUpdateScopeTagsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateScopeTags"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyMigrationReportUpdateScopeTagsRequest struct{ BaseRequest }

func (b *GroupPolicyMigrationReportUpdateScopeTagsRequestBuilder) Request() *GroupPolicyMigrationReportUpdateScopeTagsRequest {
	return &GroupPolicyMigrationReportUpdateScopeTagsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyMigrationReportUpdateScopeTagsRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type GroupPolicyUploadedDefinitionFileRemoveRequestBuilder struct{ BaseRequestBuilder }

// Remove action undocumentedrav
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) Remove(reqObj *GroupPolicyUploadedDefinitionFileRemoveRequestParameter) *GroupPolicyUploadedDefinitionFileRemoveRequestBuilder {
	bb := &GroupPolicyUploadedDefinitionFileRemoveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Remove"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyUploadedDefinitionFileRemoveRequest struct{ BaseRequest }

func (b *GroupPolicyUploadedDefinitionFileRemoveRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileRemoveRequest {
	return &GroupPolicyUploadedDefinitionFileRemoveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyUploadedDefinitionFileRemoveRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupPolicyUploadedDefinitionFileAddLanguageFilesRequestBuilder struct{ BaseRequestBuilder }

// AddLanguageFiles action undocumentedrav
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) AddLanguageFiles(reqObj *GroupPolicyUploadedDefinitionFileAddLanguageFilesRequestParameter) *GroupPolicyUploadedDefinitionFileAddLanguageFilesRequestBuilder {
	bb := &GroupPolicyUploadedDefinitionFileAddLanguageFilesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AddLanguageFiles"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyUploadedDefinitionFileAddLanguageFilesRequest struct{ BaseRequest }

func (b *GroupPolicyUploadedDefinitionFileAddLanguageFilesRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileAddLanguageFilesRequest {
	return &GroupPolicyUploadedDefinitionFileAddLanguageFilesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyUploadedDefinitionFileAddLanguageFilesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequestBuilder struct{ BaseRequestBuilder }

// RemoveLanguageFiles action undocumentedrav
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) RemoveLanguageFiles(reqObj *GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequestParameter) *GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequestBuilder {
	bb := &GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoveLanguageFiles"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequest struct{ BaseRequest }

func (b *GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequest {
	return &GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyUploadedDefinitionFileRemoveLanguageFilesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequestBuilder struct{ BaseRequestBuilder }

// UpdateLanguageFiles action undocumentedrav
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) UpdateLanguageFiles(reqObj *GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequestParameter) *GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequestBuilder {
	bb := &GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateLanguageFiles"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequest struct{ BaseRequest }

func (b *GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequest {
	return &GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyUploadedDefinitionFileUpdateLanguageFilesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type GroupPolicyUploadedDefinitionFileUploadNewVersionRequestBuilder struct{ BaseRequestBuilder }

// UploadNewVersion action undocumentedrav
func (b *GroupPolicyUploadedDefinitionFileRequestBuilder) UploadNewVersion(reqObj *GroupPolicyUploadedDefinitionFileUploadNewVersionRequestParameter) *GroupPolicyUploadedDefinitionFileUploadNewVersionRequestBuilder {
	bb := &GroupPolicyUploadedDefinitionFileUploadNewVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UploadNewVersion"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type GroupPolicyUploadedDefinitionFileUploadNewVersionRequest struct{ BaseRequest }

func (b *GroupPolicyUploadedDefinitionFileUploadNewVersionRequestBuilder) Request() *GroupPolicyUploadedDefinitionFileUploadNewVersionRequest {
	return &GroupPolicyUploadedDefinitionFileUploadNewVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *GroupPolicyUploadedDefinitionFileUploadNewVersionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
