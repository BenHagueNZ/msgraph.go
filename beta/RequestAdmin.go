// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// AdminRequestBuilder is request builder for Admin
type AdminRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminRequest
func (b *AdminRequestBuilder) Request() *AdminRequest {
	return &AdminRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminRequest is request for Admin
type AdminRequest struct{ BaseRequest }

// Get performs GET request for Admin
func (r *AdminRequest) Get(ctx context.Context) (resObj *Admin, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Admin
func (r *AdminRequest) Update(ctx context.Context, reqObj *Admin) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Admin
func (r *AdminRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AdminConsentRequestBuilder is request builder for AdminConsent
type AdminConsentRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminConsentRequest
func (b *AdminConsentRequestBuilder) Request() *AdminConsentRequest {
	return &AdminConsentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminConsentRequest is request for AdminConsent
type AdminConsentRequest struct{ BaseRequest }

// Get performs GET request for AdminConsent
func (r *AdminConsentRequest) Get(ctx context.Context) (resObj *AdminConsent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AdminConsent
func (r *AdminConsentRequest) Update(ctx context.Context, reqObj *AdminConsent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AdminConsent
func (r *AdminConsentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AdminConsentRequestPolicyRequestBuilder is request builder for AdminConsentRequestPolicy
type AdminConsentRequestPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminConsentRequestPolicyRequest
func (b *AdminConsentRequestPolicyRequestBuilder) Request() *AdminConsentRequestPolicyRequest {
	return &AdminConsentRequestPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminConsentRequestPolicyRequest is request for AdminConsentRequestPolicy
type AdminConsentRequestPolicyRequest struct{ BaseRequest }

// Get performs GET request for AdminConsentRequestPolicy
func (r *AdminConsentRequestPolicyRequest) Get(ctx context.Context) (resObj *AdminConsentRequestPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AdminConsentRequestPolicy
func (r *AdminConsentRequestPolicyRequest) Update(ctx context.Context, reqObj *AdminConsentRequestPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AdminConsentRequestPolicy
func (r *AdminConsentRequestPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AdminReportSettingsRequestBuilder is request builder for AdminReportSettings
type AdminReportSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminReportSettingsRequest
func (b *AdminReportSettingsRequestBuilder) Request() *AdminReportSettingsRequest {
	return &AdminReportSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminReportSettingsRequest is request for AdminReportSettings
type AdminReportSettingsRequest struct{ BaseRequest }

// Get performs GET request for AdminReportSettings
func (r *AdminReportSettingsRequest) Get(ctx context.Context) (resObj *AdminReportSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AdminReportSettings
func (r *AdminReportSettingsRequest) Update(ctx context.Context, reqObj *AdminReportSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AdminReportSettings
func (r *AdminReportSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AdminWindowsRequestBuilder is request builder for AdminWindows
type AdminWindowsRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminWindowsRequest
func (b *AdminWindowsRequestBuilder) Request() *AdminWindowsRequest {
	return &AdminWindowsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminWindowsRequest is request for AdminWindows
type AdminWindowsRequest struct{ BaseRequest }

// Get performs GET request for AdminWindows
func (r *AdminWindowsRequest) Get(ctx context.Context) (resObj *AdminWindows, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AdminWindows
func (r *AdminWindowsRequest) Update(ctx context.Context, reqObj *AdminWindows) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AdminWindows
func (r *AdminWindowsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AdminWindowsUpdatesRequestBuilder is request builder for AdminWindowsUpdates
type AdminWindowsUpdatesRequestBuilder struct{ BaseRequestBuilder }

// Request returns AdminWindowsUpdatesRequest
func (b *AdminWindowsUpdatesRequestBuilder) Request() *AdminWindowsUpdatesRequest {
	return &AdminWindowsUpdatesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AdminWindowsUpdatesRequest is request for AdminWindowsUpdates
type AdminWindowsUpdatesRequest struct{ BaseRequest }

// Get performs GET request for AdminWindowsUpdates
func (r *AdminWindowsUpdatesRequest) Get(ctx context.Context) (resObj *AdminWindowsUpdates, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AdminWindowsUpdates
func (r *AdminWindowsUpdatesRequest) Update(ctx context.Context, reqObj *AdminWindowsUpdates) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AdminWindowsUpdates
func (r *AdminWindowsUpdatesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
