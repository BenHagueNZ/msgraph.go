// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// RelatedContactRequestBuilder is request builder for RelatedContact
type RelatedContactRequestBuilder struct{ BaseRequestBuilder }

// Request returns RelatedContactRequest
func (b *RelatedContactRequestBuilder) Request() *RelatedContactRequest {
	return &RelatedContactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RelatedContactRequest is request for RelatedContact
type RelatedContactRequest struct{ BaseRequest }

// Get performs GET request for RelatedContact
func (r *RelatedContactRequest) Get(ctx context.Context) (resObj *RelatedContact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RelatedContact
func (r *RelatedContactRequest) Update(ctx context.Context, reqObj *RelatedContact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RelatedContact
func (r *RelatedContactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RelatedPersonRequestBuilder is request builder for RelatedPerson
type RelatedPersonRequestBuilder struct{ BaseRequestBuilder }

// Request returns RelatedPersonRequest
func (b *RelatedPersonRequestBuilder) Request() *RelatedPersonRequest {
	return &RelatedPersonRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RelatedPersonRequest is request for RelatedPerson
type RelatedPersonRequest struct{ BaseRequest }

// Get performs GET request for RelatedPerson
func (r *RelatedPersonRequest) Get(ctx context.Context) (resObj *RelatedPerson, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RelatedPerson
func (r *RelatedPersonRequest) Update(ctx context.Context, reqObj *RelatedPerson) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RelatedPerson
func (r *RelatedPersonRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
