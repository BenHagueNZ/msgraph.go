// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// ContentApprovalStatusColumn undocumented
type ContentApprovalStatusColumn struct {
	// Object is the base model of ContentApprovalStatusColumn
	Object

	ODataType string `json:"@odata.type,omitempty"`
}

func NewContentApprovalStatusColumn() (*ContentApprovalStatusColumn, error) {
	newContentApprovalStatusColumn := &ContentApprovalStatusColumn{
		ODataType: "#microsoft.graph.ContentApprovalStatusColumn",
	}
	return newContentApprovalStatusColumn, nil
}

// ContentClassification undocumented
type ContentClassification struct {
	// Object is the base model of ContentClassification
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Confidence undocumented
	Confidence *int `json:"confidence,omitempty"`
	// Matches undocumented
	Matches []MatchLocation `json:"matches,omitempty"`
	// SensitiveTypeID undocumented
	SensitiveTypeID *string `json:"sensitiveTypeId,omitempty"`
	// UniqueCount undocumented
	UniqueCount *int `json:"uniqueCount,omitempty"`
}

func NewContentClassification() (*ContentClassification, error) {
	newContentClassification := &ContentClassification{
		ODataType: "#microsoft.graph.ContentClassification",
	}
	return newContentClassification, nil
}

// ContentInfo undocumented
type ContentInfo struct {
	// Object is the base model of ContentInfo
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Format undocumented
	Format *ContentFormat `json:"format,omitempty"`
	// Identifier undocumented
	Identifier *string `json:"identifier,omitempty"`
	// Metadata undocumented
	Metadata []KeyValuePair `json:"metadata,omitempty"`
	// State undocumented
	State *ContentState `json:"state,omitempty"`
}

func NewContentInfo() (*ContentInfo, error) {
	newContentInfo := &ContentInfo{
		ODataType: "#microsoft.graph.ContentInfo",
	}
	return newContentInfo, nil
}

// ContentMetadata undocumented
type ContentMetadata struct {
	// Object is the base model of ContentMetadata
	Object

	ODataType string `json:"@odata.type,omitempty"`
}

func NewContentMetadata() (*ContentMetadata, error) {
	newContentMetadata := &ContentMetadata{
		ODataType: "#microsoft.graph.ContentMetadata",
	}
	return newContentMetadata, nil
}

// ContentProperties undocumented
type ContentProperties struct {
	// Object is the base model of ContentProperties
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Extensions undocumented
	Extensions []string `json:"extensions,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Metadata undocumented
	Metadata *ContentMetadata `json:"metadata,omitempty"`
}

func NewContentProperties() (*ContentProperties, error) {
	newContentProperties := &ContentProperties{
		ODataType: "#microsoft.graph.ContentProperties",
	}
	return newContentProperties, nil
}

// ContentSharingSession undocumented
type ContentSharingSession struct {
	// Entity is the base model of ContentSharingSession
	Entity

	ODataType string `json:"@odata.type,omitempty"`
}

func NewContentSharingSession() (*ContentSharingSession, error) {
	newContentSharingSession := &ContentSharingSession{
		ODataType: "#microsoft.graph.ContentSharingSession",
	}
	return newContentSharingSession, nil
}

// ContentType undocumented
type ContentType struct {
	// Entity is the base model of ContentType
	Entity

	ODataType string `json:"@odata.type,omitempty"`
	// AssociatedHubsUrls undocumented
	AssociatedHubsUrls []string `json:"associatedHubsUrls,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DocumentSet undocumented
	DocumentSet *DocumentSet `json:"documentSet,omitempty"`
	// DocumentTemplate undocumented
	DocumentTemplate *DocumentSetContent `json:"documentTemplate,omitempty"`
	// Group undocumented
	Group *string `json:"group,omitempty"`
	// Hidden undocumented
	Hidden *bool `json:"hidden,omitempty"`
	// InheritedFrom undocumented
	InheritedFrom *ItemReference `json:"inheritedFrom,omitempty"`
	// IsBuiltIn undocumented
	IsBuiltIn *bool `json:"isBuiltIn,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Order undocumented
	Order *ContentTypeOrder `json:"order,omitempty"`
	// ParentID undocumented
	ParentID *string `json:"parentId,omitempty"`
	// PropagateChanges undocumented
	PropagateChanges *bool `json:"propagateChanges,omitempty"`
	// ReadOnly undocumented
	ReadOnly *bool `json:"readOnly,omitempty"`
	// Sealed undocumented
	Sealed *bool `json:"sealed,omitempty"`
	// Base undocumented
	Base *ContentType `json:"base,omitempty"`
	// BaseTypes undocumented
	BaseTypes []ContentType `json:"baseTypes,omitempty"`
	// ColumnLinks undocumented
	ColumnLinks []ColumnLink `json:"columnLinks,omitempty"`
	// ColumnPositions undocumented
	ColumnPositions []ColumnDefinition `json:"columnPositions,omitempty"`
	// Columns undocumented
	Columns []ColumnDefinition `json:"columns,omitempty"`
}

func NewContentType() (*ContentType, error) {
	newContentType := &ContentType{
		ODataType: "#microsoft.graph.ContentType",
	}
	return newContentType, nil
}

// ContentTypeInfo undocumented
type ContentTypeInfo struct {
	// Object is the base model of ContentTypeInfo
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// ID undocumented
	ID *string `json:"id,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

func NewContentTypeInfo() (*ContentTypeInfo, error) {
	newContentTypeInfo := &ContentTypeInfo{
		ODataType: "#microsoft.graph.ContentTypeInfo",
	}
	return newContentTypeInfo, nil
}

// ContentTypeOrder undocumented
type ContentTypeOrder struct {
	// Object is the base model of ContentTypeOrder
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Default undocumented
	Default *bool `json:"default,omitempty"`
	// Position undocumented
	Position *int `json:"position,omitempty"`
}

func NewContentTypeOrder() (*ContentTypeOrder, error) {
	newContentTypeOrder := &ContentTypeOrder{
		ODataType: "#microsoft.graph.ContentTypeOrder",
	}
	return newContentTypeOrder, nil
}
