// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// BufferDecryptionResultRequestBuilder is request builder for BufferDecryptionResult
type BufferDecryptionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns BufferDecryptionResultRequest
func (b *BufferDecryptionResultRequestBuilder) Request() *BufferDecryptionResultRequest {
	return &BufferDecryptionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// BufferDecryptionResultRequest is request for BufferDecryptionResult
type BufferDecryptionResultRequest struct{ BaseRequest }

// Get performs GET request for BufferDecryptionResult
func (r *BufferDecryptionResultRequest) Get(ctx context.Context) (resObj *BufferDecryptionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for BufferDecryptionResult
func (r *BufferDecryptionResultRequest) Update(ctx context.Context, reqObj *BufferDecryptionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for BufferDecryptionResult
func (r *BufferDecryptionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BufferEncryptionResultRequestBuilder is request builder for BufferEncryptionResult
type BufferEncryptionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns BufferEncryptionResultRequest
func (b *BufferEncryptionResultRequestBuilder) Request() *BufferEncryptionResultRequest {
	return &BufferEncryptionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// BufferEncryptionResultRequest is request for BufferEncryptionResult
type BufferEncryptionResultRequest struct{ BaseRequest }

// Get performs GET request for BufferEncryptionResult
func (r *BufferEncryptionResultRequest) Get(ctx context.Context) (resObj *BufferEncryptionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for BufferEncryptionResult
func (r *BufferEncryptionResultRequest) Update(ctx context.Context, reqObj *BufferEncryptionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for BufferEncryptionResult
func (r *BufferEncryptionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
