// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// SubjectRightsRequestAllMailboxLocationRequestBuilder is request builder for SubjectRightsRequestAllMailboxLocation
type SubjectRightsRequestAllMailboxLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestAllMailboxLocationRequest
func (b *SubjectRightsRequestAllMailboxLocationRequestBuilder) Request() *SubjectRightsRequestAllMailboxLocationRequest {
	return &SubjectRightsRequestAllMailboxLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestAllMailboxLocationRequest is request for SubjectRightsRequestAllMailboxLocation
type SubjectRightsRequestAllMailboxLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestAllMailboxLocation
func (r *SubjectRightsRequestAllMailboxLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestAllMailboxLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestAllMailboxLocation
func (r *SubjectRightsRequestAllMailboxLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestAllMailboxLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestAllMailboxLocation
func (r *SubjectRightsRequestAllMailboxLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestAllSiteLocationRequestBuilder is request builder for SubjectRightsRequestAllSiteLocation
type SubjectRightsRequestAllSiteLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestAllSiteLocationRequest
func (b *SubjectRightsRequestAllSiteLocationRequestBuilder) Request() *SubjectRightsRequestAllSiteLocationRequest {
	return &SubjectRightsRequestAllSiteLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestAllSiteLocationRequest is request for SubjectRightsRequestAllSiteLocation
type SubjectRightsRequestAllSiteLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestAllSiteLocation
func (r *SubjectRightsRequestAllSiteLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestAllSiteLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestAllSiteLocation
func (r *SubjectRightsRequestAllSiteLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestAllSiteLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestAllSiteLocation
func (r *SubjectRightsRequestAllSiteLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestDetailRequestBuilder is request builder for SubjectRightsRequestDetail
type SubjectRightsRequestDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestDetailRequest
func (b *SubjectRightsRequestDetailRequestBuilder) Request() *SubjectRightsRequestDetailRequest {
	return &SubjectRightsRequestDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestDetailRequest is request for SubjectRightsRequestDetail
type SubjectRightsRequestDetailRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestDetail
func (r *SubjectRightsRequestDetailRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestDetail
func (r *SubjectRightsRequestDetailRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestDetail
func (r *SubjectRightsRequestDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestEnumeratedMailboxLocationRequestBuilder is request builder for SubjectRightsRequestEnumeratedMailboxLocation
type SubjectRightsRequestEnumeratedMailboxLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestEnumeratedMailboxLocationRequest
func (b *SubjectRightsRequestEnumeratedMailboxLocationRequestBuilder) Request() *SubjectRightsRequestEnumeratedMailboxLocationRequest {
	return &SubjectRightsRequestEnumeratedMailboxLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestEnumeratedMailboxLocationRequest is request for SubjectRightsRequestEnumeratedMailboxLocation
type SubjectRightsRequestEnumeratedMailboxLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestEnumeratedMailboxLocation
func (r *SubjectRightsRequestEnumeratedMailboxLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestEnumeratedMailboxLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestEnumeratedMailboxLocation
func (r *SubjectRightsRequestEnumeratedMailboxLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestEnumeratedMailboxLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestEnumeratedMailboxLocation
func (r *SubjectRightsRequestEnumeratedMailboxLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestEnumeratedSiteLocationRequestBuilder is request builder for SubjectRightsRequestEnumeratedSiteLocation
type SubjectRightsRequestEnumeratedSiteLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestEnumeratedSiteLocationRequest
func (b *SubjectRightsRequestEnumeratedSiteLocationRequestBuilder) Request() *SubjectRightsRequestEnumeratedSiteLocationRequest {
	return &SubjectRightsRequestEnumeratedSiteLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestEnumeratedSiteLocationRequest is request for SubjectRightsRequestEnumeratedSiteLocation
type SubjectRightsRequestEnumeratedSiteLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestEnumeratedSiteLocation
func (r *SubjectRightsRequestEnumeratedSiteLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestEnumeratedSiteLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestEnumeratedSiteLocation
func (r *SubjectRightsRequestEnumeratedSiteLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestEnumeratedSiteLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestEnumeratedSiteLocation
func (r *SubjectRightsRequestEnumeratedSiteLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestHistoryRequestBuilder is request builder for SubjectRightsRequestHistory
type SubjectRightsRequestHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestHistoryRequest
func (b *SubjectRightsRequestHistoryRequestBuilder) Request() *SubjectRightsRequestHistoryRequest {
	return &SubjectRightsRequestHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestHistoryRequest is request for SubjectRightsRequestHistory
type SubjectRightsRequestHistoryRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestHistory
func (r *SubjectRightsRequestHistoryRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestHistory
func (r *SubjectRightsRequestHistoryRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestHistory
func (r *SubjectRightsRequestHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestMailboxLocationRequestBuilder is request builder for SubjectRightsRequestMailboxLocation
type SubjectRightsRequestMailboxLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestMailboxLocationRequest
func (b *SubjectRightsRequestMailboxLocationRequestBuilder) Request() *SubjectRightsRequestMailboxLocationRequest {
	return &SubjectRightsRequestMailboxLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestMailboxLocationRequest is request for SubjectRightsRequestMailboxLocation
type SubjectRightsRequestMailboxLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestMailboxLocation
func (r *SubjectRightsRequestMailboxLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestMailboxLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestMailboxLocation
func (r *SubjectRightsRequestMailboxLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestMailboxLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestMailboxLocation
func (r *SubjectRightsRequestMailboxLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestObjectRequestBuilder is request builder for SubjectRightsRequestObject
type SubjectRightsRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestObjectRequest
func (b *SubjectRightsRequestObjectRequestBuilder) Request() *SubjectRightsRequestObjectRequest {
	return &SubjectRightsRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestObjectRequest is request for SubjectRightsRequestObject
type SubjectRightsRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestObject
func (r *SubjectRightsRequestObjectRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestObject
func (r *SubjectRightsRequestObjectRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestObject
func (r *SubjectRightsRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestSiteLocationRequestBuilder is request builder for SubjectRightsRequestSiteLocation
type SubjectRightsRequestSiteLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestSiteLocationRequest
func (b *SubjectRightsRequestSiteLocationRequestBuilder) Request() *SubjectRightsRequestSiteLocationRequest {
	return &SubjectRightsRequestSiteLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestSiteLocationRequest is request for SubjectRightsRequestSiteLocation
type SubjectRightsRequestSiteLocationRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestSiteLocation
func (r *SubjectRightsRequestSiteLocationRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestSiteLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestSiteLocation
func (r *SubjectRightsRequestSiteLocationRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestSiteLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestSiteLocation
func (r *SubjectRightsRequestSiteLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectRightsRequestStageDetailRequestBuilder is request builder for SubjectRightsRequestStageDetail
type SubjectRightsRequestStageDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectRightsRequestStageDetailRequest
func (b *SubjectRightsRequestStageDetailRequestBuilder) Request() *SubjectRightsRequestStageDetailRequest {
	return &SubjectRightsRequestStageDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectRightsRequestStageDetailRequest is request for SubjectRightsRequestStageDetail
type SubjectRightsRequestStageDetailRequest struct{ BaseRequest }

// Get performs GET request for SubjectRightsRequestStageDetail
func (r *SubjectRightsRequestStageDetailRequest) Get(ctx context.Context) (resObj *SubjectRightsRequestStageDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectRightsRequestStageDetail
func (r *SubjectRightsRequestStageDetailRequest) Update(ctx context.Context, reqObj *SubjectRightsRequestStageDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectRightsRequestStageDetail
func (r *SubjectRightsRequestStageDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SubjectSetRequestBuilder is request builder for SubjectSet
type SubjectSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubjectSetRequest
func (b *SubjectSetRequestBuilder) Request() *SubjectSetRequest {
	return &SubjectSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubjectSetRequest is request for SubjectSet
type SubjectSetRequest struct{ BaseRequest }

// Get performs GET request for SubjectSet
func (r *SubjectSetRequest) Get(ctx context.Context) (resObj *SubjectSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SubjectSet
func (r *SubjectSetRequest) Update(ctx context.Context, reqObj *SubjectSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SubjectSet
func (r *SubjectSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
