// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IPv4CidrRangeRequestBuilder is request builder for IPv4CidrRange
type IPv4CidrRangeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPv4CidrRangeRequest
func (b *IPv4CidrRangeRequestBuilder) Request() *IPv4CidrRangeRequest {
	return &IPv4CidrRangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPv4CidrRangeRequest is request for IPv4CidrRange
type IPv4CidrRangeRequest struct{ BaseRequest }

// Get performs GET request for IPv4CidrRange
func (r *IPv4CidrRangeRequest) Get(ctx context.Context) (resObj *IPv4CidrRange, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPv4CidrRange
func (r *IPv4CidrRangeRequest) Update(ctx context.Context, reqObj *IPv4CidrRange) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPv4CidrRange
func (r *IPv4CidrRangeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPv4RangeRequestBuilder is request builder for IPv4Range
type IPv4RangeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPv4RangeRequest
func (b *IPv4RangeRequestBuilder) Request() *IPv4RangeRequest {
	return &IPv4RangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPv4RangeRequest is request for IPv4Range
type IPv4RangeRequest struct{ BaseRequest }

// Get performs GET request for IPv4Range
func (r *IPv4RangeRequest) Get(ctx context.Context) (resObj *IPv4Range, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPv4Range
func (r *IPv4RangeRequest) Update(ctx context.Context, reqObj *IPv4Range) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPv4Range
func (r *IPv4RangeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
