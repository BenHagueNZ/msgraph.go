// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// ManagedAllDeviceCertificateStateRequestBuilder is request builder for ManagedAllDeviceCertificateState
type ManagedAllDeviceCertificateStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAllDeviceCertificateStateRequest
func (b *ManagedAllDeviceCertificateStateRequestBuilder) Request() *ManagedAllDeviceCertificateStateRequest {
	return &ManagedAllDeviceCertificateStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAllDeviceCertificateStateRequest is request for ManagedAllDeviceCertificateState
type ManagedAllDeviceCertificateStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Get(ctx context.Context) (resObj *ManagedAllDeviceCertificateState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Update(ctx context.Context, reqObj *ManagedAllDeviceCertificateState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAndroidLobAppRequestBuilder is request builder for ManagedAndroidLobApp
type ManagedAndroidLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAndroidLobAppRequest
func (b *ManagedAndroidLobAppRequestBuilder) Request() *ManagedAndroidLobAppRequest {
	return &ManagedAndroidLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAndroidLobAppRequest is request for ManagedAndroidLobApp
type ManagedAndroidLobAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedAndroidLobApp
func (r *ManagedAndroidLobAppRequest) Get(ctx context.Context) (resObj *ManagedAndroidLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAndroidLobApp
func (r *ManagedAndroidLobAppRequest) Update(ctx context.Context, reqObj *ManagedAndroidLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAndroidLobApp
func (r *ManagedAndroidLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAndroidStoreAppRequestBuilder is request builder for ManagedAndroidStoreApp
type ManagedAndroidStoreAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAndroidStoreAppRequest
func (b *ManagedAndroidStoreAppRequestBuilder) Request() *ManagedAndroidStoreAppRequest {
	return &ManagedAndroidStoreAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAndroidStoreAppRequest is request for ManagedAndroidStoreApp
type ManagedAndroidStoreAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedAndroidStoreApp
func (r *ManagedAndroidStoreAppRequest) Get(ctx context.Context) (resObj *ManagedAndroidStoreApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAndroidStoreApp
func (r *ManagedAndroidStoreAppRequest) Update(ctx context.Context, reqObj *ManagedAndroidStoreApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAndroidStoreApp
func (r *ManagedAndroidStoreAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppRequestBuilder is request builder for ManagedApp
type ManagedAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppRequest
func (b *ManagedAppRequestBuilder) Request() *ManagedAppRequest {
	return &ManagedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppRequest is request for ManagedApp
type ManagedAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedApp
func (r *ManagedAppRequest) Get(ctx context.Context) (resObj *ManagedApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedApp
func (r *ManagedAppRequest) Update(ctx context.Context, reqObj *ManagedApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedApp
func (r *ManagedAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppConfigurationRequestBuilder is request builder for ManagedAppConfiguration
type ManagedAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppConfigurationRequest
func (b *ManagedAppConfigurationRequestBuilder) Request() *ManagedAppConfigurationRequest {
	return &ManagedAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppConfigurationRequest is request for ManagedAppConfiguration
type ManagedAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppConfiguration
func (r *ManagedAppConfigurationRequest) Get(ctx context.Context) (resObj *ManagedAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppConfiguration
func (r *ManagedAppConfigurationRequest) Update(ctx context.Context, reqObj *ManagedAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppConfiguration
func (r *ManagedAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppDiagnosticStatusRequestBuilder is request builder for ManagedAppDiagnosticStatus
type ManagedAppDiagnosticStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppDiagnosticStatusRequest
func (b *ManagedAppDiagnosticStatusRequestBuilder) Request() *ManagedAppDiagnosticStatusRequest {
	return &ManagedAppDiagnosticStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppDiagnosticStatusRequest is request for ManagedAppDiagnosticStatus
type ManagedAppDiagnosticStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppDiagnosticStatus
func (r *ManagedAppDiagnosticStatusRequest) Get(ctx context.Context) (resObj *ManagedAppDiagnosticStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppDiagnosticStatus
func (r *ManagedAppDiagnosticStatusRequest) Update(ctx context.Context, reqObj *ManagedAppDiagnosticStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppDiagnosticStatus
func (r *ManagedAppDiagnosticStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppOperationRequestBuilder is request builder for ManagedAppOperation
type ManagedAppOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppOperationRequest
func (b *ManagedAppOperationRequestBuilder) Request() *ManagedAppOperationRequest {
	return &ManagedAppOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppOperationRequest is request for ManagedAppOperation
type ManagedAppOperationRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Get(ctx context.Context) (resObj *ManagedAppOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Update(ctx context.Context, reqObj *ManagedAppOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppPolicyRequestBuilder is request builder for ManagedAppPolicy
type ManagedAppPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppPolicyRequest
func (b *ManagedAppPolicyRequestBuilder) Request() *ManagedAppPolicyRequest {
	return &ManagedAppPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppPolicyRequest is request for ManagedAppPolicy
type ManagedAppPolicyRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Get(ctx context.Context) (resObj *ManagedAppPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Update(ctx context.Context, reqObj *ManagedAppPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppPolicyDeploymentSummaryRequestBuilder is request builder for ManagedAppPolicyDeploymentSummary
type ManagedAppPolicyDeploymentSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppPolicyDeploymentSummaryRequest
func (b *ManagedAppPolicyDeploymentSummaryRequestBuilder) Request() *ManagedAppPolicyDeploymentSummaryRequest {
	return &ManagedAppPolicyDeploymentSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppPolicyDeploymentSummaryRequest is request for ManagedAppPolicyDeploymentSummary
type ManagedAppPolicyDeploymentSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Get(ctx context.Context) (resObj *ManagedAppPolicyDeploymentSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Update(ctx context.Context, reqObj *ManagedAppPolicyDeploymentSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppPolicyDeploymentSummaryPerAppRequestBuilder is request builder for ManagedAppPolicyDeploymentSummaryPerApp
type ManagedAppPolicyDeploymentSummaryPerAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppPolicyDeploymentSummaryPerAppRequest
func (b *ManagedAppPolicyDeploymentSummaryPerAppRequestBuilder) Request() *ManagedAppPolicyDeploymentSummaryPerAppRequest {
	return &ManagedAppPolicyDeploymentSummaryPerAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppPolicyDeploymentSummaryPerAppRequest is request for ManagedAppPolicyDeploymentSummaryPerApp
type ManagedAppPolicyDeploymentSummaryPerAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppPolicyDeploymentSummaryPerApp
func (r *ManagedAppPolicyDeploymentSummaryPerAppRequest) Get(ctx context.Context) (resObj *ManagedAppPolicyDeploymentSummaryPerApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppPolicyDeploymentSummaryPerApp
func (r *ManagedAppPolicyDeploymentSummaryPerAppRequest) Update(ctx context.Context, reqObj *ManagedAppPolicyDeploymentSummaryPerApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppPolicyDeploymentSummaryPerApp
func (r *ManagedAppPolicyDeploymentSummaryPerAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppProtectionRequestBuilder is request builder for ManagedAppProtection
type ManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppProtectionRequest
func (b *ManagedAppProtectionRequestBuilder) Request() *ManagedAppProtectionRequest {
	return &ManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppProtectionRequest is request for ManagedAppProtection
type ManagedAppProtectionRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Get(ctx context.Context) (resObj *ManagedAppProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Update(ctx context.Context, reqObj *ManagedAppProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppProtectionPolicySetItemRequestBuilder is request builder for ManagedAppProtectionPolicySetItem
type ManagedAppProtectionPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppProtectionPolicySetItemRequest
func (b *ManagedAppProtectionPolicySetItemRequestBuilder) Request() *ManagedAppProtectionPolicySetItemRequest {
	return &ManagedAppProtectionPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppProtectionPolicySetItemRequest is request for ManagedAppProtectionPolicySetItem
type ManagedAppProtectionPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppProtectionPolicySetItem
func (r *ManagedAppProtectionPolicySetItemRequest) Get(ctx context.Context) (resObj *ManagedAppProtectionPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppProtectionPolicySetItem
func (r *ManagedAppProtectionPolicySetItemRequest) Update(ctx context.Context, reqObj *ManagedAppProtectionPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppProtectionPolicySetItem
func (r *ManagedAppProtectionPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppRegistrationRequestBuilder is request builder for ManagedAppRegistration
type ManagedAppRegistrationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppRegistrationRequest
func (b *ManagedAppRegistrationRequestBuilder) Request() *ManagedAppRegistrationRequest {
	return &ManagedAppRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppRegistrationRequest is request for ManagedAppRegistration
type ManagedAppRegistrationRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Get(ctx context.Context) (resObj *ManagedAppRegistration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Update(ctx context.Context, reqObj *ManagedAppRegistration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppStatusRequestBuilder is request builder for ManagedAppStatus
type ManagedAppStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppStatusRequest
func (b *ManagedAppStatusRequestBuilder) Request() *ManagedAppStatusRequest {
	return &ManagedAppStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppStatusRequest is request for ManagedAppStatus
type ManagedAppStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Get(ctx context.Context) (resObj *ManagedAppStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Update(ctx context.Context, reqObj *ManagedAppStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppStatusRawRequestBuilder is request builder for ManagedAppStatusRaw
type ManagedAppStatusRawRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppStatusRawRequest
func (b *ManagedAppStatusRawRequestBuilder) Request() *ManagedAppStatusRawRequest {
	return &ManagedAppStatusRawRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppStatusRawRequest is request for ManagedAppStatusRaw
type ManagedAppStatusRawRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppStatusRaw
func (r *ManagedAppStatusRawRequest) Get(ctx context.Context) (resObj *ManagedAppStatusRaw, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppStatusRaw
func (r *ManagedAppStatusRawRequest) Update(ctx context.Context, reqObj *ManagedAppStatusRaw) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppStatusRaw
func (r *ManagedAppStatusRawRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceRequestBuilder is request builder for ManagedDevice
type ManagedDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceRequest
func (b *ManagedDeviceRequestBuilder) Request() *ManagedDeviceRequest {
	return &ManagedDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceRequest is request for ManagedDevice
type ManagedDeviceRequest struct{ BaseRequest }

// Get performs GET request for ManagedDevice
func (r *ManagedDeviceRequest) Get(ctx context.Context) (resObj *ManagedDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDevice
func (r *ManagedDeviceRequest) Update(ctx context.Context, reqObj *ManagedDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDevice
func (r *ManagedDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceCertificateStateRequestBuilder is request builder for ManagedDeviceCertificateState
type ManagedDeviceCertificateStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceCertificateStateRequest
func (b *ManagedDeviceCertificateStateRequestBuilder) Request() *ManagedDeviceCertificateStateRequest {
	return &ManagedDeviceCertificateStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceCertificateStateRequest is request for ManagedDeviceCertificateState
type ManagedDeviceCertificateStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceCertificateState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceCertificateState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceCleanupSettingsRequestBuilder is request builder for ManagedDeviceCleanupSettings
type ManagedDeviceCleanupSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceCleanupSettingsRequest
func (b *ManagedDeviceCleanupSettingsRequestBuilder) Request() *ManagedDeviceCleanupSettingsRequest {
	return &ManagedDeviceCleanupSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceCleanupSettingsRequest is request for ManagedDeviceCleanupSettings
type ManagedDeviceCleanupSettingsRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceCleanupSettings
func (r *ManagedDeviceCleanupSettingsRequest) Get(ctx context.Context) (resObj *ManagedDeviceCleanupSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceCleanupSettings
func (r *ManagedDeviceCleanupSettingsRequest) Update(ctx context.Context, reqObj *ManagedDeviceCleanupSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceCleanupSettings
func (r *ManagedDeviceCleanupSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceEncryptionStateRequestBuilder is request builder for ManagedDeviceEncryptionState
type ManagedDeviceEncryptionStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceEncryptionStateRequest
func (b *ManagedDeviceEncryptionStateRequestBuilder) Request() *ManagedDeviceEncryptionStateRequest {
	return &ManagedDeviceEncryptionStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceEncryptionStateRequest is request for ManagedDeviceEncryptionState
type ManagedDeviceEncryptionStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceEncryptionState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceEncryptionState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationRequestBuilder is request builder for ManagedDeviceMobileAppConfiguration
type ManagedDeviceMobileAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationRequest
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationRequest {
	return &ManagedDeviceMobileAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationRequest is request for ManagedDeviceMobileAppConfiguration
type ManagedDeviceMobileAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationAssignment
type ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationAssignmentRequest
func (b *ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignmentRequest {
	return &ManagedDeviceMobileAppConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationAssignmentRequest is request for ManagedDeviceMobileAppConfigurationAssignment
type ManagedDeviceMobileAppConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationDeviceStatus
type ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationDeviceStatusRequest
func (b *ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceStatusRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationDeviceStatusRequest is request for ManagedDeviceMobileAppConfigurationDeviceStatus
type ManagedDeviceMobileAppConfigurationDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationDeviceSummary
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationDeviceSummaryRequest
func (b *ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationDeviceSummaryRequest is request for ManagedDeviceMobileAppConfigurationDeviceSummary
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationDeviceSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationDeviceSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationPolicySetItemRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationPolicySetItem
type ManagedDeviceMobileAppConfigurationPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationPolicySetItemRequest
func (b *ManagedDeviceMobileAppConfigurationPolicySetItemRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationPolicySetItemRequest {
	return &ManagedDeviceMobileAppConfigurationPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationPolicySetItemRequest is request for ManagedDeviceMobileAppConfigurationPolicySetItem
type ManagedDeviceMobileAppConfigurationPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationPolicySetItem
func (r *ManagedDeviceMobileAppConfigurationPolicySetItemRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationPolicySetItem
func (r *ManagedDeviceMobileAppConfigurationPolicySetItemRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationPolicySetItem
func (r *ManagedDeviceMobileAppConfigurationPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationSettingStateRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationSettingState
type ManagedDeviceMobileAppConfigurationSettingStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationSettingStateRequest
func (b *ManagedDeviceMobileAppConfigurationSettingStateRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationSettingStateRequest {
	return &ManagedDeviceMobileAppConfigurationSettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationSettingStateRequest is request for ManagedDeviceMobileAppConfigurationSettingState
type ManagedDeviceMobileAppConfigurationSettingStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationSettingState
func (r *ManagedDeviceMobileAppConfigurationSettingStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationSettingState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationSettingState
func (r *ManagedDeviceMobileAppConfigurationSettingStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationSettingState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationSettingState
func (r *ManagedDeviceMobileAppConfigurationSettingStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationStateRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationState
type ManagedDeviceMobileAppConfigurationStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationStateRequest
func (b *ManagedDeviceMobileAppConfigurationStateRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationStateRequest {
	return &ManagedDeviceMobileAppConfigurationStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationStateRequest is request for ManagedDeviceMobileAppConfigurationState
type ManagedDeviceMobileAppConfigurationStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationUserStatus
type ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationUserStatusRequest
func (b *ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserStatusRequest {
	return &ManagedDeviceMobileAppConfigurationUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationUserStatusRequest is request for ManagedDeviceMobileAppConfigurationUserStatus
type ManagedDeviceMobileAppConfigurationUserStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationUserStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationUserStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationUserSummary
type ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationUserSummaryRequest
func (b *ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationUserSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationUserSummaryRequest is request for ManagedDeviceMobileAppConfigurationUserSummary
type ManagedDeviceMobileAppConfigurationUserSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationUserSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationUserSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceModelsAndManufacturersRequestBuilder is request builder for ManagedDeviceModelsAndManufacturers
type ManagedDeviceModelsAndManufacturersRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceModelsAndManufacturersRequest
func (b *ManagedDeviceModelsAndManufacturersRequestBuilder) Request() *ManagedDeviceModelsAndManufacturersRequest {
	return &ManagedDeviceModelsAndManufacturersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceModelsAndManufacturersRequest is request for ManagedDeviceModelsAndManufacturers
type ManagedDeviceModelsAndManufacturersRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceModelsAndManufacturers
func (r *ManagedDeviceModelsAndManufacturersRequest) Get(ctx context.Context) (resObj *ManagedDeviceModelsAndManufacturers, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceModelsAndManufacturers
func (r *ManagedDeviceModelsAndManufacturersRequest) Update(ctx context.Context, reqObj *ManagedDeviceModelsAndManufacturers) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceModelsAndManufacturers
func (r *ManagedDeviceModelsAndManufacturersRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceOverviewRequestBuilder is request builder for ManagedDeviceOverview
type ManagedDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceOverviewRequest
func (b *ManagedDeviceOverviewRequestBuilder) Request() *ManagedDeviceOverviewRequest {
	return &ManagedDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceOverviewRequest is request for ManagedDeviceOverview
type ManagedDeviceOverviewRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Get(ctx context.Context) (resObj *ManagedDeviceOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Update(ctx context.Context, reqObj *ManagedDeviceOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceReportedAppRequestBuilder is request builder for ManagedDeviceReportedApp
type ManagedDeviceReportedAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceReportedAppRequest
func (b *ManagedDeviceReportedAppRequestBuilder) Request() *ManagedDeviceReportedAppRequest {
	return &ManagedDeviceReportedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceReportedAppRequest is request for ManagedDeviceReportedApp
type ManagedDeviceReportedAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceReportedApp
func (r *ManagedDeviceReportedAppRequest) Get(ctx context.Context) (resObj *ManagedDeviceReportedApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceReportedApp
func (r *ManagedDeviceReportedAppRequest) Update(ctx context.Context, reqObj *ManagedDeviceReportedApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceReportedApp
func (r *ManagedDeviceReportedAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceSummarizedAppStateRequestBuilder is request builder for ManagedDeviceSummarizedAppState
type ManagedDeviceSummarizedAppStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceSummarizedAppStateRequest
func (b *ManagedDeviceSummarizedAppStateRequestBuilder) Request() *ManagedDeviceSummarizedAppStateRequest {
	return &ManagedDeviceSummarizedAppStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceSummarizedAppStateRequest is request for ManagedDeviceSummarizedAppState
type ManagedDeviceSummarizedAppStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceSummarizedAppState
func (r *ManagedDeviceSummarizedAppStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceSummarizedAppState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceSummarizedAppState
func (r *ManagedDeviceSummarizedAppStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceSummarizedAppState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceSummarizedAppState
func (r *ManagedDeviceSummarizedAppStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookRequestBuilder is request builder for ManagedEBook
type ManagedEBookRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookRequest
func (b *ManagedEBookRequestBuilder) Request() *ManagedEBookRequest {
	return &ManagedEBookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookRequest is request for ManagedEBook
type ManagedEBookRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBook
func (r *ManagedEBookRequest) Get(ctx context.Context) (resObj *ManagedEBook, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBook
func (r *ManagedEBookRequest) Update(ctx context.Context, reqObj *ManagedEBook) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBook
func (r *ManagedEBookRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookAssignmentRequestBuilder is request builder for ManagedEBookAssignment
type ManagedEBookAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookAssignmentRequest
func (b *ManagedEBookAssignmentRequestBuilder) Request() *ManagedEBookAssignmentRequest {
	return &ManagedEBookAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookAssignmentRequest is request for ManagedEBookAssignment
type ManagedEBookAssignmentRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Get(ctx context.Context) (resObj *ManagedEBookAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Update(ctx context.Context, reqObj *ManagedEBookAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookCategoryRequestBuilder is request builder for ManagedEBookCategory
type ManagedEBookCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookCategoryRequest
func (b *ManagedEBookCategoryRequestBuilder) Request() *ManagedEBookCategoryRequest {
	return &ManagedEBookCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookCategoryRequest is request for ManagedEBookCategory
type ManagedEBookCategoryRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Get(ctx context.Context) (resObj *ManagedEBookCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Update(ctx context.Context, reqObj *ManagedEBookCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedIOSLobAppRequestBuilder is request builder for ManagedIOSLobApp
type ManagedIOSLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedIOSLobAppRequest
func (b *ManagedIOSLobAppRequestBuilder) Request() *ManagedIOSLobAppRequest {
	return &ManagedIOSLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedIOSLobAppRequest is request for ManagedIOSLobApp
type ManagedIOSLobAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedIOSLobApp
func (r *ManagedIOSLobAppRequest) Get(ctx context.Context) (resObj *ManagedIOSLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedIOSLobApp
func (r *ManagedIOSLobAppRequest) Update(ctx context.Context, reqObj *ManagedIOSLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedIOSLobApp
func (r *ManagedIOSLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedIOSStoreAppRequestBuilder is request builder for ManagedIOSStoreApp
type ManagedIOSStoreAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedIOSStoreAppRequest
func (b *ManagedIOSStoreAppRequestBuilder) Request() *ManagedIOSStoreAppRequest {
	return &ManagedIOSStoreAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedIOSStoreAppRequest is request for ManagedIOSStoreApp
type ManagedIOSStoreAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedIOSStoreApp
func (r *ManagedIOSStoreAppRequest) Get(ctx context.Context) (resObj *ManagedIOSStoreApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedIOSStoreApp
func (r *ManagedIOSStoreAppRequest) Update(ctx context.Context, reqObj *ManagedIOSStoreApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedIOSStoreApp
func (r *ManagedIOSStoreAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedIdentityRequestBuilder is request builder for ManagedIdentity
type ManagedIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedIdentityRequest
func (b *ManagedIdentityRequestBuilder) Request() *ManagedIdentityRequest {
	return &ManagedIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedIdentityRequest is request for ManagedIdentity
type ManagedIdentityRequest struct{ BaseRequest }

// Get performs GET request for ManagedIdentity
func (r *ManagedIdentityRequest) Get(ctx context.Context) (resObj *ManagedIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedIdentity
func (r *ManagedIdentityRequest) Update(ctx context.Context, reqObj *ManagedIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedIdentity
func (r *ManagedIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedMobileAppRequestBuilder is request builder for ManagedMobileApp
type ManagedMobileAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedMobileAppRequest
func (b *ManagedMobileAppRequestBuilder) Request() *ManagedMobileAppRequest {
	return &ManagedMobileAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedMobileAppRequest is request for ManagedMobileApp
type ManagedMobileAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Get(ctx context.Context) (resObj *ManagedMobileApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Update(ctx context.Context, reqObj *ManagedMobileApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedMobileLobAppRequestBuilder is request builder for ManagedMobileLobApp
type ManagedMobileLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedMobileLobAppRequest
func (b *ManagedMobileLobAppRequestBuilder) Request() *ManagedMobileLobAppRequest {
	return &ManagedMobileLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedMobileLobAppRequest is request for ManagedMobileLobApp
type ManagedMobileLobAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Get(ctx context.Context) (resObj *ManagedMobileLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Update(ctx context.Context, reqObj *ManagedMobileLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantRequestBuilder is request builder for ManagedTenantsManagedTenant
type ManagedTenantsManagedTenantRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantRequest
func (b *ManagedTenantsManagedTenantRequestBuilder) Request() *ManagedTenantsManagedTenantRequest {
	return &ManagedTenantsManagedTenantRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantRequest is request for ManagedTenantsManagedTenant
type ManagedTenantsManagedTenantRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenant
func (r *ManagedTenantsManagedTenantRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenant, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenant
func (r *ManagedTenantsManagedTenantRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenant) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenant
func (r *ManagedTenantsManagedTenantRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder struct{ BaseRequestBuilder }

// BulkReprovisionCloudPc action undocumentedras
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) BulkReprovisionCloudPc(reqObj *ManagedDeviceCollectionBulkReprovisionCloudPcRequestParameter) *ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkReprovisionCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkReprovisionCloudPc action undocumentedras
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) BulkReprovisionCloudPc(reqObj *ManagedDeviceCollectionBulkReprovisionCloudPcRequestParameter) *ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkReprovisionCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkReprovisionCloudPc action undocumentedras
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) BulkReprovisionCloudPc(reqObj *ManagedDeviceCollectionBulkReprovisionCloudPcRequestParameter) *ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkReprovisionCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkReprovisionCloudPc action undocumentedras
func (b *UserManagedDevicesCollectionRequestBuilder) BulkReprovisionCloudPc(reqObj *ManagedDeviceCollectionBulkReprovisionCloudPcRequestParameter) *ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkReprovisionCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionBulkReprovisionCloudPcRequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionBulkReprovisionCloudPcRequestBuilder) Request() *ManagedDeviceCollectionBulkReprovisionCloudPcRequest {
	return &ManagedDeviceCollectionBulkReprovisionCloudPcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionBulkReprovisionCloudPcRequest) Post(ctx context.Context) (resObj *CloudPcBulkRemoteActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder struct{ BaseRequestBuilder }

// BulkRestoreCloudPc action undocumentedras
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) BulkRestoreCloudPc(reqObj *ManagedDeviceCollectionBulkRestoreCloudPcRequestParameter) *ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkRestoreCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkRestoreCloudPc action undocumentedras
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) BulkRestoreCloudPc(reqObj *ManagedDeviceCollectionBulkRestoreCloudPcRequestParameter) *ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkRestoreCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkRestoreCloudPc action undocumentedras
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) BulkRestoreCloudPc(reqObj *ManagedDeviceCollectionBulkRestoreCloudPcRequestParameter) *ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkRestoreCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkRestoreCloudPc action undocumentedras
func (b *UserManagedDevicesCollectionRequestBuilder) BulkRestoreCloudPc(reqObj *ManagedDeviceCollectionBulkRestoreCloudPcRequestParameter) *ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder {
	bb := &ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkRestoreCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionBulkRestoreCloudPcRequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionBulkRestoreCloudPcRequestBuilder) Request() *ManagedDeviceCollectionBulkRestoreCloudPcRequest {
	return &ManagedDeviceCollectionBulkRestoreCloudPcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionBulkRestoreCloudPcRequest) Post(ctx context.Context) (resObj *CloudPcBulkRemoteActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder struct{ BaseRequestBuilder }

// BulkSetCloudPcReviewStatus action undocumentedras
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) BulkSetCloudPcReviewStatus(reqObj *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestParameter) *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder {
	bb := &ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkSetCloudPcReviewStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkSetCloudPcReviewStatus action undocumentedras
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) BulkSetCloudPcReviewStatus(reqObj *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestParameter) *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder {
	bb := &ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkSetCloudPcReviewStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkSetCloudPcReviewStatus action undocumentedras
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) BulkSetCloudPcReviewStatus(reqObj *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestParameter) *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder {
	bb := &ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkSetCloudPcReviewStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// BulkSetCloudPcReviewStatus action undocumentedras
func (b *UserManagedDevicesCollectionRequestBuilder) BulkSetCloudPcReviewStatus(reqObj *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestParameter) *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder {
	bb := &ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BulkSetCloudPcReviewStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequestBuilder) Request() *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequest {
	return &ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionBulkSetCloudPcReviewStatusRequest) Post(ctx context.Context) (resObj *CloudPcBulkRemoteActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder struct{ BaseRequestBuilder }

// DownloadAppDiagnostics action undocumentedras
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) DownloadAppDiagnostics(reqObj *ManagedDeviceCollectionDownloadAppDiagnosticsRequestParameter) *ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder {
	bb := &ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DownloadAppDiagnostics"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// DownloadAppDiagnostics action undocumentedras
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) DownloadAppDiagnostics(reqObj *ManagedDeviceCollectionDownloadAppDiagnosticsRequestParameter) *ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder {
	bb := &ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DownloadAppDiagnostics"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// DownloadAppDiagnostics action undocumentedras
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) DownloadAppDiagnostics(reqObj *ManagedDeviceCollectionDownloadAppDiagnosticsRequestParameter) *ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder {
	bb := &ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DownloadAppDiagnostics"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// DownloadAppDiagnostics action undocumentedras
func (b *UserManagedDevicesCollectionRequestBuilder) DownloadAppDiagnostics(reqObj *ManagedDeviceCollectionDownloadAppDiagnosticsRequestParameter) *ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder {
	bb := &ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DownloadAppDiagnostics"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionDownloadAppDiagnosticsRequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionDownloadAppDiagnosticsRequestBuilder) Request() *ManagedDeviceCollectionDownloadAppDiagnosticsRequest {
	return &ManagedDeviceCollectionDownloadAppDiagnosticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionDownloadAppDiagnosticsRequest) Post(ctx context.Context) (resObj *Stream, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceCollectionExecuteActionRequestBuilder struct{ BaseRequestBuilder }

// ExecuteAction action undocumentedras
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ExecuteAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ExecuteAction action undocumentedras
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ExecuteAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ExecuteAction action undocumentedras
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ExecuteAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ExecuteAction action undocumentedras
func (b *UserManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ExecuteAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionExecuteActionRequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionExecuteActionRequestBuilder) Request() *ManagedDeviceCollectionExecuteActionRequest {
	return &ManagedDeviceCollectionExecuteActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionExecuteActionRequest) Post(ctx context.Context) (resObj *BulkManagedDeviceActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceCollectionMoveDevicesToOURequestBuilder struct{ BaseRequestBuilder }

// MoveDevicesToOU action undocumentedrav
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) MoveDevicesToOU(reqObj *ManagedDeviceCollectionMoveDevicesToOURequestParameter) *ManagedDeviceCollectionMoveDevicesToOURequestBuilder {
	bb := &ManagedDeviceCollectionMoveDevicesToOURequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/MoveDevicesToOU"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// MoveDevicesToOU action undocumentedrav
func (b *DeviceManagementComanagedDevicesCollectionRequestBuilder) MoveDevicesToOU(reqObj *ManagedDeviceCollectionMoveDevicesToOURequestParameter) *ManagedDeviceCollectionMoveDevicesToOURequestBuilder {
	bb := &ManagedDeviceCollectionMoveDevicesToOURequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/MoveDevicesToOU"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// MoveDevicesToOU action undocumentedrav
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) MoveDevicesToOU(reqObj *ManagedDeviceCollectionMoveDevicesToOURequestParameter) *ManagedDeviceCollectionMoveDevicesToOURequestBuilder {
	bb := &ManagedDeviceCollectionMoveDevicesToOURequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/MoveDevicesToOU"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// MoveDevicesToOU action undocumentedrav
func (b *UserManagedDevicesCollectionRequestBuilder) MoveDevicesToOU(reqObj *ManagedDeviceCollectionMoveDevicesToOURequestParameter) *ManagedDeviceCollectionMoveDevicesToOURequestBuilder {
	bb := &ManagedDeviceCollectionMoveDevicesToOURequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/MoveDevicesToOU"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCollectionMoveDevicesToOURequest struct{ BaseRequest }

func (b *ManagedDeviceCollectionMoveDevicesToOURequestBuilder) Request() *ManagedDeviceCollectionMoveDevicesToOURequest {
	return &ManagedDeviceCollectionMoveDevicesToOURequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCollectionMoveDevicesToOURequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedAppPolicyTargetAppsRequestBuilder struct{ BaseRequestBuilder }

// TargetApps action undocumentedrav
func (b *ManagedAppPolicyRequestBuilder) TargetApps(reqObj *ManagedAppPolicyTargetAppsRequestParameter) *ManagedAppPolicyTargetAppsRequestBuilder {
	bb := &ManagedAppPolicyTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TargetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// TargetApps action undocumentedrav
func (b *DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder) TargetApps(reqObj *ManagedAppPolicyTargetAppsRequestParameter) *ManagedAppPolicyTargetAppsRequestBuilder {
	bb := &ManagedAppPolicyTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TargetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedAppPolicyTargetAppsRequest struct{ BaseRequest }

func (b *ManagedAppPolicyTargetAppsRequestBuilder) Request() *ManagedAppPolicyTargetAppsRequest {
	return &ManagedAppPolicyTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedAppPolicyTargetAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedAppProtectionTargetAppsRequestBuilder struct{ BaseRequestBuilder }

// TargetApps action undocumentedrav
func (b *ManagedAppProtectionRequestBuilder) TargetApps(reqObj *ManagedAppProtectionTargetAppsRequestParameter) *ManagedAppProtectionTargetAppsRequestBuilder {
	bb := &ManagedAppProtectionTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TargetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedAppProtectionTargetAppsRequest struct{ BaseRequest }

func (b *ManagedAppProtectionTargetAppsRequestBuilder) Request() *ManagedAppProtectionTargetAppsRequest {
	return &ManagedAppProtectionTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedAppProtectionTargetAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceReprovisionCloudPcRequestBuilder struct{ BaseRequestBuilder }

// ReprovisionCloudPc action undocumentedrav
func (b *ManagedDeviceRequestBuilder) ReprovisionCloudPc(reqObj *ManagedDeviceReprovisionCloudPcRequestParameter) *ManagedDeviceReprovisionCloudPcRequestBuilder {
	bb := &ManagedDeviceReprovisionCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ReprovisionCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceReprovisionCloudPcRequest struct{ BaseRequest }

func (b *ManagedDeviceReprovisionCloudPcRequestBuilder) Request() *ManagedDeviceReprovisionCloudPcRequest {
	return &ManagedDeviceReprovisionCloudPcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceReprovisionCloudPcRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceResizeCloudPcRequestBuilder struct{ BaseRequestBuilder }

// ResizeCloudPc action undocumentedrav
func (b *ManagedDeviceRequestBuilder) ResizeCloudPc(reqObj *ManagedDeviceResizeCloudPcRequestParameter) *ManagedDeviceResizeCloudPcRequestBuilder {
	bb := &ManagedDeviceResizeCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ResizeCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceResizeCloudPcRequest struct{ BaseRequest }

func (b *ManagedDeviceResizeCloudPcRequestBuilder) Request() *ManagedDeviceResizeCloudPcRequest {
	return &ManagedDeviceResizeCloudPcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceResizeCloudPcRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRestoreCloudPcRequestBuilder struct{ BaseRequestBuilder }

// RestoreCloudPc action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RestoreCloudPc(reqObj *ManagedDeviceRestoreCloudPcRequestParameter) *ManagedDeviceRestoreCloudPcRequestBuilder {
	bb := &ManagedDeviceRestoreCloudPcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RestoreCloudPc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRestoreCloudPcRequest struct{ BaseRequest }

func (b *ManagedDeviceRestoreCloudPcRequestBuilder) Request() *ManagedDeviceRestoreCloudPcRequest {
	return &ManagedDeviceRestoreCloudPcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRestoreCloudPcRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceSetCloudPcReviewStatusRequestBuilder struct{ BaseRequestBuilder }

// SetCloudPcReviewStatus action undocumentedrav
func (b *ManagedDeviceRequestBuilder) SetCloudPcReviewStatus(reqObj *ManagedDeviceSetCloudPcReviewStatusRequestParameter) *ManagedDeviceSetCloudPcReviewStatusRequestBuilder {
	bb := &ManagedDeviceSetCloudPcReviewStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetCloudPcReviewStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceSetCloudPcReviewStatusRequest struct{ BaseRequest }

func (b *ManagedDeviceSetCloudPcReviewStatusRequestBuilder) Request() *ManagedDeviceSetCloudPcReviewStatusRequest {
	return &ManagedDeviceSetCloudPcReviewStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceSetCloudPcReviewStatusRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceOverrideComplianceStateRequestBuilder struct{ BaseRequestBuilder }

// OverrideComplianceState action undocumentedrav
func (b *ManagedDeviceRequestBuilder) OverrideComplianceState(reqObj *ManagedDeviceOverrideComplianceStateRequestParameter) *ManagedDeviceOverrideComplianceStateRequestBuilder {
	bb := &ManagedDeviceOverrideComplianceStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/OverrideComplianceState"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceOverrideComplianceStateRequest struct{ BaseRequest }

func (b *ManagedDeviceOverrideComplianceStateRequestBuilder) Request() *ManagedDeviceOverrideComplianceStateRequest {
	return &ManagedDeviceOverrideComplianceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceOverrideComplianceStateRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceActivateDeviceEsimRequestBuilder struct{ BaseRequestBuilder }

// ActivateDeviceEsim action undocumentedrav
func (b *ManagedDeviceRequestBuilder) ActivateDeviceEsim(reqObj *ManagedDeviceActivateDeviceEsimRequestParameter) *ManagedDeviceActivateDeviceEsimRequestBuilder {
	bb := &ManagedDeviceActivateDeviceEsimRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ActivateDeviceEsim"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceActivateDeviceEsimRequest struct{ BaseRequest }

func (b *ManagedDeviceActivateDeviceEsimRequestBuilder) Request() *ManagedDeviceActivateDeviceEsimRequest {
	return &ManagedDeviceActivateDeviceEsimRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceActivateDeviceEsimRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceBypassActivationLockRequestBuilder struct{ BaseRequestBuilder }

// BypassActivationLock action undocumentedrav
func (b *ManagedDeviceRequestBuilder) BypassActivationLock(reqObj *ManagedDeviceBypassActivationLockRequestParameter) *ManagedDeviceBypassActivationLockRequestBuilder {
	bb := &ManagedDeviceBypassActivationLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/BypassActivationLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceBypassActivationLockRequest struct{ BaseRequest }

func (b *ManagedDeviceBypassActivationLockRequestBuilder) Request() *ManagedDeviceBypassActivationLockRequest {
	return &ManagedDeviceBypassActivationLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceBypassActivationLockRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceCleanWindowsDeviceRequestBuilder struct{ BaseRequestBuilder }

// CleanWindowsDevice action undocumentedrav
func (b *ManagedDeviceRequestBuilder) CleanWindowsDevice(reqObj *ManagedDeviceCleanWindowsDeviceRequestParameter) *ManagedDeviceCleanWindowsDeviceRequestBuilder {
	bb := &ManagedDeviceCleanWindowsDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CleanWindowsDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCleanWindowsDeviceRequest struct{ BaseRequest }

func (b *ManagedDeviceCleanWindowsDeviceRequestBuilder) Request() *ManagedDeviceCleanWindowsDeviceRequest {
	return &ManagedDeviceCleanWindowsDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCleanWindowsDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceCreateDeviceLogCollectionRequestActionRequestBuilder struct{ BaseRequestBuilder }

// CreateDeviceLogCollectionRequestAction action undocumentedras
func (b *ManagedDeviceRequestBuilder) CreateDeviceLogCollectionRequestAction(reqObj *ManagedDeviceCreateDeviceLogCollectionRequestActionRequestParameter) *ManagedDeviceCreateDeviceLogCollectionRequestActionRequestBuilder {
	bb := &ManagedDeviceCreateDeviceLogCollectionRequestActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateDeviceLogCollectionRequest"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCreateDeviceLogCollectionRequestActionRequest struct{ BaseRequest }

func (b *ManagedDeviceCreateDeviceLogCollectionRequestActionRequestBuilder) Request() *ManagedDeviceCreateDeviceLogCollectionRequestActionRequest {
	return &ManagedDeviceCreateDeviceLogCollectionRequestActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCreateDeviceLogCollectionRequestActionRequest) Post(ctx context.Context) (resObj *DeviceLogCollectionResponse, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder struct{ BaseRequestBuilder }

// DeleteUserFromSharedAppleDevice action undocumentedrav
func (b *ManagedDeviceRequestBuilder) DeleteUserFromSharedAppleDevice(reqObj *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestParameter) *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder {
	bb := &ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DeleteUserFromSharedAppleDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceDeleteUserFromSharedAppleDeviceRequest struct{ BaseRequest }

func (b *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder) Request() *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest {
	return &ManagedDeviceDeleteUserFromSharedAppleDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceDeprovisionRequestBuilder struct{ BaseRequestBuilder }

// Deprovision action undocumentedrav
func (b *ManagedDeviceRequestBuilder) Deprovision(reqObj *ManagedDeviceDeprovisionRequestParameter) *ManagedDeviceDeprovisionRequestBuilder {
	bb := &ManagedDeviceDeprovisionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Deprovision"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceDeprovisionRequest struct{ BaseRequest }

func (b *ManagedDeviceDeprovisionRequestBuilder) Request() *ManagedDeviceDeprovisionRequest {
	return &ManagedDeviceDeprovisionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceDeprovisionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceDisableRequestBuilder struct{ BaseRequestBuilder }

// Disable action undocumentedrav
func (b *ManagedDeviceRequestBuilder) Disable(reqObj *ManagedDeviceDisableRequestParameter) *ManagedDeviceDisableRequestBuilder {
	bb := &ManagedDeviceDisableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Disable"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceDisableRequest struct{ BaseRequest }

func (b *ManagedDeviceDisableRequestBuilder) Request() *ManagedDeviceDisableRequest {
	return &ManagedDeviceDisableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceDisableRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceDisableLostModeRequestBuilder struct{ BaseRequestBuilder }

// DisableLostMode action undocumentedrav
func (b *ManagedDeviceRequestBuilder) DisableLostMode(reqObj *ManagedDeviceDisableLostModeRequestParameter) *ManagedDeviceDisableLostModeRequestBuilder {
	bb := &ManagedDeviceDisableLostModeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/DisableLostMode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceDisableLostModeRequest struct{ BaseRequest }

func (b *ManagedDeviceDisableLostModeRequestBuilder) Request() *ManagedDeviceDisableLostModeRequest {
	return &ManagedDeviceDisableLostModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceDisableLostModeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceEnableLostModeRequestBuilder struct{ BaseRequestBuilder }

// EnableLostMode action undocumentedrav
func (b *ManagedDeviceRequestBuilder) EnableLostMode(reqObj *ManagedDeviceEnableLostModeRequestParameter) *ManagedDeviceEnableLostModeRequestBuilder {
	bb := &ManagedDeviceEnableLostModeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnableLostMode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceEnableLostModeRequest struct{ BaseRequest }

func (b *ManagedDeviceEnableLostModeRequestBuilder) Request() *ManagedDeviceEnableLostModeRequest {
	return &ManagedDeviceEnableLostModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceEnableLostModeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceEnrollNowActionRequestBuilder struct{ BaseRequestBuilder }

// EnrollNowAction action undocumentedrav
func (b *ManagedDeviceRequestBuilder) EnrollNowAction(reqObj *ManagedDeviceEnrollNowActionRequestParameter) *ManagedDeviceEnrollNowActionRequestBuilder {
	bb := &ManagedDeviceEnrollNowActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EnrollNowAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceEnrollNowActionRequest struct{ BaseRequest }

func (b *ManagedDeviceEnrollNowActionRequestBuilder) Request() *ManagedDeviceEnrollNowActionRequest {
	return &ManagedDeviceEnrollNowActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceEnrollNowActionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequestBuilder struct{ BaseRequestBuilder }

// InitiateMobileDeviceManagementKeyRecovery action undocumentedrav
func (b *ManagedDeviceRequestBuilder) InitiateMobileDeviceManagementKeyRecovery(reqObj *ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequestParameter) *ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequestBuilder {
	bb := &ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/InitiateMobileDeviceManagementKeyRecovery"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequest struct{ BaseRequest }

func (b *ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequestBuilder) Request() *ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequest {
	return &ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceInitiateMobileDeviceManagementKeyRecoveryRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceInitiateOnDemandProactiveRemediationRequestBuilder struct{ BaseRequestBuilder }

// InitiateOnDemandProactiveRemediation action undocumentedrav
func (b *ManagedDeviceRequestBuilder) InitiateOnDemandProactiveRemediation(reqObj *ManagedDeviceInitiateOnDemandProactiveRemediationRequestParameter) *ManagedDeviceInitiateOnDemandProactiveRemediationRequestBuilder {
	bb := &ManagedDeviceInitiateOnDemandProactiveRemediationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/InitiateOnDemandProactiveRemediation"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceInitiateOnDemandProactiveRemediationRequest struct{ BaseRequest }

func (b *ManagedDeviceInitiateOnDemandProactiveRemediationRequestBuilder) Request() *ManagedDeviceInitiateOnDemandProactiveRemediationRequest {
	return &ManagedDeviceInitiateOnDemandProactiveRemediationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceInitiateOnDemandProactiveRemediationRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceLocateDeviceRequestBuilder struct{ BaseRequestBuilder }

// LocateDevice action undocumentedrav
func (b *ManagedDeviceRequestBuilder) LocateDevice(reqObj *ManagedDeviceLocateDeviceRequestParameter) *ManagedDeviceLocateDeviceRequestBuilder {
	bb := &ManagedDeviceLocateDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/LocateDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceLocateDeviceRequest struct{ BaseRequest }

func (b *ManagedDeviceLocateDeviceRequestBuilder) Request() *ManagedDeviceLocateDeviceRequest {
	return &ManagedDeviceLocateDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceLocateDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder struct{ BaseRequestBuilder }

// LogoutSharedAppleDeviceActiveUser action undocumentedrav
func (b *ManagedDeviceRequestBuilder) LogoutSharedAppleDeviceActiveUser(reqObj *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestParameter) *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder {
	bb := &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/LogoutSharedAppleDeviceActiveUser"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest struct{ BaseRequest }

func (b *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder) Request() *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest {
	return &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDevicePlayLostModeSoundRequestBuilder struct{ BaseRequestBuilder }

// PlayLostModeSound action undocumentedrav
func (b *ManagedDeviceRequestBuilder) PlayLostModeSound(reqObj *ManagedDevicePlayLostModeSoundRequestParameter) *ManagedDevicePlayLostModeSoundRequestBuilder {
	bb := &ManagedDevicePlayLostModeSoundRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/PlayLostModeSound"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDevicePlayLostModeSoundRequest struct{ BaseRequest }

func (b *ManagedDevicePlayLostModeSoundRequestBuilder) Request() *ManagedDevicePlayLostModeSoundRequest {
	return &ManagedDevicePlayLostModeSoundRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDevicePlayLostModeSoundRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRebootNowRequestBuilder struct{ BaseRequestBuilder }

// RebootNow action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RebootNow(reqObj *ManagedDeviceRebootNowRequestParameter) *ManagedDeviceRebootNowRequestBuilder {
	bb := &ManagedDeviceRebootNowRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RebootNow"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRebootNowRequest struct{ BaseRequest }

func (b *ManagedDeviceRebootNowRequestBuilder) Request() *ManagedDeviceRebootNowRequest {
	return &ManagedDeviceRebootNowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRebootNowRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRecoverPasscodeRequestBuilder struct{ BaseRequestBuilder }

// RecoverPasscode action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RecoverPasscode(reqObj *ManagedDeviceRecoverPasscodeRequestParameter) *ManagedDeviceRecoverPasscodeRequestBuilder {
	bb := &ManagedDeviceRecoverPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RecoverPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRecoverPasscodeRequest struct{ BaseRequest }

func (b *ManagedDeviceRecoverPasscodeRequestBuilder) Request() *ManagedDeviceRecoverPasscodeRequest {
	return &ManagedDeviceRecoverPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRecoverPasscodeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceReenableRequestBuilder struct{ BaseRequestBuilder }

// Reenable action undocumentedrav
func (b *ManagedDeviceRequestBuilder) Reenable(reqObj *ManagedDeviceReenableRequestParameter) *ManagedDeviceReenableRequestBuilder {
	bb := &ManagedDeviceReenableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Reenable"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceReenableRequest struct{ BaseRequest }

func (b *ManagedDeviceReenableRequestBuilder) Request() *ManagedDeviceReenableRequest {
	return &ManagedDeviceReenableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceReenableRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRemoteLockRequestBuilder struct{ BaseRequestBuilder }

// RemoteLock action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RemoteLock(reqObj *ManagedDeviceRemoteLockRequestParameter) *ManagedDeviceRemoteLockRequestBuilder {
	bb := &ManagedDeviceRemoteLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoteLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRemoteLockRequest struct{ BaseRequest }

func (b *ManagedDeviceRemoteLockRequestBuilder) Request() *ManagedDeviceRemoteLockRequest {
	return &ManagedDeviceRemoteLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRemoteLockRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder struct{ BaseRequestBuilder }

// RemoveDeviceFirmwareConfigurationInterfaceManagement action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RemoveDeviceFirmwareConfigurationInterfaceManagement(reqObj *ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequestParameter) *ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder {
	bb := &ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoveDeviceFirmwareConfigurationInterfaceManagement"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequest struct{ BaseRequest }

func (b *ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder) Request() *ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequest {
	return &ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRemoveDeviceFirmwareConfigurationInterfaceManagementRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRequestRemoteAssistanceRequestBuilder struct{ BaseRequestBuilder }

// RequestRemoteAssistance action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RequestRemoteAssistance(reqObj *ManagedDeviceRequestRemoteAssistanceRequestParameter) *ManagedDeviceRequestRemoteAssistanceRequestBuilder {
	bb := &ManagedDeviceRequestRemoteAssistanceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RequestRemoteAssistance"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRequestRemoteAssistanceRequest struct{ BaseRequest }

func (b *ManagedDeviceRequestRemoteAssistanceRequestBuilder) Request() *ManagedDeviceRequestRemoteAssistanceRequest {
	return &ManagedDeviceRequestRemoteAssistanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRequestRemoteAssistanceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceResetPasscodeRequestBuilder struct{ BaseRequestBuilder }

// ResetPasscode action undocumentedrav
func (b *ManagedDeviceRequestBuilder) ResetPasscode(reqObj *ManagedDeviceResetPasscodeRequestParameter) *ManagedDeviceResetPasscodeRequestBuilder {
	bb := &ManagedDeviceResetPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ResetPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceResetPasscodeRequest struct{ BaseRequest }

func (b *ManagedDeviceResetPasscodeRequestBuilder) Request() *ManagedDeviceResetPasscodeRequest {
	return &ManagedDeviceResetPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceResetPasscodeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRetireRequestBuilder struct{ BaseRequestBuilder }

// Retire action undocumentedrav
func (b *ManagedDeviceRequestBuilder) Retire(reqObj *ManagedDeviceRetireRequestParameter) *ManagedDeviceRetireRequestBuilder {
	bb := &ManagedDeviceRetireRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Retire"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRetireRequest struct{ BaseRequest }

func (b *ManagedDeviceRetireRequestBuilder) Request() *ManagedDeviceRetireRequest {
	return &ManagedDeviceRetireRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRetireRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRevokeAppleVPPLicensesRequestBuilder struct{ BaseRequestBuilder }

// RevokeAppleVPPLicenses action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RevokeAppleVPPLicenses(reqObj *ManagedDeviceRevokeAppleVPPLicensesRequestParameter) *ManagedDeviceRevokeAppleVPPLicensesRequestBuilder {
	bb := &ManagedDeviceRevokeAppleVPPLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeAppleVppLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRevokeAppleVPPLicensesRequest struct{ BaseRequest }

func (b *ManagedDeviceRevokeAppleVPPLicensesRequestBuilder) Request() *ManagedDeviceRevokeAppleVPPLicensesRequest {
	return &ManagedDeviceRevokeAppleVPPLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRevokeAppleVPPLicensesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRotateBitLockerKeysRequestBuilder struct{ BaseRequestBuilder }

// RotateBitLockerKeys action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RotateBitLockerKeys(reqObj *ManagedDeviceRotateBitLockerKeysRequestParameter) *ManagedDeviceRotateBitLockerKeysRequestBuilder {
	bb := &ManagedDeviceRotateBitLockerKeysRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RotateBitLockerKeys"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRotateBitLockerKeysRequest struct{ BaseRequest }

func (b *ManagedDeviceRotateBitLockerKeysRequestBuilder) Request() *ManagedDeviceRotateBitLockerKeysRequest {
	return &ManagedDeviceRotateBitLockerKeysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRotateBitLockerKeysRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRotateFileVaultKeyRequestBuilder struct{ BaseRequestBuilder }

// RotateFileVaultKey action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RotateFileVaultKey(reqObj *ManagedDeviceRotateFileVaultKeyRequestParameter) *ManagedDeviceRotateFileVaultKeyRequestBuilder {
	bb := &ManagedDeviceRotateFileVaultKeyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RotateFileVaultKey"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRotateFileVaultKeyRequest struct{ BaseRequest }

func (b *ManagedDeviceRotateFileVaultKeyRequestBuilder) Request() *ManagedDeviceRotateFileVaultKeyRequest {
	return &ManagedDeviceRotateFileVaultKeyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRotateFileVaultKeyRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRotateLocalAdminPasswordRequestBuilder struct{ BaseRequestBuilder }

// RotateLocalAdminPassword action undocumentedrav
func (b *ManagedDeviceRequestBuilder) RotateLocalAdminPassword(reqObj *ManagedDeviceRotateLocalAdminPasswordRequestParameter) *ManagedDeviceRotateLocalAdminPasswordRequestBuilder {
	bb := &ManagedDeviceRotateLocalAdminPasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RotateLocalAdminPassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRotateLocalAdminPasswordRequest struct{ BaseRequest }

func (b *ManagedDeviceRotateLocalAdminPasswordRequestBuilder) Request() *ManagedDeviceRotateLocalAdminPasswordRequest {
	return &ManagedDeviceRotateLocalAdminPasswordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRotateLocalAdminPasswordRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder struct{ BaseRequestBuilder }

// SendCustomNotificationToCompanyPortal action undocumentedrav
func (b *ManagedDeviceRequestBuilder) SendCustomNotificationToCompanyPortal(reqObj *ManagedDeviceSendCustomNotificationToCompanyPortalRequestParameter) *ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder {
	bb := &ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SendCustomNotificationToCompanyPortal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceSendCustomNotificationToCompanyPortalRequest struct{ BaseRequest }

func (b *ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder) Request() *ManagedDeviceSendCustomNotificationToCompanyPortalRequest {
	return &ManagedDeviceSendCustomNotificationToCompanyPortalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceSendCustomNotificationToCompanyPortalRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceSetDeviceNameRequestBuilder struct{ BaseRequestBuilder }

// SetDeviceName action undocumentedrav
func (b *ManagedDeviceRequestBuilder) SetDeviceName(reqObj *ManagedDeviceSetDeviceNameRequestParameter) *ManagedDeviceSetDeviceNameRequestBuilder {
	bb := &ManagedDeviceSetDeviceNameRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetDeviceName"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceSetDeviceNameRequest struct{ BaseRequest }

func (b *ManagedDeviceSetDeviceNameRequestBuilder) Request() *ManagedDeviceSetDeviceNameRequest {
	return &ManagedDeviceSetDeviceNameRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceSetDeviceNameRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceShutDownRequestBuilder struct{ BaseRequestBuilder }

// ShutDown action undocumentedrav
func (b *ManagedDeviceRequestBuilder) ShutDown(reqObj *ManagedDeviceShutDownRequestParameter) *ManagedDeviceShutDownRequestBuilder {
	bb := &ManagedDeviceShutDownRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ShutDown"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceShutDownRequest struct{ BaseRequest }

func (b *ManagedDeviceShutDownRequestBuilder) Request() *ManagedDeviceShutDownRequest {
	return &ManagedDeviceShutDownRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceShutDownRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceSyncDeviceRequestBuilder struct{ BaseRequestBuilder }

// SyncDevice action undocumentedrav
func (b *ManagedDeviceRequestBuilder) SyncDevice(reqObj *ManagedDeviceSyncDeviceRequestParameter) *ManagedDeviceSyncDeviceRequestBuilder {
	bb := &ManagedDeviceSyncDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SyncDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceSyncDeviceRequest struct{ BaseRequest }

func (b *ManagedDeviceSyncDeviceRequestBuilder) Request() *ManagedDeviceSyncDeviceRequest {
	return &ManagedDeviceSyncDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceSyncDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceTriggerConfigurationManagerActionRequestBuilder struct{ BaseRequestBuilder }

// TriggerConfigurationManagerAction action undocumentedrav
func (b *ManagedDeviceRequestBuilder) TriggerConfigurationManagerAction(reqObj *ManagedDeviceTriggerConfigurationManagerActionRequestParameter) *ManagedDeviceTriggerConfigurationManagerActionRequestBuilder {
	bb := &ManagedDeviceTriggerConfigurationManagerActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TriggerConfigurationManagerAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceTriggerConfigurationManagerActionRequest struct{ BaseRequest }

func (b *ManagedDeviceTriggerConfigurationManagerActionRequestBuilder) Request() *ManagedDeviceTriggerConfigurationManagerActionRequest {
	return &ManagedDeviceTriggerConfigurationManagerActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceTriggerConfigurationManagerActionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder struct{ BaseRequestBuilder }

// UpdateWindowsDeviceAccount action undocumentedrav
func (b *ManagedDeviceRequestBuilder) UpdateWindowsDeviceAccount(reqObj *ManagedDeviceUpdateWindowsDeviceAccountRequestParameter) *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder {
	bb := &ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateWindowsDeviceAccount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceUpdateWindowsDeviceAccountRequest struct{ BaseRequest }

func (b *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder) Request() *ManagedDeviceUpdateWindowsDeviceAccountRequest {
	return &ManagedDeviceUpdateWindowsDeviceAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceUpdateWindowsDeviceAccountRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceWindowsDefenderScanRequestBuilder struct{ BaseRequestBuilder }

// WindowsDefenderScan action undocumentedrav
func (b *ManagedDeviceRequestBuilder) WindowsDefenderScan(reqObj *ManagedDeviceWindowsDefenderScanRequestParameter) *ManagedDeviceWindowsDefenderScanRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderScanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WindowsDefenderScan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceWindowsDefenderScanRequest struct{ BaseRequest }

func (b *ManagedDeviceWindowsDefenderScanRequestBuilder) Request() *ManagedDeviceWindowsDefenderScanRequest {
	return &ManagedDeviceWindowsDefenderScanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceWindowsDefenderScanRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder struct{ BaseRequestBuilder }

// WindowsDefenderUpdateSignatures action undocumentedrav
func (b *ManagedDeviceRequestBuilder) WindowsDefenderUpdateSignatures(reqObj *ManagedDeviceWindowsDefenderUpdateSignaturesRequestParameter) *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WindowsDefenderUpdateSignatures"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceWindowsDefenderUpdateSignaturesRequest struct{ BaseRequest }

func (b *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder) Request() *ManagedDeviceWindowsDefenderUpdateSignaturesRequest {
	return &ManagedDeviceWindowsDefenderUpdateSignaturesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceWindowsDefenderUpdateSignaturesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceWipeRequestBuilder struct{ BaseRequestBuilder }

// Wipe action undocumentedrav
func (b *ManagedDeviceRequestBuilder) Wipe(reqObj *ManagedDeviceWipeRequestParameter) *ManagedDeviceWipeRequestBuilder {
	bb := &ManagedDeviceWipeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Wipe"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceWipeRequest struct{ BaseRequest }

func (b *ManagedDeviceWipeRequestBuilder) Request() *ManagedDeviceWipeRequest {
	return &ManagedDeviceWipeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceWipeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceCreateRemoteHelpSessionRequestBuilder struct{ BaseRequestBuilder }

// CreateRemoteHelpSession action undocumentedras
func (b *ManagedDeviceRequestBuilder) CreateRemoteHelpSession(reqObj *ManagedDeviceCreateRemoteHelpSessionRequestParameter) *ManagedDeviceCreateRemoteHelpSessionRequestBuilder {
	bb := &ManagedDeviceCreateRemoteHelpSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CreateRemoteHelpSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceCreateRemoteHelpSessionRequest struct{ BaseRequest }

func (b *ManagedDeviceCreateRemoteHelpSessionRequestBuilder) Request() *ManagedDeviceCreateRemoteHelpSessionRequest {
	return &ManagedDeviceCreateRemoteHelpSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceCreateRemoteHelpSessionRequest) Post(ctx context.Context) (resObj *CreateRemoteHelpSessionResponse, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceEndRemoteHelpSessionRequestBuilder struct{ BaseRequestBuilder }

// EndRemoteHelpSession action undocumentedrav
func (b *ManagedDeviceRequestBuilder) EndRemoteHelpSession(reqObj *ManagedDeviceEndRemoteHelpSessionRequestParameter) *ManagedDeviceEndRemoteHelpSessionRequestBuilder {
	bb := &ManagedDeviceEndRemoteHelpSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EndRemoteHelpSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceEndRemoteHelpSessionRequest struct{ BaseRequest }

func (b *ManagedDeviceEndRemoteHelpSessionRequestBuilder) Request() *ManagedDeviceEndRemoteHelpSessionRequest {
	return &ManagedDeviceEndRemoteHelpSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceEndRemoteHelpSessionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedDeviceRequestRemoteHelpSessionAccessRequestBuilder struct{ BaseRequestBuilder }

// RequestRemoteHelpSessionAccess action undocumentedras
func (b *ManagedDeviceRequestBuilder) RequestRemoteHelpSessionAccess(reqObj *ManagedDeviceRequestRemoteHelpSessionAccessRequestParameter) *ManagedDeviceRequestRemoteHelpSessionAccessRequestBuilder {
	bb := &ManagedDeviceRequestRemoteHelpSessionAccessRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RequestRemoteHelpSessionAccess"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceRequestRemoteHelpSessionAccessRequest struct{ BaseRequest }

func (b *ManagedDeviceRequestRemoteHelpSessionAccessRequestBuilder) Request() *ManagedDeviceRequestRemoteHelpSessionAccessRequest {
	return &ManagedDeviceRequestRemoteHelpSessionAccessRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceRequestRemoteHelpSessionAccessRequest) Post(ctx context.Context) (resObj *RequestRemoteHelpSessionAccessResponse, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedDeviceMobileAppConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Assign(reqObj *ManagedDeviceMobileAppConfigurationAssignRequestParameter) *ManagedDeviceMobileAppConfigurationAssignRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedDeviceMobileAppConfigurationAssignRequest struct{ BaseRequest }

func (b *ManagedDeviceMobileAppConfigurationAssignRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignRequest {
	return &ManagedDeviceMobileAppConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedDeviceMobileAppConfigurationAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type ManagedEBookAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *ManagedEBookRequestBuilder) Assign(reqObj *ManagedEBookAssignRequestParameter) *ManagedEBookAssignRequestBuilder {
	bb := &ManagedEBookAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// Assign action undocumentedrav
func (b *DeviceAppManagementManagedEBooksCollectionRequestBuilder) Assign(reqObj *ManagedEBookAssignRequestParameter) *ManagedEBookAssignRequestBuilder {
	bb := &ManagedEBookAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedEBookAssignRequest struct{ BaseRequest }

func (b *ManagedEBookAssignRequestBuilder) Request() *ManagedEBookAssignRequest {
	return &ManagedEBookAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedEBookAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

// ManagedTenantsAddLogRequestObjectRequestBuilder is request builder for ManagedTenantsAddLogRequestObject
type ManagedTenantsAddLogRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAddLogRequestObjectRequest
func (b *ManagedTenantsAddLogRequestObjectRequestBuilder) Request() *ManagedTenantsAddLogRequestObjectRequest {
	return &ManagedTenantsAddLogRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAddLogRequestObjectRequest is request for ManagedTenantsAddLogRequestObject
type ManagedTenantsAddLogRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAddLogRequestObject
func (r *ManagedTenantsAddLogRequestObjectRequest) Get(ctx context.Context) (resObj *ManagedTenantsAddLogRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAddLogRequestObject
func (r *ManagedTenantsAddLogRequestObjectRequest) Update(ctx context.Context, reqObj *ManagedTenantsAddLogRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAddLogRequestObject
func (r *ManagedTenantsAddLogRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAggregatedPolicyComplianceRequestBuilder is request builder for ManagedTenantsAggregatedPolicyCompliance
type ManagedTenantsAggregatedPolicyComplianceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAggregatedPolicyComplianceRequest
func (b *ManagedTenantsAggregatedPolicyComplianceRequestBuilder) Request() *ManagedTenantsAggregatedPolicyComplianceRequest {
	return &ManagedTenantsAggregatedPolicyComplianceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAggregatedPolicyComplianceRequest is request for ManagedTenantsAggregatedPolicyCompliance
type ManagedTenantsAggregatedPolicyComplianceRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAggregatedPolicyCompliance
func (r *ManagedTenantsAggregatedPolicyComplianceRequest) Get(ctx context.Context) (resObj *ManagedTenantsAggregatedPolicyCompliance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAggregatedPolicyCompliance
func (r *ManagedTenantsAggregatedPolicyComplianceRequest) Update(ctx context.Context, reqObj *ManagedTenantsAggregatedPolicyCompliance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAggregatedPolicyCompliance
func (r *ManagedTenantsAggregatedPolicyComplianceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAlertDataRequestBuilder is request builder for ManagedTenantsAlertData
type ManagedTenantsAlertDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAlertDataRequest
func (b *ManagedTenantsAlertDataRequestBuilder) Request() *ManagedTenantsAlertDataRequest {
	return &ManagedTenantsAlertDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAlertDataRequest is request for ManagedTenantsAlertData
type ManagedTenantsAlertDataRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAlertData
func (r *ManagedTenantsAlertDataRequest) Get(ctx context.Context) (resObj *ManagedTenantsAlertData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAlertData
func (r *ManagedTenantsAlertDataRequest) Update(ctx context.Context, reqObj *ManagedTenantsAlertData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAlertData
func (r *ManagedTenantsAlertDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAlertDataReferenceStringRequestBuilder is request builder for ManagedTenantsAlertDataReferenceString
type ManagedTenantsAlertDataReferenceStringRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAlertDataReferenceStringRequest
func (b *ManagedTenantsAlertDataReferenceStringRequestBuilder) Request() *ManagedTenantsAlertDataReferenceStringRequest {
	return &ManagedTenantsAlertDataReferenceStringRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAlertDataReferenceStringRequest is request for ManagedTenantsAlertDataReferenceString
type ManagedTenantsAlertDataReferenceStringRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAlertDataReferenceString
func (r *ManagedTenantsAlertDataReferenceStringRequest) Get(ctx context.Context) (resObj *ManagedTenantsAlertDataReferenceString, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAlertDataReferenceString
func (r *ManagedTenantsAlertDataReferenceStringRequest) Update(ctx context.Context, reqObj *ManagedTenantsAlertDataReferenceString) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAlertDataReferenceString
func (r *ManagedTenantsAlertDataReferenceStringRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAlertLogContentRequestBuilder is request builder for ManagedTenantsAlertLogContent
type ManagedTenantsAlertLogContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAlertLogContentRequest
func (b *ManagedTenantsAlertLogContentRequestBuilder) Request() *ManagedTenantsAlertLogContentRequest {
	return &ManagedTenantsAlertLogContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAlertLogContentRequest is request for ManagedTenantsAlertLogContent
type ManagedTenantsAlertLogContentRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAlertLogContent
func (r *ManagedTenantsAlertLogContentRequest) Get(ctx context.Context) (resObj *ManagedTenantsAlertLogContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAlertLogContent
func (r *ManagedTenantsAlertLogContentRequest) Update(ctx context.Context, reqObj *ManagedTenantsAlertLogContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAlertLogContent
func (r *ManagedTenantsAlertLogContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAlertRuleDefinitionTemplateRequestBuilder is request builder for ManagedTenantsAlertRuleDefinitionTemplate
type ManagedTenantsAlertRuleDefinitionTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAlertRuleDefinitionTemplateRequest
func (b *ManagedTenantsAlertRuleDefinitionTemplateRequestBuilder) Request() *ManagedTenantsAlertRuleDefinitionTemplateRequest {
	return &ManagedTenantsAlertRuleDefinitionTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAlertRuleDefinitionTemplateRequest is request for ManagedTenantsAlertRuleDefinitionTemplate
type ManagedTenantsAlertRuleDefinitionTemplateRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAlertRuleDefinitionTemplate
func (r *ManagedTenantsAlertRuleDefinitionTemplateRequest) Get(ctx context.Context) (resObj *ManagedTenantsAlertRuleDefinitionTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAlertRuleDefinitionTemplate
func (r *ManagedTenantsAlertRuleDefinitionTemplateRequest) Update(ctx context.Context, reqObj *ManagedTenantsAlertRuleDefinitionTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAlertRuleDefinitionTemplate
func (r *ManagedTenantsAlertRuleDefinitionTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAppPerformanceRequestBuilder is request builder for ManagedTenantsAppPerformance
type ManagedTenantsAppPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAppPerformanceRequest
func (b *ManagedTenantsAppPerformanceRequestBuilder) Request() *ManagedTenantsAppPerformanceRequest {
	return &ManagedTenantsAppPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAppPerformanceRequest is request for ManagedTenantsAppPerformance
type ManagedTenantsAppPerformanceRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAppPerformance
func (r *ManagedTenantsAppPerformanceRequest) Get(ctx context.Context) (resObj *ManagedTenantsAppPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAppPerformance
func (r *ManagedTenantsAppPerformanceRequest) Update(ctx context.Context, reqObj *ManagedTenantsAppPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAppPerformance
func (r *ManagedTenantsAppPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsAuditEventRequestBuilder is request builder for ManagedTenantsAuditEvent
type ManagedTenantsAuditEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsAuditEventRequest
func (b *ManagedTenantsAuditEventRequestBuilder) Request() *ManagedTenantsAuditEventRequest {
	return &ManagedTenantsAuditEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsAuditEventRequest is request for ManagedTenantsAuditEvent
type ManagedTenantsAuditEventRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsAuditEvent
func (r *ManagedTenantsAuditEventRequest) Get(ctx context.Context) (resObj *ManagedTenantsAuditEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsAuditEvent
func (r *ManagedTenantsAuditEventRequest) Update(ctx context.Context, reqObj *ManagedTenantsAuditEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsAuditEvent
func (r *ManagedTenantsAuditEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsCloudPcConnectionRequestBuilder is request builder for ManagedTenantsCloudPcConnection
type ManagedTenantsCloudPcConnectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsCloudPcConnectionRequest
func (b *ManagedTenantsCloudPcConnectionRequestBuilder) Request() *ManagedTenantsCloudPcConnectionRequest {
	return &ManagedTenantsCloudPcConnectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsCloudPcConnectionRequest is request for ManagedTenantsCloudPcConnection
type ManagedTenantsCloudPcConnectionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsCloudPcConnection
func (r *ManagedTenantsCloudPcConnectionRequest) Get(ctx context.Context) (resObj *ManagedTenantsCloudPcConnection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsCloudPcConnection
func (r *ManagedTenantsCloudPcConnectionRequest) Update(ctx context.Context, reqObj *ManagedTenantsCloudPcConnection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsCloudPcConnection
func (r *ManagedTenantsCloudPcConnectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsCloudPcDeviceRequestBuilder is request builder for ManagedTenantsCloudPcDevice
type ManagedTenantsCloudPcDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsCloudPcDeviceRequest
func (b *ManagedTenantsCloudPcDeviceRequestBuilder) Request() *ManagedTenantsCloudPcDeviceRequest {
	return &ManagedTenantsCloudPcDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsCloudPcDeviceRequest is request for ManagedTenantsCloudPcDevice
type ManagedTenantsCloudPcDeviceRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsCloudPcDevice
func (r *ManagedTenantsCloudPcDeviceRequest) Get(ctx context.Context) (resObj *ManagedTenantsCloudPcDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsCloudPcDevice
func (r *ManagedTenantsCloudPcDeviceRequest) Update(ctx context.Context, reqObj *ManagedTenantsCloudPcDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsCloudPcDevice
func (r *ManagedTenantsCloudPcDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsCloudPcOverviewRequestBuilder is request builder for ManagedTenantsCloudPcOverview
type ManagedTenantsCloudPcOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsCloudPcOverviewRequest
func (b *ManagedTenantsCloudPcOverviewRequestBuilder) Request() *ManagedTenantsCloudPcOverviewRequest {
	return &ManagedTenantsCloudPcOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsCloudPcOverviewRequest is request for ManagedTenantsCloudPcOverview
type ManagedTenantsCloudPcOverviewRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsCloudPcOverview
func (r *ManagedTenantsCloudPcOverviewRequest) Get(ctx context.Context) (resObj *ManagedTenantsCloudPcOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsCloudPcOverview
func (r *ManagedTenantsCloudPcOverviewRequest) Update(ctx context.Context, reqObj *ManagedTenantsCloudPcOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsCloudPcOverview
func (r *ManagedTenantsCloudPcOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsConditionalAccessPolicyCoverageRequestBuilder is request builder for ManagedTenantsConditionalAccessPolicyCoverage
type ManagedTenantsConditionalAccessPolicyCoverageRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsConditionalAccessPolicyCoverageRequest
func (b *ManagedTenantsConditionalAccessPolicyCoverageRequestBuilder) Request() *ManagedTenantsConditionalAccessPolicyCoverageRequest {
	return &ManagedTenantsConditionalAccessPolicyCoverageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsConditionalAccessPolicyCoverageRequest is request for ManagedTenantsConditionalAccessPolicyCoverage
type ManagedTenantsConditionalAccessPolicyCoverageRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsConditionalAccessPolicyCoverage
func (r *ManagedTenantsConditionalAccessPolicyCoverageRequest) Get(ctx context.Context) (resObj *ManagedTenantsConditionalAccessPolicyCoverage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsConditionalAccessPolicyCoverage
func (r *ManagedTenantsConditionalAccessPolicyCoverageRequest) Update(ctx context.Context, reqObj *ManagedTenantsConditionalAccessPolicyCoverage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsConditionalAccessPolicyCoverage
func (r *ManagedTenantsConditionalAccessPolicyCoverageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsCredentialUserRegistrationsSummaryRequestBuilder is request builder for ManagedTenantsCredentialUserRegistrationsSummary
type ManagedTenantsCredentialUserRegistrationsSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsCredentialUserRegistrationsSummaryRequest
func (b *ManagedTenantsCredentialUserRegistrationsSummaryRequestBuilder) Request() *ManagedTenantsCredentialUserRegistrationsSummaryRequest {
	return &ManagedTenantsCredentialUserRegistrationsSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsCredentialUserRegistrationsSummaryRequest is request for ManagedTenantsCredentialUserRegistrationsSummary
type ManagedTenantsCredentialUserRegistrationsSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsCredentialUserRegistrationsSummary
func (r *ManagedTenantsCredentialUserRegistrationsSummaryRequest) Get(ctx context.Context) (resObj *ManagedTenantsCredentialUserRegistrationsSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsCredentialUserRegistrationsSummary
func (r *ManagedTenantsCredentialUserRegistrationsSummaryRequest) Update(ctx context.Context, reqObj *ManagedTenantsCredentialUserRegistrationsSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsCredentialUserRegistrationsSummary
func (r *ManagedTenantsCredentialUserRegistrationsSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsDelegatedRoleAssignedUserRequestBuilder is request builder for ManagedTenantsDelegatedRoleAssignedUser
type ManagedTenantsDelegatedRoleAssignedUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsDelegatedRoleAssignedUserRequest
func (b *ManagedTenantsDelegatedRoleAssignedUserRequestBuilder) Request() *ManagedTenantsDelegatedRoleAssignedUserRequest {
	return &ManagedTenantsDelegatedRoleAssignedUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsDelegatedRoleAssignedUserRequest is request for ManagedTenantsDelegatedRoleAssignedUser
type ManagedTenantsDelegatedRoleAssignedUserRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsDelegatedRoleAssignedUser
func (r *ManagedTenantsDelegatedRoleAssignedUserRequest) Get(ctx context.Context) (resObj *ManagedTenantsDelegatedRoleAssignedUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsDelegatedRoleAssignedUser
func (r *ManagedTenantsDelegatedRoleAssignedUserRequest) Update(ctx context.Context, reqObj *ManagedTenantsDelegatedRoleAssignedUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsDelegatedRoleAssignedUser
func (r *ManagedTenantsDelegatedRoleAssignedUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsDeviceAppPerformanceRequestBuilder is request builder for ManagedTenantsDeviceAppPerformance
type ManagedTenantsDeviceAppPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsDeviceAppPerformanceRequest
func (b *ManagedTenantsDeviceAppPerformanceRequestBuilder) Request() *ManagedTenantsDeviceAppPerformanceRequest {
	return &ManagedTenantsDeviceAppPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsDeviceAppPerformanceRequest is request for ManagedTenantsDeviceAppPerformance
type ManagedTenantsDeviceAppPerformanceRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsDeviceAppPerformance
func (r *ManagedTenantsDeviceAppPerformanceRequest) Get(ctx context.Context) (resObj *ManagedTenantsDeviceAppPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsDeviceAppPerformance
func (r *ManagedTenantsDeviceAppPerformanceRequest) Update(ctx context.Context, reqObj *ManagedTenantsDeviceAppPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsDeviceAppPerformance
func (r *ManagedTenantsDeviceAppPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequestBuilder is request builder for ManagedTenantsDeviceCompliancePolicySettingStateSummary
type ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest
func (b *ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequestBuilder) Request() *ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest {
	return &ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest is request for ManagedTenantsDeviceCompliancePolicySettingStateSummary
type ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsDeviceCompliancePolicySettingStateSummary
func (r *ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest) Get(ctx context.Context) (resObj *ManagedTenantsDeviceCompliancePolicySettingStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsDeviceCompliancePolicySettingStateSummary
func (r *ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest) Update(ctx context.Context, reqObj *ManagedTenantsDeviceCompliancePolicySettingStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsDeviceCompliancePolicySettingStateSummary
func (r *ManagedTenantsDeviceCompliancePolicySettingStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsDeviceHealthStatusRequestBuilder is request builder for ManagedTenantsDeviceHealthStatus
type ManagedTenantsDeviceHealthStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsDeviceHealthStatusRequest
func (b *ManagedTenantsDeviceHealthStatusRequestBuilder) Request() *ManagedTenantsDeviceHealthStatusRequest {
	return &ManagedTenantsDeviceHealthStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsDeviceHealthStatusRequest is request for ManagedTenantsDeviceHealthStatus
type ManagedTenantsDeviceHealthStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsDeviceHealthStatus
func (r *ManagedTenantsDeviceHealthStatusRequest) Get(ctx context.Context) (resObj *ManagedTenantsDeviceHealthStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsDeviceHealthStatus
func (r *ManagedTenantsDeviceHealthStatusRequest) Update(ctx context.Context, reqObj *ManagedTenantsDeviceHealthStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsDeviceHealthStatus
func (r *ManagedTenantsDeviceHealthStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsEmailRequestBuilder is request builder for ManagedTenantsEmail
type ManagedTenantsEmailRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsEmailRequest
func (b *ManagedTenantsEmailRequestBuilder) Request() *ManagedTenantsEmailRequest {
	return &ManagedTenantsEmailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsEmailRequest is request for ManagedTenantsEmail
type ManagedTenantsEmailRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsEmail
func (r *ManagedTenantsEmailRequest) Get(ctx context.Context) (resObj *ManagedTenantsEmail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsEmail
func (r *ManagedTenantsEmailRequest) Update(ctx context.Context, reqObj *ManagedTenantsEmail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsEmail
func (r *ManagedTenantsEmailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsGraphAPIErrorDetailsRequestBuilder is request builder for ManagedTenantsGraphAPIErrorDetails
type ManagedTenantsGraphAPIErrorDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsGraphAPIErrorDetailsRequest
func (b *ManagedTenantsGraphAPIErrorDetailsRequestBuilder) Request() *ManagedTenantsGraphAPIErrorDetailsRequest {
	return &ManagedTenantsGraphAPIErrorDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsGraphAPIErrorDetailsRequest is request for ManagedTenantsGraphAPIErrorDetails
type ManagedTenantsGraphAPIErrorDetailsRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsGraphAPIErrorDetails
func (r *ManagedTenantsGraphAPIErrorDetailsRequest) Get(ctx context.Context) (resObj *ManagedTenantsGraphAPIErrorDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsGraphAPIErrorDetails
func (r *ManagedTenantsGraphAPIErrorDetailsRequest) Update(ctx context.Context, reqObj *ManagedTenantsGraphAPIErrorDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsGraphAPIErrorDetails
func (r *ManagedTenantsGraphAPIErrorDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedDeviceComplianceRequestBuilder is request builder for ManagedTenantsManagedDeviceCompliance
type ManagedTenantsManagedDeviceComplianceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedDeviceComplianceRequest
func (b *ManagedTenantsManagedDeviceComplianceRequestBuilder) Request() *ManagedTenantsManagedDeviceComplianceRequest {
	return &ManagedTenantsManagedDeviceComplianceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedDeviceComplianceRequest is request for ManagedTenantsManagedDeviceCompliance
type ManagedTenantsManagedDeviceComplianceRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedDeviceCompliance
func (r *ManagedTenantsManagedDeviceComplianceRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedDeviceCompliance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedDeviceCompliance
func (r *ManagedTenantsManagedDeviceComplianceRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedDeviceCompliance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedDeviceCompliance
func (r *ManagedTenantsManagedDeviceComplianceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedDeviceComplianceTrendRequestBuilder is request builder for ManagedTenantsManagedDeviceComplianceTrend
type ManagedTenantsManagedDeviceComplianceTrendRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedDeviceComplianceTrendRequest
func (b *ManagedTenantsManagedDeviceComplianceTrendRequestBuilder) Request() *ManagedTenantsManagedDeviceComplianceTrendRequest {
	return &ManagedTenantsManagedDeviceComplianceTrendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedDeviceComplianceTrendRequest is request for ManagedTenantsManagedDeviceComplianceTrend
type ManagedTenantsManagedDeviceComplianceTrendRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedDeviceComplianceTrend
func (r *ManagedTenantsManagedDeviceComplianceTrendRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedDeviceComplianceTrend, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedDeviceComplianceTrend
func (r *ManagedTenantsManagedDeviceComplianceTrendRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedDeviceComplianceTrend) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedDeviceComplianceTrend
func (r *ManagedTenantsManagedDeviceComplianceTrendRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantAPINotificationRequestBuilder is request builder for ManagedTenantsManagedTenantAPINotification
type ManagedTenantsManagedTenantAPINotificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantAPINotificationRequest
func (b *ManagedTenantsManagedTenantAPINotificationRequestBuilder) Request() *ManagedTenantsManagedTenantAPINotificationRequest {
	return &ManagedTenantsManagedTenantAPINotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantAPINotificationRequest is request for ManagedTenantsManagedTenantAPINotification
type ManagedTenantsManagedTenantAPINotificationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantAPINotification
func (r *ManagedTenantsManagedTenantAPINotificationRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantAPINotification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantAPINotification
func (r *ManagedTenantsManagedTenantAPINotificationRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantAPINotification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantAPINotification
func (r *ManagedTenantsManagedTenantAPINotificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantAlertRequestBuilder is request builder for ManagedTenantsManagedTenantAlert
type ManagedTenantsManagedTenantAlertRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantAlertRequest
func (b *ManagedTenantsManagedTenantAlertRequestBuilder) Request() *ManagedTenantsManagedTenantAlertRequest {
	return &ManagedTenantsManagedTenantAlertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantAlertRequest is request for ManagedTenantsManagedTenantAlert
type ManagedTenantsManagedTenantAlertRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantAlert
func (r *ManagedTenantsManagedTenantAlertRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantAlert, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantAlert
func (r *ManagedTenantsManagedTenantAlertRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantAlert) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantAlert
func (r *ManagedTenantsManagedTenantAlertRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantAlertLogRequestBuilder is request builder for ManagedTenantsManagedTenantAlertLog
type ManagedTenantsManagedTenantAlertLogRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantAlertLogRequest
func (b *ManagedTenantsManagedTenantAlertLogRequestBuilder) Request() *ManagedTenantsManagedTenantAlertLogRequest {
	return &ManagedTenantsManagedTenantAlertLogRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantAlertLogRequest is request for ManagedTenantsManagedTenantAlertLog
type ManagedTenantsManagedTenantAlertLogRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantAlertLog
func (r *ManagedTenantsManagedTenantAlertLogRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantAlertLog, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantAlertLog
func (r *ManagedTenantsManagedTenantAlertLogRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantAlertLog) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantAlertLog
func (r *ManagedTenantsManagedTenantAlertLogRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantAlertRuleRequestBuilder is request builder for ManagedTenantsManagedTenantAlertRule
type ManagedTenantsManagedTenantAlertRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantAlertRuleRequest
func (b *ManagedTenantsManagedTenantAlertRuleRequestBuilder) Request() *ManagedTenantsManagedTenantAlertRuleRequest {
	return &ManagedTenantsManagedTenantAlertRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantAlertRuleRequest is request for ManagedTenantsManagedTenantAlertRule
type ManagedTenantsManagedTenantAlertRuleRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantAlertRule
func (r *ManagedTenantsManagedTenantAlertRuleRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantAlertRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantAlertRule
func (r *ManagedTenantsManagedTenantAlertRuleRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantAlertRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantAlertRule
func (r *ManagedTenantsManagedTenantAlertRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantAlertRuleDefinitionRequestBuilder is request builder for ManagedTenantsManagedTenantAlertRuleDefinition
type ManagedTenantsManagedTenantAlertRuleDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantAlertRuleDefinitionRequest
func (b *ManagedTenantsManagedTenantAlertRuleDefinitionRequestBuilder) Request() *ManagedTenantsManagedTenantAlertRuleDefinitionRequest {
	return &ManagedTenantsManagedTenantAlertRuleDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantAlertRuleDefinitionRequest is request for ManagedTenantsManagedTenantAlertRuleDefinition
type ManagedTenantsManagedTenantAlertRuleDefinitionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantAlertRuleDefinition
func (r *ManagedTenantsManagedTenantAlertRuleDefinitionRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantAlertRuleDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantAlertRuleDefinition
func (r *ManagedTenantsManagedTenantAlertRuleDefinitionRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantAlertRuleDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantAlertRuleDefinition
func (r *ManagedTenantsManagedTenantAlertRuleDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantEmailNotificationRequestBuilder is request builder for ManagedTenantsManagedTenantEmailNotification
type ManagedTenantsManagedTenantEmailNotificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantEmailNotificationRequest
func (b *ManagedTenantsManagedTenantEmailNotificationRequestBuilder) Request() *ManagedTenantsManagedTenantEmailNotificationRequest {
	return &ManagedTenantsManagedTenantEmailNotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantEmailNotificationRequest is request for ManagedTenantsManagedTenantEmailNotification
type ManagedTenantsManagedTenantEmailNotificationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantEmailNotification
func (r *ManagedTenantsManagedTenantEmailNotificationRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantEmailNotification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantEmailNotification
func (r *ManagedTenantsManagedTenantEmailNotificationRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantEmailNotification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantEmailNotification
func (r *ManagedTenantsManagedTenantEmailNotificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantExecutionErrorRequestBuilder is request builder for ManagedTenantsManagedTenantExecutionError
type ManagedTenantsManagedTenantExecutionErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantExecutionErrorRequest
func (b *ManagedTenantsManagedTenantExecutionErrorRequestBuilder) Request() *ManagedTenantsManagedTenantExecutionErrorRequest {
	return &ManagedTenantsManagedTenantExecutionErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantExecutionErrorRequest is request for ManagedTenantsManagedTenantExecutionError
type ManagedTenantsManagedTenantExecutionErrorRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantExecutionError
func (r *ManagedTenantsManagedTenantExecutionErrorRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantExecutionError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantExecutionError
func (r *ManagedTenantsManagedTenantExecutionErrorRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantExecutionError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantExecutionError
func (r *ManagedTenantsManagedTenantExecutionErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantGenericErrorRequestBuilder is request builder for ManagedTenantsManagedTenantGenericError
type ManagedTenantsManagedTenantGenericErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantGenericErrorRequest
func (b *ManagedTenantsManagedTenantGenericErrorRequestBuilder) Request() *ManagedTenantsManagedTenantGenericErrorRequest {
	return &ManagedTenantsManagedTenantGenericErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantGenericErrorRequest is request for ManagedTenantsManagedTenantGenericError
type ManagedTenantsManagedTenantGenericErrorRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantGenericError
func (r *ManagedTenantsManagedTenantGenericErrorRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantGenericError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantGenericError
func (r *ManagedTenantsManagedTenantGenericErrorRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantGenericError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantGenericError
func (r *ManagedTenantsManagedTenantGenericErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantOperationErrorRequestBuilder is request builder for ManagedTenantsManagedTenantOperationError
type ManagedTenantsManagedTenantOperationErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantOperationErrorRequest
func (b *ManagedTenantsManagedTenantOperationErrorRequestBuilder) Request() *ManagedTenantsManagedTenantOperationErrorRequest {
	return &ManagedTenantsManagedTenantOperationErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantOperationErrorRequest is request for ManagedTenantsManagedTenantOperationError
type ManagedTenantsManagedTenantOperationErrorRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantOperationError
func (r *ManagedTenantsManagedTenantOperationErrorRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantOperationError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantOperationError
func (r *ManagedTenantsManagedTenantOperationErrorRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantOperationError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantOperationError
func (r *ManagedTenantsManagedTenantOperationErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagedTenantTicketingEndpointRequestBuilder is request builder for ManagedTenantsManagedTenantTicketingEndpoint
type ManagedTenantsManagedTenantTicketingEndpointRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagedTenantTicketingEndpointRequest
func (b *ManagedTenantsManagedTenantTicketingEndpointRequestBuilder) Request() *ManagedTenantsManagedTenantTicketingEndpointRequest {
	return &ManagedTenantsManagedTenantTicketingEndpointRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagedTenantTicketingEndpointRequest is request for ManagedTenantsManagedTenantTicketingEndpoint
type ManagedTenantsManagedTenantTicketingEndpointRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagedTenantTicketingEndpoint
func (r *ManagedTenantsManagedTenantTicketingEndpointRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagedTenantTicketingEndpoint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagedTenantTicketingEndpoint
func (r *ManagedTenantsManagedTenantTicketingEndpointRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagedTenantTicketingEndpoint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagedTenantTicketingEndpoint
func (r *ManagedTenantsManagedTenantTicketingEndpointRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementActionRequestBuilder is request builder for ManagedTenantsManagementAction
type ManagedTenantsManagementActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementActionRequest
func (b *ManagedTenantsManagementActionRequestBuilder) Request() *ManagedTenantsManagementActionRequest {
	return &ManagedTenantsManagementActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementActionRequest is request for ManagedTenantsManagementAction
type ManagedTenantsManagementActionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementAction
func (r *ManagedTenantsManagementActionRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementAction
func (r *ManagedTenantsManagementActionRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementAction
func (r *ManagedTenantsManagementActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementActionDeploymentStatusRequestBuilder is request builder for ManagedTenantsManagementActionDeploymentStatus
type ManagedTenantsManagementActionDeploymentStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementActionDeploymentStatusRequest
func (b *ManagedTenantsManagementActionDeploymentStatusRequestBuilder) Request() *ManagedTenantsManagementActionDeploymentStatusRequest {
	return &ManagedTenantsManagementActionDeploymentStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementActionDeploymentStatusRequest is request for ManagedTenantsManagementActionDeploymentStatus
type ManagedTenantsManagementActionDeploymentStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementActionDeploymentStatus
func (r *ManagedTenantsManagementActionDeploymentStatusRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementActionDeploymentStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementActionDeploymentStatus
func (r *ManagedTenantsManagementActionDeploymentStatusRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementActionDeploymentStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementActionDeploymentStatus
func (r *ManagedTenantsManagementActionDeploymentStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementActionInfoRequestBuilder is request builder for ManagedTenantsManagementActionInfo
type ManagedTenantsManagementActionInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementActionInfoRequest
func (b *ManagedTenantsManagementActionInfoRequestBuilder) Request() *ManagedTenantsManagementActionInfoRequest {
	return &ManagedTenantsManagementActionInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementActionInfoRequest is request for ManagedTenantsManagementActionInfo
type ManagedTenantsManagementActionInfoRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementActionInfo
func (r *ManagedTenantsManagementActionInfoRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementActionInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementActionInfo
func (r *ManagedTenantsManagementActionInfoRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementActionInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementActionInfo
func (r *ManagedTenantsManagementActionInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementActionTenantDeploymentStatusRequestBuilder is request builder for ManagedTenantsManagementActionTenantDeploymentStatus
type ManagedTenantsManagementActionTenantDeploymentStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementActionTenantDeploymentStatusRequest
func (b *ManagedTenantsManagementActionTenantDeploymentStatusRequestBuilder) Request() *ManagedTenantsManagementActionTenantDeploymentStatusRequest {
	return &ManagedTenantsManagementActionTenantDeploymentStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementActionTenantDeploymentStatusRequest is request for ManagedTenantsManagementActionTenantDeploymentStatus
type ManagedTenantsManagementActionTenantDeploymentStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementActionTenantDeploymentStatus
func (r *ManagedTenantsManagementActionTenantDeploymentStatusRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementActionTenantDeploymentStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementActionTenantDeploymentStatus
func (r *ManagedTenantsManagementActionTenantDeploymentStatusRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementActionTenantDeploymentStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementActionTenantDeploymentStatus
func (r *ManagedTenantsManagementActionTenantDeploymentStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementIntentRequestBuilder is request builder for ManagedTenantsManagementIntent
type ManagedTenantsManagementIntentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementIntentRequest
func (b *ManagedTenantsManagementIntentRequestBuilder) Request() *ManagedTenantsManagementIntentRequest {
	return &ManagedTenantsManagementIntentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementIntentRequest is request for ManagedTenantsManagementIntent
type ManagedTenantsManagementIntentRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementIntent
func (r *ManagedTenantsManagementIntentRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementIntent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementIntent
func (r *ManagedTenantsManagementIntentRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementIntent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementIntent
func (r *ManagedTenantsManagementIntentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementIntentInfoRequestBuilder is request builder for ManagedTenantsManagementIntentInfo
type ManagedTenantsManagementIntentInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementIntentInfoRequest
func (b *ManagedTenantsManagementIntentInfoRequestBuilder) Request() *ManagedTenantsManagementIntentInfoRequest {
	return &ManagedTenantsManagementIntentInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementIntentInfoRequest is request for ManagedTenantsManagementIntentInfo
type ManagedTenantsManagementIntentInfoRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementIntentInfo
func (r *ManagedTenantsManagementIntentInfoRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementIntentInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementIntentInfo
func (r *ManagedTenantsManagementIntentInfoRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementIntentInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementIntentInfo
func (r *ManagedTenantsManagementIntentInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateRequestBuilder is request builder for ManagedTenantsManagementTemplate
type ManagedTenantsManagementTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateRequest
func (b *ManagedTenantsManagementTemplateRequestBuilder) Request() *ManagedTenantsManagementTemplateRequest {
	return &ManagedTenantsManagementTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateRequest is request for ManagedTenantsManagementTemplate
type ManagedTenantsManagementTemplateRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplate
func (r *ManagedTenantsManagementTemplateRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplate
func (r *ManagedTenantsManagementTemplateRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplate
func (r *ManagedTenantsManagementTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateCollectionRequestBuilder is request builder for ManagedTenantsManagementTemplateCollection
type ManagedTenantsManagementTemplateCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateCollectionRequest
func (b *ManagedTenantsManagementTemplateCollectionRequestBuilder) Request() *ManagedTenantsManagementTemplateCollectionRequest {
	return &ManagedTenantsManagementTemplateCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateCollectionRequest is request for ManagedTenantsManagementTemplateCollection
type ManagedTenantsManagementTemplateCollectionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateCollection
func (r *ManagedTenantsManagementTemplateCollectionRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateCollection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateCollection
func (r *ManagedTenantsManagementTemplateCollectionRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateCollection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateCollection
func (r *ManagedTenantsManagementTemplateCollectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateCollectionTenantSummaryRequestBuilder is request builder for ManagedTenantsManagementTemplateCollectionTenantSummary
type ManagedTenantsManagementTemplateCollectionTenantSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateCollectionTenantSummaryRequest
func (b *ManagedTenantsManagementTemplateCollectionTenantSummaryRequestBuilder) Request() *ManagedTenantsManagementTemplateCollectionTenantSummaryRequest {
	return &ManagedTenantsManagementTemplateCollectionTenantSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateCollectionTenantSummaryRequest is request for ManagedTenantsManagementTemplateCollectionTenantSummary
type ManagedTenantsManagementTemplateCollectionTenantSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateCollectionTenantSummary
func (r *ManagedTenantsManagementTemplateCollectionTenantSummaryRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateCollectionTenantSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateCollectionTenantSummary
func (r *ManagedTenantsManagementTemplateCollectionTenantSummaryRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateCollectionTenantSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateCollectionTenantSummary
func (r *ManagedTenantsManagementTemplateCollectionTenantSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateDetailedInfoRequestBuilder is request builder for ManagedTenantsManagementTemplateDetailedInfo
type ManagedTenantsManagementTemplateDetailedInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateDetailedInfoRequest
func (b *ManagedTenantsManagementTemplateDetailedInfoRequestBuilder) Request() *ManagedTenantsManagementTemplateDetailedInfoRequest {
	return &ManagedTenantsManagementTemplateDetailedInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateDetailedInfoRequest is request for ManagedTenantsManagementTemplateDetailedInfo
type ManagedTenantsManagementTemplateDetailedInfoRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateDetailedInfo
func (r *ManagedTenantsManagementTemplateDetailedInfoRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateDetailedInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateDetailedInfo
func (r *ManagedTenantsManagementTemplateDetailedInfoRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateDetailedInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateDetailedInfo
func (r *ManagedTenantsManagementTemplateDetailedInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateStepRequestBuilder is request builder for ManagedTenantsManagementTemplateStep
type ManagedTenantsManagementTemplateStepRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateStepRequest
func (b *ManagedTenantsManagementTemplateStepRequestBuilder) Request() *ManagedTenantsManagementTemplateStepRequest {
	return &ManagedTenantsManagementTemplateStepRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateStepRequest is request for ManagedTenantsManagementTemplateStep
type ManagedTenantsManagementTemplateStepRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateStep
func (r *ManagedTenantsManagementTemplateStepRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateStep, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateStep
func (r *ManagedTenantsManagementTemplateStepRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateStep) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateStep
func (r *ManagedTenantsManagementTemplateStepRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateStepDeploymentRequestBuilder is request builder for ManagedTenantsManagementTemplateStepDeployment
type ManagedTenantsManagementTemplateStepDeploymentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateStepDeploymentRequest
func (b *ManagedTenantsManagementTemplateStepDeploymentRequestBuilder) Request() *ManagedTenantsManagementTemplateStepDeploymentRequest {
	return &ManagedTenantsManagementTemplateStepDeploymentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateStepDeploymentRequest is request for ManagedTenantsManagementTemplateStepDeployment
type ManagedTenantsManagementTemplateStepDeploymentRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateStepDeployment
func (r *ManagedTenantsManagementTemplateStepDeploymentRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateStepDeployment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateStepDeployment
func (r *ManagedTenantsManagementTemplateStepDeploymentRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateStepDeployment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateStepDeployment
func (r *ManagedTenantsManagementTemplateStepDeploymentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateStepTenantSummaryRequestBuilder is request builder for ManagedTenantsManagementTemplateStepTenantSummary
type ManagedTenantsManagementTemplateStepTenantSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateStepTenantSummaryRequest
func (b *ManagedTenantsManagementTemplateStepTenantSummaryRequestBuilder) Request() *ManagedTenantsManagementTemplateStepTenantSummaryRequest {
	return &ManagedTenantsManagementTemplateStepTenantSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateStepTenantSummaryRequest is request for ManagedTenantsManagementTemplateStepTenantSummary
type ManagedTenantsManagementTemplateStepTenantSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateStepTenantSummary
func (r *ManagedTenantsManagementTemplateStepTenantSummaryRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateStepTenantSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateStepTenantSummary
func (r *ManagedTenantsManagementTemplateStepTenantSummaryRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateStepTenantSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateStepTenantSummary
func (r *ManagedTenantsManagementTemplateStepTenantSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsManagementTemplateStepVersionRequestBuilder is request builder for ManagedTenantsManagementTemplateStepVersion
type ManagedTenantsManagementTemplateStepVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsManagementTemplateStepVersionRequest
func (b *ManagedTenantsManagementTemplateStepVersionRequestBuilder) Request() *ManagedTenantsManagementTemplateStepVersionRequest {
	return &ManagedTenantsManagementTemplateStepVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsManagementTemplateStepVersionRequest is request for ManagedTenantsManagementTemplateStepVersion
type ManagedTenantsManagementTemplateStepVersionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsManagementTemplateStepVersion
func (r *ManagedTenantsManagementTemplateStepVersionRequest) Get(ctx context.Context) (resObj *ManagedTenantsManagementTemplateStepVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsManagementTemplateStepVersion
func (r *ManagedTenantsManagementTemplateStepVersionRequest) Update(ctx context.Context, reqObj *ManagedTenantsManagementTemplateStepVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsManagementTemplateStepVersion
func (r *ManagedTenantsManagementTemplateStepVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsMyRoleRequestBuilder is request builder for ManagedTenantsMyRole
type ManagedTenantsMyRoleRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsMyRoleRequest
func (b *ManagedTenantsMyRoleRequestBuilder) Request() *ManagedTenantsMyRoleRequest {
	return &ManagedTenantsMyRoleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsMyRoleRequest is request for ManagedTenantsMyRole
type ManagedTenantsMyRoleRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsMyRole
func (r *ManagedTenantsMyRoleRequest) Get(ctx context.Context) (resObj *ManagedTenantsMyRole, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsMyRole
func (r *ManagedTenantsMyRoleRequest) Update(ctx context.Context, reqObj *ManagedTenantsMyRole) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsMyRole
func (r *ManagedTenantsMyRoleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsNotificationTargetRequestBuilder is request builder for ManagedTenantsNotificationTarget
type ManagedTenantsNotificationTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsNotificationTargetRequest
func (b *ManagedTenantsNotificationTargetRequestBuilder) Request() *ManagedTenantsNotificationTargetRequest {
	return &ManagedTenantsNotificationTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsNotificationTargetRequest is request for ManagedTenantsNotificationTarget
type ManagedTenantsNotificationTargetRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsNotificationTarget
func (r *ManagedTenantsNotificationTargetRequest) Get(ctx context.Context) (resObj *ManagedTenantsNotificationTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsNotificationTarget
func (r *ManagedTenantsNotificationTargetRequest) Update(ctx context.Context, reqObj *ManagedTenantsNotificationTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsNotificationTarget
func (r *ManagedTenantsNotificationTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsPhoneRequestBuilder is request builder for ManagedTenantsPhone
type ManagedTenantsPhoneRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsPhoneRequest
func (b *ManagedTenantsPhoneRequestBuilder) Request() *ManagedTenantsPhoneRequest {
	return &ManagedTenantsPhoneRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsPhoneRequest is request for ManagedTenantsPhone
type ManagedTenantsPhoneRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsPhone
func (r *ManagedTenantsPhoneRequest) Get(ctx context.Context) (resObj *ManagedTenantsPhone, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsPhone
func (r *ManagedTenantsPhoneRequest) Update(ctx context.Context, reqObj *ManagedTenantsPhone) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsPhone
func (r *ManagedTenantsPhoneRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsRoleAssignmentRequestBuilder is request builder for ManagedTenantsRoleAssignment
type ManagedTenantsRoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsRoleAssignmentRequest
func (b *ManagedTenantsRoleAssignmentRequestBuilder) Request() *ManagedTenantsRoleAssignmentRequest {
	return &ManagedTenantsRoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsRoleAssignmentRequest is request for ManagedTenantsRoleAssignment
type ManagedTenantsRoleAssignmentRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsRoleAssignment
func (r *ManagedTenantsRoleAssignmentRequest) Get(ctx context.Context) (resObj *ManagedTenantsRoleAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsRoleAssignment
func (r *ManagedTenantsRoleAssignmentRequest) Update(ctx context.Context, reqObj *ManagedTenantsRoleAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsRoleAssignment
func (r *ManagedTenantsRoleAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsRoleDefinitionRequestBuilder is request builder for ManagedTenantsRoleDefinition
type ManagedTenantsRoleDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsRoleDefinitionRequest
func (b *ManagedTenantsRoleDefinitionRequestBuilder) Request() *ManagedTenantsRoleDefinitionRequest {
	return &ManagedTenantsRoleDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsRoleDefinitionRequest is request for ManagedTenantsRoleDefinition
type ManagedTenantsRoleDefinitionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsRoleDefinition
func (r *ManagedTenantsRoleDefinitionRequest) Get(ctx context.Context) (resObj *ManagedTenantsRoleDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsRoleDefinition
func (r *ManagedTenantsRoleDefinitionRequest) Update(ctx context.Context, reqObj *ManagedTenantsRoleDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsRoleDefinition
func (r *ManagedTenantsRoleDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsSettingRequestBuilder is request builder for ManagedTenantsSetting
type ManagedTenantsSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsSettingRequest
func (b *ManagedTenantsSettingRequestBuilder) Request() *ManagedTenantsSettingRequest {
	return &ManagedTenantsSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsSettingRequest is request for ManagedTenantsSetting
type ManagedTenantsSettingRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsSetting
func (r *ManagedTenantsSettingRequest) Get(ctx context.Context) (resObj *ManagedTenantsSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsSetting
func (r *ManagedTenantsSettingRequest) Update(ctx context.Context, reqObj *ManagedTenantsSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsSetting
func (r *ManagedTenantsSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTemplateActionRequestBuilder is request builder for ManagedTenantsTemplateAction
type ManagedTenantsTemplateActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTemplateActionRequest
func (b *ManagedTenantsTemplateActionRequestBuilder) Request() *ManagedTenantsTemplateActionRequest {
	return &ManagedTenantsTemplateActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTemplateActionRequest is request for ManagedTenantsTemplateAction
type ManagedTenantsTemplateActionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTemplateAction
func (r *ManagedTenantsTemplateActionRequest) Get(ctx context.Context) (resObj *ManagedTenantsTemplateAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTemplateAction
func (r *ManagedTenantsTemplateActionRequest) Update(ctx context.Context, reqObj *ManagedTenantsTemplateAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTemplateAction
func (r *ManagedTenantsTemplateActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTemplateParameterRequestBuilder is request builder for ManagedTenantsTemplateParameter
type ManagedTenantsTemplateParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTemplateParameterRequest
func (b *ManagedTenantsTemplateParameterRequestBuilder) Request() *ManagedTenantsTemplateParameterRequest {
	return &ManagedTenantsTemplateParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTemplateParameterRequest is request for ManagedTenantsTemplateParameter
type ManagedTenantsTemplateParameterRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTemplateParameter
func (r *ManagedTenantsTemplateParameterRequest) Get(ctx context.Context) (resObj *ManagedTenantsTemplateParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTemplateParameter
func (r *ManagedTenantsTemplateParameterRequest) Update(ctx context.Context, reqObj *ManagedTenantsTemplateParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTemplateParameter
func (r *ManagedTenantsTemplateParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantRequestBuilder is request builder for ManagedTenantsTenant
type ManagedTenantsTenantRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantRequest
func (b *ManagedTenantsTenantRequestBuilder) Request() *ManagedTenantsTenantRequest {
	return &ManagedTenantsTenantRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantRequest is request for ManagedTenantsTenant
type ManagedTenantsTenantRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenant
func (r *ManagedTenantsTenantRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenant, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenant
func (r *ManagedTenantsTenantRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenant) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenant
func (r *ManagedTenantsTenantRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantContactInformationRequestBuilder is request builder for ManagedTenantsTenantContactInformation
type ManagedTenantsTenantContactInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantContactInformationRequest
func (b *ManagedTenantsTenantContactInformationRequestBuilder) Request() *ManagedTenantsTenantContactInformationRequest {
	return &ManagedTenantsTenantContactInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantContactInformationRequest is request for ManagedTenantsTenantContactInformation
type ManagedTenantsTenantContactInformationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantContactInformation
func (r *ManagedTenantsTenantContactInformationRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantContactInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantContactInformation
func (r *ManagedTenantsTenantContactInformationRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantContactInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantContactInformation
func (r *ManagedTenantsTenantContactInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantContractRequestBuilder is request builder for ManagedTenantsTenantContract
type ManagedTenantsTenantContractRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantContractRequest
func (b *ManagedTenantsTenantContractRequestBuilder) Request() *ManagedTenantsTenantContractRequest {
	return &ManagedTenantsTenantContractRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantContractRequest is request for ManagedTenantsTenantContract
type ManagedTenantsTenantContractRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantContract
func (r *ManagedTenantsTenantContractRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantContract, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantContract
func (r *ManagedTenantsTenantContractRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantContract) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantContract
func (r *ManagedTenantsTenantContractRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantCustomizedInformationRequestBuilder is request builder for ManagedTenantsTenantCustomizedInformation
type ManagedTenantsTenantCustomizedInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantCustomizedInformationRequest
func (b *ManagedTenantsTenantCustomizedInformationRequestBuilder) Request() *ManagedTenantsTenantCustomizedInformationRequest {
	return &ManagedTenantsTenantCustomizedInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantCustomizedInformationRequest is request for ManagedTenantsTenantCustomizedInformation
type ManagedTenantsTenantCustomizedInformationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantCustomizedInformation
func (r *ManagedTenantsTenantCustomizedInformationRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantCustomizedInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantCustomizedInformation
func (r *ManagedTenantsTenantCustomizedInformationRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantCustomizedInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantCustomizedInformation
func (r *ManagedTenantsTenantCustomizedInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantDetailedInformationRequestBuilder is request builder for ManagedTenantsTenantDetailedInformation
type ManagedTenantsTenantDetailedInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantDetailedInformationRequest
func (b *ManagedTenantsTenantDetailedInformationRequestBuilder) Request() *ManagedTenantsTenantDetailedInformationRequest {
	return &ManagedTenantsTenantDetailedInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantDetailedInformationRequest is request for ManagedTenantsTenantDetailedInformation
type ManagedTenantsTenantDetailedInformationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantDetailedInformation
func (r *ManagedTenantsTenantDetailedInformationRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantDetailedInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantDetailedInformation
func (r *ManagedTenantsTenantDetailedInformationRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantDetailedInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantDetailedInformation
func (r *ManagedTenantsTenantDetailedInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantGroupRequestBuilder is request builder for ManagedTenantsTenantGroup
type ManagedTenantsTenantGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantGroupRequest
func (b *ManagedTenantsTenantGroupRequestBuilder) Request() *ManagedTenantsTenantGroupRequest {
	return &ManagedTenantsTenantGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantGroupRequest is request for ManagedTenantsTenantGroup
type ManagedTenantsTenantGroupRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantGroup
func (r *ManagedTenantsTenantGroupRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantGroup
func (r *ManagedTenantsTenantGroupRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantGroup
func (r *ManagedTenantsTenantGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantInfoRequestBuilder is request builder for ManagedTenantsTenantInfo
type ManagedTenantsTenantInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantInfoRequest
func (b *ManagedTenantsTenantInfoRequestBuilder) Request() *ManagedTenantsTenantInfoRequest {
	return &ManagedTenantsTenantInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantInfoRequest is request for ManagedTenantsTenantInfo
type ManagedTenantsTenantInfoRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantInfo
func (r *ManagedTenantsTenantInfoRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantInfo
func (r *ManagedTenantsTenantInfoRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantInfo
func (r *ManagedTenantsTenantInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantStatusInformationRequestBuilder is request builder for ManagedTenantsTenantStatusInformation
type ManagedTenantsTenantStatusInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantStatusInformationRequest
func (b *ManagedTenantsTenantStatusInformationRequestBuilder) Request() *ManagedTenantsTenantStatusInformationRequest {
	return &ManagedTenantsTenantStatusInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantStatusInformationRequest is request for ManagedTenantsTenantStatusInformation
type ManagedTenantsTenantStatusInformationRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantStatusInformation
func (r *ManagedTenantsTenantStatusInformationRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantStatusInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantStatusInformation
func (r *ManagedTenantsTenantStatusInformationRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantStatusInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantStatusInformation
func (r *ManagedTenantsTenantStatusInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsTenantTagRequestBuilder is request builder for ManagedTenantsTenantTag
type ManagedTenantsTenantTagRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsTenantTagRequest
func (b *ManagedTenantsTenantTagRequestBuilder) Request() *ManagedTenantsTenantTagRequest {
	return &ManagedTenantsTenantTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsTenantTagRequest is request for ManagedTenantsTenantTag
type ManagedTenantsTenantTagRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsTenantTag
func (r *ManagedTenantsTenantTagRequest) Get(ctx context.Context) (resObj *ManagedTenantsTenantTag, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsTenantTag
func (r *ManagedTenantsTenantTagRequest) Update(ctx context.Context, reqObj *ManagedTenantsTenantTag) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsTenantTag
func (r *ManagedTenantsTenantTagRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsWindowsDeviceMalwareStateRequestBuilder is request builder for ManagedTenantsWindowsDeviceMalwareState
type ManagedTenantsWindowsDeviceMalwareStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsWindowsDeviceMalwareStateRequest
func (b *ManagedTenantsWindowsDeviceMalwareStateRequestBuilder) Request() *ManagedTenantsWindowsDeviceMalwareStateRequest {
	return &ManagedTenantsWindowsDeviceMalwareStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsWindowsDeviceMalwareStateRequest is request for ManagedTenantsWindowsDeviceMalwareState
type ManagedTenantsWindowsDeviceMalwareStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsWindowsDeviceMalwareState
func (r *ManagedTenantsWindowsDeviceMalwareStateRequest) Get(ctx context.Context) (resObj *ManagedTenantsWindowsDeviceMalwareState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsWindowsDeviceMalwareState
func (r *ManagedTenantsWindowsDeviceMalwareStateRequest) Update(ctx context.Context, reqObj *ManagedTenantsWindowsDeviceMalwareState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsWindowsDeviceMalwareState
func (r *ManagedTenantsWindowsDeviceMalwareStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsWindowsProtectionStateRequestBuilder is request builder for ManagedTenantsWindowsProtectionState
type ManagedTenantsWindowsProtectionStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsWindowsProtectionStateRequest
func (b *ManagedTenantsWindowsProtectionStateRequestBuilder) Request() *ManagedTenantsWindowsProtectionStateRequest {
	return &ManagedTenantsWindowsProtectionStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsWindowsProtectionStateRequest is request for ManagedTenantsWindowsProtectionState
type ManagedTenantsWindowsProtectionStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsWindowsProtectionState
func (r *ManagedTenantsWindowsProtectionStateRequest) Get(ctx context.Context) (resObj *ManagedTenantsWindowsProtectionState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsWindowsProtectionState
func (r *ManagedTenantsWindowsProtectionStateRequest) Update(ctx context.Context, reqObj *ManagedTenantsWindowsProtectionState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsWindowsProtectionState
func (r *ManagedTenantsWindowsProtectionStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsWorkloadActionRequestBuilder is request builder for ManagedTenantsWorkloadAction
type ManagedTenantsWorkloadActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsWorkloadActionRequest
func (b *ManagedTenantsWorkloadActionRequestBuilder) Request() *ManagedTenantsWorkloadActionRequest {
	return &ManagedTenantsWorkloadActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsWorkloadActionRequest is request for ManagedTenantsWorkloadAction
type ManagedTenantsWorkloadActionRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsWorkloadAction
func (r *ManagedTenantsWorkloadActionRequest) Get(ctx context.Context) (resObj *ManagedTenantsWorkloadAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsWorkloadAction
func (r *ManagedTenantsWorkloadActionRequest) Update(ctx context.Context, reqObj *ManagedTenantsWorkloadAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsWorkloadAction
func (r *ManagedTenantsWorkloadActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsWorkloadActionDeploymentStatusRequestBuilder is request builder for ManagedTenantsWorkloadActionDeploymentStatus
type ManagedTenantsWorkloadActionDeploymentStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsWorkloadActionDeploymentStatusRequest
func (b *ManagedTenantsWorkloadActionDeploymentStatusRequestBuilder) Request() *ManagedTenantsWorkloadActionDeploymentStatusRequest {
	return &ManagedTenantsWorkloadActionDeploymentStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsWorkloadActionDeploymentStatusRequest is request for ManagedTenantsWorkloadActionDeploymentStatus
type ManagedTenantsWorkloadActionDeploymentStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsWorkloadActionDeploymentStatus
func (r *ManagedTenantsWorkloadActionDeploymentStatusRequest) Get(ctx context.Context) (resObj *ManagedTenantsWorkloadActionDeploymentStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsWorkloadActionDeploymentStatus
func (r *ManagedTenantsWorkloadActionDeploymentStatusRequest) Update(ctx context.Context, reqObj *ManagedTenantsWorkloadActionDeploymentStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsWorkloadActionDeploymentStatus
func (r *ManagedTenantsWorkloadActionDeploymentStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedTenantsWorkloadStatusRequestBuilder is request builder for ManagedTenantsWorkloadStatus
type ManagedTenantsWorkloadStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedTenantsWorkloadStatusRequest
func (b *ManagedTenantsWorkloadStatusRequestBuilder) Request() *ManagedTenantsWorkloadStatusRequest {
	return &ManagedTenantsWorkloadStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedTenantsWorkloadStatusRequest is request for ManagedTenantsWorkloadStatus
type ManagedTenantsWorkloadStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedTenantsWorkloadStatus
func (r *ManagedTenantsWorkloadStatusRequest) Get(ctx context.Context) (resObj *ManagedTenantsWorkloadStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedTenantsWorkloadStatus
func (r *ManagedTenantsWorkloadStatusRequest) Update(ctx context.Context, reqObj *ManagedTenantsWorkloadStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedTenantsWorkloadStatus
func (r *ManagedTenantsWorkloadStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequestBuilder struct{ BaseRequestBuilder }

// ManagedTenantsChangeDeploymentStatus action undocumentedras
func (b *ManagedTenantsManagedTenantManagementActionTenantDeploymentStatusesCollectionRequestBuilder) ManagedTenantsChangeDeploymentStatus(reqObj *ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequestParameter) *ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequestBuilder {
	bb := &ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ManagedTenantsChangeDeploymentStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequest struct{ BaseRequest }

func (b *ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequestBuilder) Request() *ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequest {
	return &ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedTenantsManagementActionTenantDeploymentStatusCollectionManagedTenantsChangeDeploymentStatusRequest) Post(ctx context.Context) (resObj *ManagedTenantsManagementActionDeploymentStatus, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequestBuilder struct{ BaseRequestBuilder }

// ManagedTenantsTenantSearch action undocumentedrac
func (b *ManagedTenantsManagedTenantTenantGroupsCollectionRequestBuilder) ManagedTenantsTenantSearch(reqObj *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequestParameter) *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequestBuilder {
	bb := &ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ManagedTenantsTenantSearch"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest struct{ BaseRequest }

func (b *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequestBuilder) Request() *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest {
	return &ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ManagedTenantsTenantGroup, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedTenantsTenantGroup
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ManagedTenantsTenantGroup
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest) PostN(ctx context.Context, n int) ([]ManagedTenantsTenantGroup, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *ManagedTenantsTenantGroupCollectionManagedTenantsTenantSearchRequest) Post(ctx context.Context) ([]ManagedTenantsTenantGroup, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}
