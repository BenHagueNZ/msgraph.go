// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// SecurityRequestBuilder is request builder for Security
type SecurityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRequest
func (b *SecurityRequestBuilder) Request() *SecurityRequest {
	return &SecurityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRequest is request for Security
type SecurityRequest struct{ BaseRequest }

// Get performs GET request for Security
func (r *SecurityRequest) Get(ctx context.Context) (resObj *Security, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Security
func (r *SecurityRequest) Update(ctx context.Context, reqObj *Security) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Security
func (r *SecurityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityActionRequestBuilder is request builder for SecurityAction
type SecurityActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityActionRequest
func (b *SecurityActionRequestBuilder) Request() *SecurityActionRequest {
	return &SecurityActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityActionRequest is request for SecurityAction
type SecurityActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityAction
func (r *SecurityActionRequest) Get(ctx context.Context) (resObj *SecurityAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAction
func (r *SecurityActionRequest) Update(ctx context.Context, reqObj *SecurityAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAction
func (r *SecurityActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityActionStateRequestBuilder is request builder for SecurityActionState
type SecurityActionStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityActionStateRequest
func (b *SecurityActionStateRequestBuilder) Request() *SecurityActionStateRequest {
	return &SecurityActionStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityActionStateRequest is request for SecurityActionState
type SecurityActionStateRequest struct{ BaseRequest }

// Get performs GET request for SecurityActionState
func (r *SecurityActionStateRequest) Get(ctx context.Context) (resObj *SecurityActionState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityActionState
func (r *SecurityActionStateRequest) Update(ctx context.Context, reqObj *SecurityActionState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityActionState
func (r *SecurityActionStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAlertRequestBuilder is request builder for SecurityAlert
type SecurityAlertRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAlertRequest
func (b *SecurityAlertRequestBuilder) Request() *SecurityAlertRequest {
	return &SecurityAlertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAlertRequest is request for SecurityAlert
type SecurityAlertRequest struct{ BaseRequest }

// Get performs GET request for SecurityAlert
func (r *SecurityAlertRequest) Get(ctx context.Context) (resObj *SecurityAlert, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAlert
func (r *SecurityAlertRequest) Update(ctx context.Context, reqObj *SecurityAlert) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAlert
func (r *SecurityAlertRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineCategoryStateSummaryRequestBuilder is request builder for SecurityBaselineCategoryStateSummary
type SecurityBaselineCategoryStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineCategoryStateSummaryRequest
func (b *SecurityBaselineCategoryStateSummaryRequestBuilder) Request() *SecurityBaselineCategoryStateSummaryRequest {
	return &SecurityBaselineCategoryStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineCategoryStateSummaryRequest is request for SecurityBaselineCategoryStateSummary
type SecurityBaselineCategoryStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineCategoryStateSummary
func (r *SecurityBaselineCategoryStateSummaryRequest) Get(ctx context.Context) (resObj *SecurityBaselineCategoryStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineCategoryStateSummary
func (r *SecurityBaselineCategoryStateSummaryRequest) Update(ctx context.Context, reqObj *SecurityBaselineCategoryStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineCategoryStateSummary
func (r *SecurityBaselineCategoryStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineContributingPolicyRequestBuilder is request builder for SecurityBaselineContributingPolicy
type SecurityBaselineContributingPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineContributingPolicyRequest
func (b *SecurityBaselineContributingPolicyRequestBuilder) Request() *SecurityBaselineContributingPolicyRequest {
	return &SecurityBaselineContributingPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineContributingPolicyRequest is request for SecurityBaselineContributingPolicy
type SecurityBaselineContributingPolicyRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineContributingPolicy
func (r *SecurityBaselineContributingPolicyRequest) Get(ctx context.Context) (resObj *SecurityBaselineContributingPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineContributingPolicy
func (r *SecurityBaselineContributingPolicyRequest) Update(ctx context.Context, reqObj *SecurityBaselineContributingPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineContributingPolicy
func (r *SecurityBaselineContributingPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineDeviceStateRequestBuilder is request builder for SecurityBaselineDeviceState
type SecurityBaselineDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineDeviceStateRequest
func (b *SecurityBaselineDeviceStateRequestBuilder) Request() *SecurityBaselineDeviceStateRequest {
	return &SecurityBaselineDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineDeviceStateRequest is request for SecurityBaselineDeviceState
type SecurityBaselineDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineDeviceState
func (r *SecurityBaselineDeviceStateRequest) Get(ctx context.Context) (resObj *SecurityBaselineDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineDeviceState
func (r *SecurityBaselineDeviceStateRequest) Update(ctx context.Context, reqObj *SecurityBaselineDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineDeviceState
func (r *SecurityBaselineDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineSettingStateRequestBuilder is request builder for SecurityBaselineSettingState
type SecurityBaselineSettingStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineSettingStateRequest
func (b *SecurityBaselineSettingStateRequestBuilder) Request() *SecurityBaselineSettingStateRequest {
	return &SecurityBaselineSettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineSettingStateRequest is request for SecurityBaselineSettingState
type SecurityBaselineSettingStateRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineSettingState
func (r *SecurityBaselineSettingStateRequest) Get(ctx context.Context) (resObj *SecurityBaselineSettingState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineSettingState
func (r *SecurityBaselineSettingStateRequest) Update(ctx context.Context, reqObj *SecurityBaselineSettingState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineSettingState
func (r *SecurityBaselineSettingStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineStateRequestBuilder is request builder for SecurityBaselineState
type SecurityBaselineStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineStateRequest
func (b *SecurityBaselineStateRequestBuilder) Request() *SecurityBaselineStateRequest {
	return &SecurityBaselineStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineStateRequest is request for SecurityBaselineState
type SecurityBaselineStateRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineState
func (r *SecurityBaselineStateRequest) Get(ctx context.Context) (resObj *SecurityBaselineState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineState
func (r *SecurityBaselineStateRequest) Update(ctx context.Context, reqObj *SecurityBaselineState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineState
func (r *SecurityBaselineStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineStateSummaryRequestBuilder is request builder for SecurityBaselineStateSummary
type SecurityBaselineStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineStateSummaryRequest
func (b *SecurityBaselineStateSummaryRequestBuilder) Request() *SecurityBaselineStateSummaryRequest {
	return &SecurityBaselineStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineStateSummaryRequest is request for SecurityBaselineStateSummary
type SecurityBaselineStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineStateSummary
func (r *SecurityBaselineStateSummaryRequest) Get(ctx context.Context) (resObj *SecurityBaselineStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineStateSummary
func (r *SecurityBaselineStateSummaryRequest) Update(ctx context.Context, reqObj *SecurityBaselineStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineStateSummary
func (r *SecurityBaselineStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBaselineTemplateRequestBuilder is request builder for SecurityBaselineTemplate
type SecurityBaselineTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineTemplateRequest
func (b *SecurityBaselineTemplateRequestBuilder) Request() *SecurityBaselineTemplateRequest {
	return &SecurityBaselineTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineTemplateRequest is request for SecurityBaselineTemplate
type SecurityBaselineTemplateRequest struct{ BaseRequest }

// Get performs GET request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Get(ctx context.Context) (resObj *SecurityBaselineTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Update(ctx context.Context, reqObj *SecurityBaselineTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCasesRootRequestBuilder is request builder for SecurityCasesRoot
type SecurityCasesRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCasesRootRequest
func (b *SecurityCasesRootRequestBuilder) Request() *SecurityCasesRootRequest {
	return &SecurityCasesRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCasesRootRequest is request for SecurityCasesRoot
type SecurityCasesRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Get(ctx context.Context) (resObj *SecurityCasesRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Update(ctx context.Context, reqObj *SecurityCasesRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityConfigurationTaskRequestBuilder is request builder for SecurityConfigurationTask
type SecurityConfigurationTaskRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityConfigurationTaskRequest
func (b *SecurityConfigurationTaskRequestBuilder) Request() *SecurityConfigurationTaskRequest {
	return &SecurityConfigurationTaskRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityConfigurationTaskRequest is request for SecurityConfigurationTask
type SecurityConfigurationTaskRequest struct{ BaseRequest }

// Get performs GET request for SecurityConfigurationTask
func (r *SecurityConfigurationTaskRequest) Get(ctx context.Context) (resObj *SecurityConfigurationTask, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityConfigurationTask
func (r *SecurityConfigurationTaskRequest) Update(ctx context.Context, reqObj *SecurityConfigurationTask) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityConfigurationTask
func (r *SecurityConfigurationTaskRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIncidentRequestBuilder is request builder for SecurityIncident
type SecurityIncidentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIncidentRequest
func (b *SecurityIncidentRequestBuilder) Request() *SecurityIncidentRequest {
	return &SecurityIncidentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIncidentRequest is request for SecurityIncident
type SecurityIncidentRequest struct{ BaseRequest }

// Get performs GET request for SecurityIncident
func (r *SecurityIncidentRequest) Get(ctx context.Context) (resObj *SecurityIncident, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIncident
func (r *SecurityIncidentRequest) Update(ctx context.Context, reqObj *SecurityIncident) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIncident
func (r *SecurityIncidentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityInformationProtectionRequestBuilder is request builder for SecurityInformationProtection
type SecurityInformationProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityInformationProtectionRequest
func (b *SecurityInformationProtectionRequestBuilder) Request() *SecurityInformationProtectionRequest {
	return &SecurityInformationProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityInformationProtectionRequest is request for SecurityInformationProtection
type SecurityInformationProtectionRequest struct{ BaseRequest }

// Get performs GET request for SecurityInformationProtection
func (r *SecurityInformationProtectionRequest) Get(ctx context.Context) (resObj *SecurityInformationProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityInformationProtection
func (r *SecurityInformationProtectionRequest) Update(ctx context.Context, reqObj *SecurityInformationProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityInformationProtection
func (r *SecurityInformationProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityLabelsRootRequestBuilder is request builder for SecurityLabelsRoot
type SecurityLabelsRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityLabelsRootRequest
func (b *SecurityLabelsRootRequestBuilder) Request() *SecurityLabelsRootRequest {
	return &SecurityLabelsRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityLabelsRootRequest is request for SecurityLabelsRoot
type SecurityLabelsRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityLabelsRoot
func (r *SecurityLabelsRootRequest) Get(ctx context.Context) (resObj *SecurityLabelsRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityLabelsRoot
func (r *SecurityLabelsRootRequest) Update(ctx context.Context, reqObj *SecurityLabelsRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityLabelsRoot
func (r *SecurityLabelsRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityProviderStatusRequestBuilder is request builder for SecurityProviderStatus
type SecurityProviderStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityProviderStatusRequest
func (b *SecurityProviderStatusRequestBuilder) Request() *SecurityProviderStatusRequest {
	return &SecurityProviderStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityProviderStatusRequest is request for SecurityProviderStatus
type SecurityProviderStatusRequest struct{ BaseRequest }

// Get performs GET request for SecurityProviderStatus
func (r *SecurityProviderStatusRequest) Get(ctx context.Context) (resObj *SecurityProviderStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityProviderStatus
func (r *SecurityProviderStatusRequest) Update(ctx context.Context, reqObj *SecurityProviderStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityProviderStatus
func (r *SecurityProviderStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityReportsRootRequestBuilder is request builder for SecurityReportsRoot
type SecurityReportsRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityReportsRootRequest
func (b *SecurityReportsRootRequestBuilder) Request() *SecurityReportsRootRequest {
	return &SecurityReportsRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityReportsRootRequest is request for SecurityReportsRoot
type SecurityReportsRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Get(ctx context.Context) (resObj *SecurityReportsRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Update(ctx context.Context, reqObj *SecurityReportsRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityResourceRequestBuilder is request builder for SecurityResource
type SecurityResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityResourceRequest
func (b *SecurityResourceRequestBuilder) Request() *SecurityResourceRequest {
	return &SecurityResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityResourceRequest is request for SecurityResource
type SecurityResourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityResource
func (r *SecurityResourceRequest) Get(ctx context.Context) (resObj *SecurityResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityResource
func (r *SecurityResourceRequest) Update(ctx context.Context, reqObj *SecurityResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityResource
func (r *SecurityResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySecurityRequestBuilder is request builder for SecuritySecurity
type SecuritySecurityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySecurityRequest
func (b *SecuritySecurityRequestBuilder) Request() *SecuritySecurityRequest {
	return &SecuritySecurityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySecurityRequest is request for SecuritySecurity
type SecuritySecurityRequest struct{ BaseRequest }

// Get performs GET request for SecuritySecurity
func (r *SecuritySecurityRequest) Get(ctx context.Context) (resObj *SecuritySecurity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySecurity
func (r *SecuritySecurityRequest) Update(ctx context.Context, reqObj *SecuritySecurity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySecurity
func (r *SecuritySecurityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityThreatIntelligenceRequestBuilder is request builder for SecurityThreatIntelligence
type SecurityThreatIntelligenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityThreatIntelligenceRequest
func (b *SecurityThreatIntelligenceRequestBuilder) Request() *SecurityThreatIntelligenceRequest {
	return &SecurityThreatIntelligenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityThreatIntelligenceRequest is request for SecurityThreatIntelligence
type SecurityThreatIntelligenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityThreatIntelligence
func (r *SecurityThreatIntelligenceRequest) Get(ctx context.Context) (resObj *SecurityThreatIntelligence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityThreatIntelligence
func (r *SecurityThreatIntelligenceRequest) Update(ctx context.Context, reqObj *SecurityThreatIntelligence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityThreatIntelligence
func (r *SecurityThreatIntelligenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityThreatSubmissionRootRequestBuilder is request builder for SecurityThreatSubmissionRoot
type SecurityThreatSubmissionRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityThreatSubmissionRootRequest
func (b *SecurityThreatSubmissionRootRequestBuilder) Request() *SecurityThreatSubmissionRootRequest {
	return &SecurityThreatSubmissionRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityThreatSubmissionRootRequest is request for SecurityThreatSubmissionRoot
type SecurityThreatSubmissionRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityThreatSubmissionRoot
func (r *SecurityThreatSubmissionRootRequest) Get(ctx context.Context) (resObj *SecurityThreatSubmissionRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityThreatSubmissionRoot
func (r *SecurityThreatSubmissionRootRequest) Update(ctx context.Context, reqObj *SecurityThreatSubmissionRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityThreatSubmissionRoot
func (r *SecurityThreatSubmissionRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTriggerTypesRootRequestBuilder is request builder for SecurityTriggerTypesRoot
type SecurityTriggerTypesRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTriggerTypesRootRequest
func (b *SecurityTriggerTypesRootRequestBuilder) Request() *SecurityTriggerTypesRootRequest {
	return &SecurityTriggerTypesRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTriggerTypesRootRequest is request for SecurityTriggerTypesRoot
type SecurityTriggerTypesRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityTriggerTypesRoot
func (r *SecurityTriggerTypesRootRequest) Get(ctx context.Context) (resObj *SecurityTriggerTypesRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTriggerTypesRoot
func (r *SecurityTriggerTypesRootRequest) Update(ctx context.Context, reqObj *SecurityTriggerTypesRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTriggerTypesRoot
func (r *SecurityTriggerTypesRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTriggersRootRequestBuilder is request builder for SecurityTriggersRoot
type SecurityTriggersRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTriggersRootRequest
func (b *SecurityTriggersRootRequestBuilder) Request() *SecurityTriggersRootRequest {
	return &SecurityTriggersRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTriggersRootRequest is request for SecurityTriggersRoot
type SecurityTriggersRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityTriggersRoot
func (r *SecurityTriggersRootRequest) Get(ctx context.Context) (resObj *SecurityTriggersRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTriggersRoot
func (r *SecurityTriggersRootRequest) Update(ctx context.Context, reqObj *SecurityTriggersRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTriggersRoot
func (r *SecurityTriggersRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityVendorInformationRequestBuilder is request builder for SecurityVendorInformation
type SecurityVendorInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityVendorInformationRequest
func (b *SecurityVendorInformationRequestBuilder) Request() *SecurityVendorInformationRequest {
	return &SecurityVendorInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityVendorInformationRequest is request for SecurityVendorInformation
type SecurityVendorInformationRequest struct{ BaseRequest }

// Get performs GET request for SecurityVendorInformation
func (r *SecurityVendorInformationRequest) Get(ctx context.Context) (resObj *SecurityVendorInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityVendorInformation
func (r *SecurityVendorInformationRequest) Update(ctx context.Context, reqObj *SecurityVendorInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityVendorInformation
func (r *SecurityVendorInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type SecurityActionCancelSecurityActionRequestBuilder struct{ BaseRequestBuilder }

// CancelSecurityAction action undocumentedrav
func (b *SecurityActionRequestBuilder) CancelSecurityAction(reqObj *SecurityActionCancelSecurityActionRequestParameter) *SecurityActionCancelSecurityActionRequestBuilder {
	bb := &SecurityActionCancelSecurityActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CancelSecurityAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityActionCancelSecurityActionRequest struct{ BaseRequest }

func (b *SecurityActionCancelSecurityActionRequestBuilder) Request() *SecurityActionCancelSecurityActionRequest {
	return &SecurityActionCancelSecurityActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityActionCancelSecurityActionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

// SecurityAddContentFooterActionRequestBuilder is request builder for SecurityAddContentFooterAction
type SecurityAddContentFooterActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAddContentFooterActionRequest
func (b *SecurityAddContentFooterActionRequestBuilder) Request() *SecurityAddContentFooterActionRequest {
	return &SecurityAddContentFooterActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAddContentFooterActionRequest is request for SecurityAddContentFooterAction
type SecurityAddContentFooterActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityAddContentFooterAction
func (r *SecurityAddContentFooterActionRequest) Get(ctx context.Context) (resObj *SecurityAddContentFooterAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAddContentFooterAction
func (r *SecurityAddContentFooterActionRequest) Update(ctx context.Context, reqObj *SecurityAddContentFooterAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAddContentFooterAction
func (r *SecurityAddContentFooterActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAddContentHeaderActionRequestBuilder is request builder for SecurityAddContentHeaderAction
type SecurityAddContentHeaderActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAddContentHeaderActionRequest
func (b *SecurityAddContentHeaderActionRequestBuilder) Request() *SecurityAddContentHeaderActionRequest {
	return &SecurityAddContentHeaderActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAddContentHeaderActionRequest is request for SecurityAddContentHeaderAction
type SecurityAddContentHeaderActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityAddContentHeaderAction
func (r *SecurityAddContentHeaderActionRequest) Get(ctx context.Context) (resObj *SecurityAddContentHeaderAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAddContentHeaderAction
func (r *SecurityAddContentHeaderActionRequest) Update(ctx context.Context, reqObj *SecurityAddContentHeaderAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAddContentHeaderAction
func (r *SecurityAddContentHeaderActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAddWatermarkActionRequestBuilder is request builder for SecurityAddWatermarkAction
type SecurityAddWatermarkActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAddWatermarkActionRequest
func (b *SecurityAddWatermarkActionRequestBuilder) Request() *SecurityAddWatermarkActionRequest {
	return &SecurityAddWatermarkActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAddWatermarkActionRequest is request for SecurityAddWatermarkAction
type SecurityAddWatermarkActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityAddWatermarkAction
func (r *SecurityAddWatermarkActionRequest) Get(ctx context.Context) (resObj *SecurityAddWatermarkAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAddWatermarkAction
func (r *SecurityAddWatermarkActionRequest) Update(ctx context.Context, reqObj *SecurityAddWatermarkAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAddWatermarkAction
func (r *SecurityAddWatermarkActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAlertCommentRequestBuilder is request builder for SecurityAlertComment
type SecurityAlertCommentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAlertCommentRequest
func (b *SecurityAlertCommentRequestBuilder) Request() *SecurityAlertCommentRequest {
	return &SecurityAlertCommentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAlertCommentRequest is request for SecurityAlertComment
type SecurityAlertCommentRequest struct{ BaseRequest }

// Get performs GET request for SecurityAlertComment
func (r *SecurityAlertCommentRequest) Get(ctx context.Context) (resObj *SecurityAlertComment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAlertComment
func (r *SecurityAlertCommentRequest) Update(ctx context.Context, reqObj *SecurityAlertComment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAlertComment
func (r *SecurityAlertCommentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAlertEvidenceRequestBuilder is request builder for SecurityAlertEvidence
type SecurityAlertEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAlertEvidenceRequest
func (b *SecurityAlertEvidenceRequestBuilder) Request() *SecurityAlertEvidenceRequest {
	return &SecurityAlertEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAlertEvidenceRequest is request for SecurityAlertEvidence
type SecurityAlertEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityAlertEvidence
func (r *SecurityAlertEvidenceRequest) Get(ctx context.Context) (resObj *SecurityAlertEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAlertEvidence
func (r *SecurityAlertEvidenceRequest) Update(ctx context.Context, reqObj *SecurityAlertEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAlertEvidence
func (r *SecurityAlertEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAnalyzedMessageEvidenceRequestBuilder is request builder for SecurityAnalyzedMessageEvidence
type SecurityAnalyzedMessageEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAnalyzedMessageEvidenceRequest
func (b *SecurityAnalyzedMessageEvidenceRequestBuilder) Request() *SecurityAnalyzedMessageEvidenceRequest {
	return &SecurityAnalyzedMessageEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAnalyzedMessageEvidenceRequest is request for SecurityAnalyzedMessageEvidence
type SecurityAnalyzedMessageEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityAnalyzedMessageEvidence
func (r *SecurityAnalyzedMessageEvidenceRequest) Get(ctx context.Context) (resObj *SecurityAnalyzedMessageEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAnalyzedMessageEvidence
func (r *SecurityAnalyzedMessageEvidenceRequest) Update(ctx context.Context, reqObj *SecurityAnalyzedMessageEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAnalyzedMessageEvidence
func (r *SecurityAnalyzedMessageEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityApplyLabelActionRequestBuilder is request builder for SecurityApplyLabelAction
type SecurityApplyLabelActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityApplyLabelActionRequest
func (b *SecurityApplyLabelActionRequestBuilder) Request() *SecurityApplyLabelActionRequest {
	return &SecurityApplyLabelActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityApplyLabelActionRequest is request for SecurityApplyLabelAction
type SecurityApplyLabelActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityApplyLabelAction
func (r *SecurityApplyLabelActionRequest) Get(ctx context.Context) (resObj *SecurityApplyLabelAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityApplyLabelAction
func (r *SecurityApplyLabelActionRequest) Update(ctx context.Context, reqObj *SecurityApplyLabelAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityApplyLabelAction
func (r *SecurityApplyLabelActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityArticleRequestBuilder is request builder for SecurityArticle
type SecurityArticleRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityArticleRequest
func (b *SecurityArticleRequestBuilder) Request() *SecurityArticleRequest {
	return &SecurityArticleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityArticleRequest is request for SecurityArticle
type SecurityArticleRequest struct{ BaseRequest }

// Get performs GET request for SecurityArticle
func (r *SecurityArticleRequest) Get(ctx context.Context) (resObj *SecurityArticle, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityArticle
func (r *SecurityArticleRequest) Update(ctx context.Context, reqObj *SecurityArticle) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityArticle
func (r *SecurityArticleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityArticleIndicatorRequestBuilder is request builder for SecurityArticleIndicator
type SecurityArticleIndicatorRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityArticleIndicatorRequest
func (b *SecurityArticleIndicatorRequestBuilder) Request() *SecurityArticleIndicatorRequest {
	return &SecurityArticleIndicatorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityArticleIndicatorRequest is request for SecurityArticleIndicator
type SecurityArticleIndicatorRequest struct{ BaseRequest }

// Get performs GET request for SecurityArticleIndicator
func (r *SecurityArticleIndicatorRequest) Get(ctx context.Context) (resObj *SecurityArticleIndicator, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityArticleIndicator
func (r *SecurityArticleIndicatorRequest) Update(ctx context.Context, reqObj *SecurityArticleIndicator) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityArticleIndicator
func (r *SecurityArticleIndicatorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityArtifactRequestBuilder is request builder for SecurityArtifact
type SecurityArtifactRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityArtifactRequest
func (b *SecurityArtifactRequestBuilder) Request() *SecurityArtifactRequest {
	return &SecurityArtifactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityArtifactRequest is request for SecurityArtifact
type SecurityArtifactRequest struct{ BaseRequest }

// Get performs GET request for SecurityArtifact
func (r *SecurityArtifactRequest) Get(ctx context.Context) (resObj *SecurityArtifact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityArtifact
func (r *SecurityArtifactRequest) Update(ctx context.Context, reqObj *SecurityArtifact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityArtifact
func (r *SecurityArtifactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAttackSimulationInfoRequestBuilder is request builder for SecurityAttackSimulationInfo
type SecurityAttackSimulationInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAttackSimulationInfoRequest
func (b *SecurityAttackSimulationInfoRequestBuilder) Request() *SecurityAttackSimulationInfoRequest {
	return &SecurityAttackSimulationInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAttackSimulationInfoRequest is request for SecurityAttackSimulationInfo
type SecurityAttackSimulationInfoRequest struct{ BaseRequest }

// Get performs GET request for SecurityAttackSimulationInfo
func (r *SecurityAttackSimulationInfoRequest) Get(ctx context.Context) (resObj *SecurityAttackSimulationInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAttackSimulationInfo
func (r *SecurityAttackSimulationInfoRequest) Update(ctx context.Context, reqObj *SecurityAttackSimulationInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAttackSimulationInfo
func (r *SecurityAttackSimulationInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAutonomousSystemRequestBuilder is request builder for SecurityAutonomousSystem
type SecurityAutonomousSystemRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAutonomousSystemRequest
func (b *SecurityAutonomousSystemRequestBuilder) Request() *SecurityAutonomousSystemRequest {
	return &SecurityAutonomousSystemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAutonomousSystemRequest is request for SecurityAutonomousSystem
type SecurityAutonomousSystemRequest struct{ BaseRequest }

// Get performs GET request for SecurityAutonomousSystem
func (r *SecurityAutonomousSystemRequest) Get(ctx context.Context) (resObj *SecurityAutonomousSystem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAutonomousSystem
func (r *SecurityAutonomousSystemRequest) Update(ctx context.Context, reqObj *SecurityAutonomousSystem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAutonomousSystem
func (r *SecurityAutonomousSystemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBufferDecryptionResultRequestBuilder is request builder for SecurityBufferDecryptionResult
type SecurityBufferDecryptionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBufferDecryptionResultRequest
func (b *SecurityBufferDecryptionResultRequestBuilder) Request() *SecurityBufferDecryptionResultRequest {
	return &SecurityBufferDecryptionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBufferDecryptionResultRequest is request for SecurityBufferDecryptionResult
type SecurityBufferDecryptionResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityBufferDecryptionResult
func (r *SecurityBufferDecryptionResultRequest) Get(ctx context.Context) (resObj *SecurityBufferDecryptionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBufferDecryptionResult
func (r *SecurityBufferDecryptionResultRequest) Update(ctx context.Context, reqObj *SecurityBufferDecryptionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBufferDecryptionResult
func (r *SecurityBufferDecryptionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityBufferEncryptionResultRequestBuilder is request builder for SecurityBufferEncryptionResult
type SecurityBufferEncryptionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBufferEncryptionResultRequest
func (b *SecurityBufferEncryptionResultRequestBuilder) Request() *SecurityBufferEncryptionResultRequest {
	return &SecurityBufferEncryptionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBufferEncryptionResultRequest is request for SecurityBufferEncryptionResult
type SecurityBufferEncryptionResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityBufferEncryptionResult
func (r *SecurityBufferEncryptionResultRequest) Get(ctx context.Context) (resObj *SecurityBufferEncryptionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityBufferEncryptionResult
func (r *SecurityBufferEncryptionResultRequest) Update(ctx context.Context, reqObj *SecurityBufferEncryptionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityBufferEncryptionResult
func (r *SecurityBufferEncryptionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCaseRequestBuilder is request builder for SecurityCase
type SecurityCaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCaseRequest
func (b *SecurityCaseRequestBuilder) Request() *SecurityCaseRequest {
	return &SecurityCaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCaseRequest is request for SecurityCase
type SecurityCaseRequest struct{ BaseRequest }

// Get performs GET request for SecurityCase
func (r *SecurityCaseRequest) Get(ctx context.Context) (resObj *SecurityCase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCase
func (r *SecurityCaseRequest) Update(ctx context.Context, reqObj *SecurityCase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCase
func (r *SecurityCaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCaseOperationRequestBuilder is request builder for SecurityCaseOperation
type SecurityCaseOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCaseOperationRequest
func (b *SecurityCaseOperationRequestBuilder) Request() *SecurityCaseOperationRequest {
	return &SecurityCaseOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCaseOperationRequest is request for SecurityCaseOperation
type SecurityCaseOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Get(ctx context.Context) (resObj *SecurityCaseOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Update(ctx context.Context, reqObj *SecurityCaseOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityClassificationResultRequestBuilder is request builder for SecurityClassificationResult
type SecurityClassificationResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityClassificationResultRequest
func (b *SecurityClassificationResultRequestBuilder) Request() *SecurityClassificationResultRequest {
	return &SecurityClassificationResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityClassificationResultRequest is request for SecurityClassificationResult
type SecurityClassificationResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityClassificationResult
func (r *SecurityClassificationResultRequest) Get(ctx context.Context) (resObj *SecurityClassificationResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityClassificationResult
func (r *SecurityClassificationResultRequest) Update(ctx context.Context, reqObj *SecurityClassificationResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityClassificationResult
func (r *SecurityClassificationResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCloudApplicationEvidenceRequestBuilder is request builder for SecurityCloudApplicationEvidence
type SecurityCloudApplicationEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCloudApplicationEvidenceRequest
func (b *SecurityCloudApplicationEvidenceRequestBuilder) Request() *SecurityCloudApplicationEvidenceRequest {
	return &SecurityCloudApplicationEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCloudApplicationEvidenceRequest is request for SecurityCloudApplicationEvidence
type SecurityCloudApplicationEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityCloudApplicationEvidence
func (r *SecurityCloudApplicationEvidenceRequest) Get(ctx context.Context) (resObj *SecurityCloudApplicationEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCloudApplicationEvidence
func (r *SecurityCloudApplicationEvidenceRequest) Update(ctx context.Context, reqObj *SecurityCloudApplicationEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCloudApplicationEvidence
func (r *SecurityCloudApplicationEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityContentInfoRequestBuilder is request builder for SecurityContentInfo
type SecurityContentInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityContentInfoRequest
func (b *SecurityContentInfoRequestBuilder) Request() *SecurityContentInfoRequest {
	return &SecurityContentInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityContentInfoRequest is request for SecurityContentInfo
type SecurityContentInfoRequest struct{ BaseRequest }

// Get performs GET request for SecurityContentInfo
func (r *SecurityContentInfoRequest) Get(ctx context.Context) (resObj *SecurityContentInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityContentInfo
func (r *SecurityContentInfoRequest) Update(ctx context.Context, reqObj *SecurityContentInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityContentInfo
func (r *SecurityContentInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityContentLabelRequestBuilder is request builder for SecurityContentLabel
type SecurityContentLabelRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityContentLabelRequest
func (b *SecurityContentLabelRequestBuilder) Request() *SecurityContentLabelRequest {
	return &SecurityContentLabelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityContentLabelRequest is request for SecurityContentLabel
type SecurityContentLabelRequest struct{ BaseRequest }

// Get performs GET request for SecurityContentLabel
func (r *SecurityContentLabelRequest) Get(ctx context.Context) (resObj *SecurityContentLabel, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityContentLabel
func (r *SecurityContentLabelRequest) Update(ctx context.Context, reqObj *SecurityContentLabel) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityContentLabel
func (r *SecurityContentLabelRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCustomActionRequestBuilder is request builder for SecurityCustomAction
type SecurityCustomActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCustomActionRequest
func (b *SecurityCustomActionRequestBuilder) Request() *SecurityCustomActionRequest {
	return &SecurityCustomActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCustomActionRequest is request for SecurityCustomAction
type SecurityCustomActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityCustomAction
func (r *SecurityCustomActionRequest) Get(ctx context.Context) (resObj *SecurityCustomAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCustomAction
func (r *SecurityCustomActionRequest) Update(ctx context.Context, reqObj *SecurityCustomAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCustomAction
func (r *SecurityCustomActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCvssSummaryRequestBuilder is request builder for SecurityCvssSummary
type SecurityCvssSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCvssSummaryRequest
func (b *SecurityCvssSummaryRequestBuilder) Request() *SecurityCvssSummaryRequest {
	return &SecurityCvssSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCvssSummaryRequest is request for SecurityCvssSummary
type SecurityCvssSummaryRequest struct{ BaseRequest }

// Get performs GET request for SecurityCvssSummary
func (r *SecurityCvssSummaryRequest) Get(ctx context.Context) (resObj *SecurityCvssSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCvssSummary
func (r *SecurityCvssSummaryRequest) Update(ctx context.Context, reqObj *SecurityCvssSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCvssSummary
func (r *SecurityCvssSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDataSetRequestBuilder is request builder for SecurityDataSet
type SecurityDataSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDataSetRequest
func (b *SecurityDataSetRequestBuilder) Request() *SecurityDataSetRequest {
	return &SecurityDataSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDataSetRequest is request for SecurityDataSet
type SecurityDataSetRequest struct{ BaseRequest }

// Get performs GET request for SecurityDataSet
func (r *SecurityDataSetRequest) Get(ctx context.Context) (resObj *SecurityDataSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDataSet
func (r *SecurityDataSetRequest) Update(ctx context.Context, reqObj *SecurityDataSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDataSet
func (r *SecurityDataSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDataSourceRequestBuilder is request builder for SecurityDataSource
type SecurityDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDataSourceRequest
func (b *SecurityDataSourceRequestBuilder) Request() *SecurityDataSourceRequest {
	return &SecurityDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDataSourceRequest is request for SecurityDataSource
type SecurityDataSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityDataSource
func (r *SecurityDataSourceRequest) Get(ctx context.Context) (resObj *SecurityDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDataSource
func (r *SecurityDataSourceRequest) Update(ctx context.Context, reqObj *SecurityDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDataSource
func (r *SecurityDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDataSourceContainerRequestBuilder is request builder for SecurityDataSourceContainer
type SecurityDataSourceContainerRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDataSourceContainerRequest
func (b *SecurityDataSourceContainerRequestBuilder) Request() *SecurityDataSourceContainerRequest {
	return &SecurityDataSourceContainerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDataSourceContainerRequest is request for SecurityDataSourceContainer
type SecurityDataSourceContainerRequest struct{ BaseRequest }

// Get performs GET request for SecurityDataSourceContainer
func (r *SecurityDataSourceContainerRequest) Get(ctx context.Context) (resObj *SecurityDataSourceContainer, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDataSourceContainer
func (r *SecurityDataSourceContainerRequest) Update(ctx context.Context, reqObj *SecurityDataSourceContainer) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDataSourceContainer
func (r *SecurityDataSourceContainerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDeviceEvidenceRequestBuilder is request builder for SecurityDeviceEvidence
type SecurityDeviceEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDeviceEvidenceRequest
func (b *SecurityDeviceEvidenceRequestBuilder) Request() *SecurityDeviceEvidenceRequest {
	return &SecurityDeviceEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDeviceEvidenceRequest is request for SecurityDeviceEvidence
type SecurityDeviceEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityDeviceEvidence
func (r *SecurityDeviceEvidenceRequest) Get(ctx context.Context) (resObj *SecurityDeviceEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDeviceEvidence
func (r *SecurityDeviceEvidenceRequest) Update(ctx context.Context, reqObj *SecurityDeviceEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDeviceEvidence
func (r *SecurityDeviceEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDispositionReviewStageRequestBuilder is request builder for SecurityDispositionReviewStage
type SecurityDispositionReviewStageRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDispositionReviewStageRequest
func (b *SecurityDispositionReviewStageRequestBuilder) Request() *SecurityDispositionReviewStageRequest {
	return &SecurityDispositionReviewStageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDispositionReviewStageRequest is request for SecurityDispositionReviewStage
type SecurityDispositionReviewStageRequest struct{ BaseRequest }

// Get performs GET request for SecurityDispositionReviewStage
func (r *SecurityDispositionReviewStageRequest) Get(ctx context.Context) (resObj *SecurityDispositionReviewStage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDispositionReviewStage
func (r *SecurityDispositionReviewStageRequest) Update(ctx context.Context, reqObj *SecurityDispositionReviewStage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDispositionReviewStage
func (r *SecurityDispositionReviewStageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDowngradeJustificationRequestBuilder is request builder for SecurityDowngradeJustification
type SecurityDowngradeJustificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDowngradeJustificationRequest
func (b *SecurityDowngradeJustificationRequestBuilder) Request() *SecurityDowngradeJustificationRequest {
	return &SecurityDowngradeJustificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDowngradeJustificationRequest is request for SecurityDowngradeJustification
type SecurityDowngradeJustificationRequest struct{ BaseRequest }

// Get performs GET request for SecurityDowngradeJustification
func (r *SecurityDowngradeJustificationRequest) Get(ctx context.Context) (resObj *SecurityDowngradeJustification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDowngradeJustification
func (r *SecurityDowngradeJustificationRequest) Update(ctx context.Context, reqObj *SecurityDowngradeJustification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDowngradeJustification
func (r *SecurityDowngradeJustificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryAddToReviewSetOperationRequestBuilder is request builder for SecurityEdiscoveryAddToReviewSetOperation
type SecurityEdiscoveryAddToReviewSetOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryAddToReviewSetOperationRequest
func (b *SecurityEdiscoveryAddToReviewSetOperationRequestBuilder) Request() *SecurityEdiscoveryAddToReviewSetOperationRequest {
	return &SecurityEdiscoveryAddToReviewSetOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryAddToReviewSetOperationRequest is request for SecurityEdiscoveryAddToReviewSetOperation
type SecurityEdiscoveryAddToReviewSetOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryAddToReviewSetOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryAddToReviewSetOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCaseRequestBuilder is request builder for SecurityEdiscoveryCase
type SecurityEdiscoveryCaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCaseRequest
func (b *SecurityEdiscoveryCaseRequestBuilder) Request() *SecurityEdiscoveryCaseRequest {
	return &SecurityEdiscoveryCaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCaseRequest is request for SecurityEdiscoveryCase
type SecurityEdiscoveryCaseRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCaseSettingsRequestBuilder is request builder for SecurityEdiscoveryCaseSettings
type SecurityEdiscoveryCaseSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCaseSettingsRequest
func (b *SecurityEdiscoveryCaseSettingsRequestBuilder) Request() *SecurityEdiscoveryCaseSettingsRequest {
	return &SecurityEdiscoveryCaseSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCaseSettingsRequest is request for SecurityEdiscoveryCaseSettings
type SecurityEdiscoveryCaseSettingsRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCaseSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCaseSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCustodianRequestBuilder is request builder for SecurityEdiscoveryCustodian
type SecurityEdiscoveryCustodianRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCustodianRequest
func (b *SecurityEdiscoveryCustodianRequestBuilder) Request() *SecurityEdiscoveryCustodianRequest {
	return &SecurityEdiscoveryCustodianRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCustodianRequest is request for SecurityEdiscoveryCustodian
type SecurityEdiscoveryCustodianRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCustodian, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCustodian) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryEstimateOperationRequestBuilder is request builder for SecurityEdiscoveryEstimateOperation
type SecurityEdiscoveryEstimateOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryEstimateOperationRequest
func (b *SecurityEdiscoveryEstimateOperationRequestBuilder) Request() *SecurityEdiscoveryEstimateOperationRequest {
	return &SecurityEdiscoveryEstimateOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryEstimateOperationRequest is request for SecurityEdiscoveryEstimateOperation
type SecurityEdiscoveryEstimateOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryEstimateOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryEstimateOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryExportOperationRequestBuilder is request builder for SecurityEdiscoveryExportOperation
type SecurityEdiscoveryExportOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryExportOperationRequest
func (b *SecurityEdiscoveryExportOperationRequestBuilder) Request() *SecurityEdiscoveryExportOperationRequest {
	return &SecurityEdiscoveryExportOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryExportOperationRequest is request for SecurityEdiscoveryExportOperation
type SecurityEdiscoveryExportOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryExportOperation
func (r *SecurityEdiscoveryExportOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryExportOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryExportOperation
func (r *SecurityEdiscoveryExportOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryExportOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryExportOperation
func (r *SecurityEdiscoveryExportOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryFileRequestBuilder is request builder for SecurityEdiscoveryFile
type SecurityEdiscoveryFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryFileRequest
func (b *SecurityEdiscoveryFileRequestBuilder) Request() *SecurityEdiscoveryFileRequest {
	return &SecurityEdiscoveryFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryFileRequest is request for SecurityEdiscoveryFile
type SecurityEdiscoveryFileRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryFile
func (r *SecurityEdiscoveryFileRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryFile
func (r *SecurityEdiscoveryFileRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryFile
func (r *SecurityEdiscoveryFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryHoldOperationRequestBuilder is request builder for SecurityEdiscoveryHoldOperation
type SecurityEdiscoveryHoldOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryHoldOperationRequest
func (b *SecurityEdiscoveryHoldOperationRequestBuilder) Request() *SecurityEdiscoveryHoldOperationRequest {
	return &SecurityEdiscoveryHoldOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryHoldOperationRequest is request for SecurityEdiscoveryHoldOperation
type SecurityEdiscoveryHoldOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryHoldOperation
func (r *SecurityEdiscoveryHoldOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryHoldOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryHoldOperation
func (r *SecurityEdiscoveryHoldOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryHoldOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryHoldOperation
func (r *SecurityEdiscoveryHoldOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryHoldPolicyRequestBuilder is request builder for SecurityEdiscoveryHoldPolicy
type SecurityEdiscoveryHoldPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryHoldPolicyRequest
func (b *SecurityEdiscoveryHoldPolicyRequestBuilder) Request() *SecurityEdiscoveryHoldPolicyRequest {
	return &SecurityEdiscoveryHoldPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryHoldPolicyRequest is request for SecurityEdiscoveryHoldPolicy
type SecurityEdiscoveryHoldPolicyRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryHoldPolicy
func (r *SecurityEdiscoveryHoldPolicyRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryHoldPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryHoldPolicy
func (r *SecurityEdiscoveryHoldPolicyRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryHoldPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryHoldPolicy
func (r *SecurityEdiscoveryHoldPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryIndexOperationRequestBuilder is request builder for SecurityEdiscoveryIndexOperation
type SecurityEdiscoveryIndexOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryIndexOperationRequest
func (b *SecurityEdiscoveryIndexOperationRequestBuilder) Request() *SecurityEdiscoveryIndexOperationRequest {
	return &SecurityEdiscoveryIndexOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryIndexOperationRequest is request for SecurityEdiscoveryIndexOperation
type SecurityEdiscoveryIndexOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryIndexOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryIndexOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryNoncustodialDataSourceRequestBuilder is request builder for SecurityEdiscoveryNoncustodialDataSource
type SecurityEdiscoveryNoncustodialDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryNoncustodialDataSourceRequest
func (b *SecurityEdiscoveryNoncustodialDataSourceRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryNoncustodialDataSourceRequest is request for SecurityEdiscoveryNoncustodialDataSource
type SecurityEdiscoveryNoncustodialDataSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryNoncustodialDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryNoncustodialDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryPurgeDataOperationRequestBuilder is request builder for SecurityEdiscoveryPurgeDataOperation
type SecurityEdiscoveryPurgeDataOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryPurgeDataOperationRequest
func (b *SecurityEdiscoveryPurgeDataOperationRequestBuilder) Request() *SecurityEdiscoveryPurgeDataOperationRequest {
	return &SecurityEdiscoveryPurgeDataOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryPurgeDataOperationRequest is request for SecurityEdiscoveryPurgeDataOperation
type SecurityEdiscoveryPurgeDataOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryPurgeDataOperation
func (r *SecurityEdiscoveryPurgeDataOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryPurgeDataOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryPurgeDataOperation
func (r *SecurityEdiscoveryPurgeDataOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryPurgeDataOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryPurgeDataOperation
func (r *SecurityEdiscoveryPurgeDataOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewSetRequestBuilder is request builder for SecurityEdiscoveryReviewSet
type SecurityEdiscoveryReviewSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewSetRequest
func (b *SecurityEdiscoveryReviewSetRequestBuilder) Request() *SecurityEdiscoveryReviewSetRequest {
	return &SecurityEdiscoveryReviewSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewSetRequest is request for SecurityEdiscoveryReviewSet
type SecurityEdiscoveryReviewSetRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewSetQueryRequestBuilder is request builder for SecurityEdiscoveryReviewSetQuery
type SecurityEdiscoveryReviewSetQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewSetQueryRequest
func (b *SecurityEdiscoveryReviewSetQueryRequestBuilder) Request() *SecurityEdiscoveryReviewSetQueryRequest {
	return &SecurityEdiscoveryReviewSetQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewSetQueryRequest is request for SecurityEdiscoveryReviewSetQuery
type SecurityEdiscoveryReviewSetQueryRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewSetQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewSetQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewTagRequestBuilder is request builder for SecurityEdiscoveryReviewTag
type SecurityEdiscoveryReviewTagRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewTagRequest
func (b *SecurityEdiscoveryReviewTagRequestBuilder) Request() *SecurityEdiscoveryReviewTagRequest {
	return &SecurityEdiscoveryReviewTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewTagRequest is request for SecurityEdiscoveryReviewTag
type SecurityEdiscoveryReviewTagRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewTag, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewTag) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoverySearchRequestBuilder is request builder for SecurityEdiscoverySearch
type SecurityEdiscoverySearchRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoverySearchRequest
func (b *SecurityEdiscoverySearchRequestBuilder) Request() *SecurityEdiscoverySearchRequest {
	return &SecurityEdiscoverySearchRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoverySearchRequest is request for SecurityEdiscoverySearch
type SecurityEdiscoverySearchRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Get(ctx context.Context) (resObj *SecurityEdiscoverySearch, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Update(ctx context.Context, reqObj *SecurityEdiscoverySearch) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryTagOperationRequestBuilder is request builder for SecurityEdiscoveryTagOperation
type SecurityEdiscoveryTagOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryTagOperationRequest
func (b *SecurityEdiscoveryTagOperationRequestBuilder) Request() *SecurityEdiscoveryTagOperationRequest {
	return &SecurityEdiscoveryTagOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryTagOperationRequest is request for SecurityEdiscoveryTagOperation
type SecurityEdiscoveryTagOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryTagOperation
func (r *SecurityEdiscoveryTagOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryTagOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryTagOperation
func (r *SecurityEdiscoveryTagOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryTagOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryTagOperation
func (r *SecurityEdiscoveryTagOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEmailContentThreatSubmissionRequestBuilder is request builder for SecurityEmailContentThreatSubmission
type SecurityEmailContentThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEmailContentThreatSubmissionRequest
func (b *SecurityEmailContentThreatSubmissionRequestBuilder) Request() *SecurityEmailContentThreatSubmissionRequest {
	return &SecurityEmailContentThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEmailContentThreatSubmissionRequest is request for SecurityEmailContentThreatSubmission
type SecurityEmailContentThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityEmailContentThreatSubmission
func (r *SecurityEmailContentThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityEmailContentThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEmailContentThreatSubmission
func (r *SecurityEmailContentThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityEmailContentThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEmailContentThreatSubmission
func (r *SecurityEmailContentThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEmailSenderRequestBuilder is request builder for SecurityEmailSender
type SecurityEmailSenderRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEmailSenderRequest
func (b *SecurityEmailSenderRequestBuilder) Request() *SecurityEmailSenderRequest {
	return &SecurityEmailSenderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEmailSenderRequest is request for SecurityEmailSender
type SecurityEmailSenderRequest struct{ BaseRequest }

// Get performs GET request for SecurityEmailSender
func (r *SecurityEmailSenderRequest) Get(ctx context.Context) (resObj *SecurityEmailSender, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEmailSender
func (r *SecurityEmailSenderRequest) Update(ctx context.Context, reqObj *SecurityEmailSender) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEmailSender
func (r *SecurityEmailSenderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEmailThreatSubmissionRequestBuilder is request builder for SecurityEmailThreatSubmission
type SecurityEmailThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEmailThreatSubmissionRequest
func (b *SecurityEmailThreatSubmissionRequestBuilder) Request() *SecurityEmailThreatSubmissionRequest {
	return &SecurityEmailThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEmailThreatSubmissionRequest is request for SecurityEmailThreatSubmission
type SecurityEmailThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityEmailThreatSubmission
func (r *SecurityEmailThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityEmailThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEmailThreatSubmission
func (r *SecurityEmailThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityEmailThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEmailThreatSubmission
func (r *SecurityEmailThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEmailThreatSubmissionPolicyRequestBuilder is request builder for SecurityEmailThreatSubmissionPolicy
type SecurityEmailThreatSubmissionPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEmailThreatSubmissionPolicyRequest
func (b *SecurityEmailThreatSubmissionPolicyRequestBuilder) Request() *SecurityEmailThreatSubmissionPolicyRequest {
	return &SecurityEmailThreatSubmissionPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEmailThreatSubmissionPolicyRequest is request for SecurityEmailThreatSubmissionPolicy
type SecurityEmailThreatSubmissionPolicyRequest struct{ BaseRequest }

// Get performs GET request for SecurityEmailThreatSubmissionPolicy
func (r *SecurityEmailThreatSubmissionPolicyRequest) Get(ctx context.Context) (resObj *SecurityEmailThreatSubmissionPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEmailThreatSubmissionPolicy
func (r *SecurityEmailThreatSubmissionPolicyRequest) Update(ctx context.Context, reqObj *SecurityEmailThreatSubmissionPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEmailThreatSubmissionPolicy
func (r *SecurityEmailThreatSubmissionPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEmailURLThreatSubmissionRequestBuilder is request builder for SecurityEmailURLThreatSubmission
type SecurityEmailURLThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEmailURLThreatSubmissionRequest
func (b *SecurityEmailURLThreatSubmissionRequestBuilder) Request() *SecurityEmailURLThreatSubmissionRequest {
	return &SecurityEmailURLThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEmailURLThreatSubmissionRequest is request for SecurityEmailURLThreatSubmission
type SecurityEmailURLThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityEmailURLThreatSubmission
func (r *SecurityEmailURLThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityEmailURLThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEmailURLThreatSubmission
func (r *SecurityEmailURLThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityEmailURLThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEmailURLThreatSubmission
func (r *SecurityEmailURLThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEventPropagationResultRequestBuilder is request builder for SecurityEventPropagationResult
type SecurityEventPropagationResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEventPropagationResultRequest
func (b *SecurityEventPropagationResultRequestBuilder) Request() *SecurityEventPropagationResultRequest {
	return &SecurityEventPropagationResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEventPropagationResultRequest is request for SecurityEventPropagationResult
type SecurityEventPropagationResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityEventPropagationResult
func (r *SecurityEventPropagationResultRequest) Get(ctx context.Context) (resObj *SecurityEventPropagationResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEventPropagationResult
func (r *SecurityEventPropagationResultRequest) Update(ctx context.Context, reqObj *SecurityEventPropagationResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEventPropagationResult
func (r *SecurityEventPropagationResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEventQueryRequestBuilder is request builder for SecurityEventQuery
type SecurityEventQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEventQueryRequest
func (b *SecurityEventQueryRequestBuilder) Request() *SecurityEventQueryRequest {
	return &SecurityEventQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEventQueryRequest is request for SecurityEventQuery
type SecurityEventQueryRequest struct{ BaseRequest }

// Get performs GET request for SecurityEventQuery
func (r *SecurityEventQueryRequest) Get(ctx context.Context) (resObj *SecurityEventQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEventQuery
func (r *SecurityEventQueryRequest) Update(ctx context.Context, reqObj *SecurityEventQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEventQuery
func (r *SecurityEventQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityExportFileMetadataRequestBuilder is request builder for SecurityExportFileMetadata
type SecurityExportFileMetadataRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityExportFileMetadataRequest
func (b *SecurityExportFileMetadataRequestBuilder) Request() *SecurityExportFileMetadataRequest {
	return &SecurityExportFileMetadataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityExportFileMetadataRequest is request for SecurityExportFileMetadata
type SecurityExportFileMetadataRequest struct{ BaseRequest }

// Get performs GET request for SecurityExportFileMetadata
func (r *SecurityExportFileMetadataRequest) Get(ctx context.Context) (resObj *SecurityExportFileMetadata, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityExportFileMetadata
func (r *SecurityExportFileMetadataRequest) Update(ctx context.Context, reqObj *SecurityExportFileMetadata) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityExportFileMetadata
func (r *SecurityExportFileMetadataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileRequestBuilder is request builder for SecurityFile
type SecurityFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileRequest
func (b *SecurityFileRequestBuilder) Request() *SecurityFileRequest {
	return &SecurityFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileRequest is request for SecurityFile
type SecurityFileRequest struct{ BaseRequest }

// Get performs GET request for SecurityFile
func (r *SecurityFileRequest) Get(ctx context.Context) (resObj *SecurityFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFile
func (r *SecurityFileRequest) Update(ctx context.Context, reqObj *SecurityFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFile
func (r *SecurityFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileContentThreatSubmissionRequestBuilder is request builder for SecurityFileContentThreatSubmission
type SecurityFileContentThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileContentThreatSubmissionRequest
func (b *SecurityFileContentThreatSubmissionRequestBuilder) Request() *SecurityFileContentThreatSubmissionRequest {
	return &SecurityFileContentThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileContentThreatSubmissionRequest is request for SecurityFileContentThreatSubmission
type SecurityFileContentThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityFileContentThreatSubmission
func (r *SecurityFileContentThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityFileContentThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFileContentThreatSubmission
func (r *SecurityFileContentThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityFileContentThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFileContentThreatSubmission
func (r *SecurityFileContentThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileDetailsRequestBuilder is request builder for SecurityFileDetails
type SecurityFileDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileDetailsRequest
func (b *SecurityFileDetailsRequestBuilder) Request() *SecurityFileDetailsRequest {
	return &SecurityFileDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileDetailsRequest is request for SecurityFileDetails
type SecurityFileDetailsRequest struct{ BaseRequest }

// Get performs GET request for SecurityFileDetails
func (r *SecurityFileDetailsRequest) Get(ctx context.Context) (resObj *SecurityFileDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFileDetails
func (r *SecurityFileDetailsRequest) Update(ctx context.Context, reqObj *SecurityFileDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFileDetails
func (r *SecurityFileDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileEvidenceRequestBuilder is request builder for SecurityFileEvidence
type SecurityFileEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileEvidenceRequest
func (b *SecurityFileEvidenceRequestBuilder) Request() *SecurityFileEvidenceRequest {
	return &SecurityFileEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileEvidenceRequest is request for SecurityFileEvidence
type SecurityFileEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityFileEvidence
func (r *SecurityFileEvidenceRequest) Get(ctx context.Context) (resObj *SecurityFileEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFileEvidence
func (r *SecurityFileEvidenceRequest) Update(ctx context.Context, reqObj *SecurityFileEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFileEvidence
func (r *SecurityFileEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileThreatSubmissionRequestBuilder is request builder for SecurityFileThreatSubmission
type SecurityFileThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileThreatSubmissionRequest
func (b *SecurityFileThreatSubmissionRequestBuilder) Request() *SecurityFileThreatSubmissionRequest {
	return &SecurityFileThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileThreatSubmissionRequest is request for SecurityFileThreatSubmission
type SecurityFileThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityFileThreatSubmission
func (r *SecurityFileThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityFileThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFileThreatSubmission
func (r *SecurityFileThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityFileThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFileThreatSubmission
func (r *SecurityFileThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFileURLThreatSubmissionRequestBuilder is request builder for SecurityFileURLThreatSubmission
type SecurityFileURLThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFileURLThreatSubmissionRequest
func (b *SecurityFileURLThreatSubmissionRequestBuilder) Request() *SecurityFileURLThreatSubmissionRequest {
	return &SecurityFileURLThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFileURLThreatSubmissionRequest is request for SecurityFileURLThreatSubmission
type SecurityFileURLThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityFileURLThreatSubmission
func (r *SecurityFileURLThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityFileURLThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFileURLThreatSubmission
func (r *SecurityFileURLThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityFileURLThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFileURLThreatSubmission
func (r *SecurityFileURLThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityFormattedContentRequestBuilder is request builder for SecurityFormattedContent
type SecurityFormattedContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityFormattedContentRequest
func (b *SecurityFormattedContentRequestBuilder) Request() *SecurityFormattedContentRequest {
	return &SecurityFormattedContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityFormattedContentRequest is request for SecurityFormattedContent
type SecurityFormattedContentRequest struct{ BaseRequest }

// Get performs GET request for SecurityFormattedContent
func (r *SecurityFormattedContentRequest) Get(ctx context.Context) (resObj *SecurityFormattedContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityFormattedContent
func (r *SecurityFormattedContentRequest) Update(ctx context.Context, reqObj *SecurityFormattedContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityFormattedContent
func (r *SecurityFormattedContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostRequestBuilder is request builder for SecurityHost
type SecurityHostRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostRequest
func (b *SecurityHostRequestBuilder) Request() *SecurityHostRequest {
	return &SecurityHostRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostRequest is request for SecurityHost
type SecurityHostRequest struct{ BaseRequest }

// Get performs GET request for SecurityHost
func (r *SecurityHostRequest) Get(ctx context.Context) (resObj *SecurityHost, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHost
func (r *SecurityHostRequest) Update(ctx context.Context, reqObj *SecurityHost) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHost
func (r *SecurityHostRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostComponentRequestBuilder is request builder for SecurityHostComponent
type SecurityHostComponentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostComponentRequest
func (b *SecurityHostComponentRequestBuilder) Request() *SecurityHostComponentRequest {
	return &SecurityHostComponentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostComponentRequest is request for SecurityHostComponent
type SecurityHostComponentRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostComponent
func (r *SecurityHostComponentRequest) Get(ctx context.Context) (resObj *SecurityHostComponent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostComponent
func (r *SecurityHostComponentRequest) Update(ctx context.Context, reqObj *SecurityHostComponent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostComponent
func (r *SecurityHostComponentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostCookieRequestBuilder is request builder for SecurityHostCookie
type SecurityHostCookieRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostCookieRequest
func (b *SecurityHostCookieRequestBuilder) Request() *SecurityHostCookieRequest {
	return &SecurityHostCookieRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostCookieRequest is request for SecurityHostCookie
type SecurityHostCookieRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostCookie
func (r *SecurityHostCookieRequest) Get(ctx context.Context) (resObj *SecurityHostCookie, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostCookie
func (r *SecurityHostCookieRequest) Update(ctx context.Context, reqObj *SecurityHostCookie) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostCookie
func (r *SecurityHostCookieRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostReputationRequestBuilder is request builder for SecurityHostReputation
type SecurityHostReputationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostReputationRequest
func (b *SecurityHostReputationRequestBuilder) Request() *SecurityHostReputationRequest {
	return &SecurityHostReputationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostReputationRequest is request for SecurityHostReputation
type SecurityHostReputationRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostReputation
func (r *SecurityHostReputationRequest) Get(ctx context.Context) (resObj *SecurityHostReputation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostReputation
func (r *SecurityHostReputationRequest) Update(ctx context.Context, reqObj *SecurityHostReputation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostReputation
func (r *SecurityHostReputationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostReputationRuleRequestBuilder is request builder for SecurityHostReputationRule
type SecurityHostReputationRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostReputationRuleRequest
func (b *SecurityHostReputationRuleRequestBuilder) Request() *SecurityHostReputationRuleRequest {
	return &SecurityHostReputationRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostReputationRuleRequest is request for SecurityHostReputationRule
type SecurityHostReputationRuleRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostReputationRule
func (r *SecurityHostReputationRuleRequest) Get(ctx context.Context) (resObj *SecurityHostReputationRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostReputationRule
func (r *SecurityHostReputationRuleRequest) Update(ctx context.Context, reqObj *SecurityHostReputationRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostReputationRule
func (r *SecurityHostReputationRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostTrackerRequestBuilder is request builder for SecurityHostTracker
type SecurityHostTrackerRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostTrackerRequest
func (b *SecurityHostTrackerRequestBuilder) Request() *SecurityHostTrackerRequest {
	return &SecurityHostTrackerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostTrackerRequest is request for SecurityHostTracker
type SecurityHostTrackerRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostTracker
func (r *SecurityHostTrackerRequest) Get(ctx context.Context) (resObj *SecurityHostTracker, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostTracker
func (r *SecurityHostTrackerRequest) Update(ctx context.Context, reqObj *SecurityHostTracker) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostTracker
func (r *SecurityHostTrackerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHostnameRequestBuilder is request builder for SecurityHostname
type SecurityHostnameRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHostnameRequest
func (b *SecurityHostnameRequestBuilder) Request() *SecurityHostnameRequest {
	return &SecurityHostnameRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHostnameRequest is request for SecurityHostname
type SecurityHostnameRequest struct{ BaseRequest }

// Get performs GET request for SecurityHostname
func (r *SecurityHostnameRequest) Get(ctx context.Context) (resObj *SecurityHostname, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHostname
func (r *SecurityHostnameRequest) Update(ctx context.Context, reqObj *SecurityHostname) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHostname
func (r *SecurityHostnameRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHuntingQueryResultsRequestBuilder is request builder for SecurityHuntingQueryResults
type SecurityHuntingQueryResultsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHuntingQueryResultsRequest
func (b *SecurityHuntingQueryResultsRequestBuilder) Request() *SecurityHuntingQueryResultsRequest {
	return &SecurityHuntingQueryResultsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHuntingQueryResultsRequest is request for SecurityHuntingQueryResults
type SecurityHuntingQueryResultsRequest struct{ BaseRequest }

// Get performs GET request for SecurityHuntingQueryResults
func (r *SecurityHuntingQueryResultsRequest) Get(ctx context.Context) (resObj *SecurityHuntingQueryResults, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHuntingQueryResults
func (r *SecurityHuntingQueryResultsRequest) Update(ctx context.Context, reqObj *SecurityHuntingQueryResults) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHuntingQueryResults
func (r *SecurityHuntingQueryResultsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHuntingRowResultRequestBuilder is request builder for SecurityHuntingRowResult
type SecurityHuntingRowResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHuntingRowResultRequest
func (b *SecurityHuntingRowResultRequestBuilder) Request() *SecurityHuntingRowResultRequest {
	return &SecurityHuntingRowResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHuntingRowResultRequest is request for SecurityHuntingRowResult
type SecurityHuntingRowResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityHuntingRowResult
func (r *SecurityHuntingRowResultRequest) Get(ctx context.Context) (resObj *SecurityHuntingRowResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHuntingRowResult
func (r *SecurityHuntingRowResultRequest) Update(ctx context.Context, reqObj *SecurityHuntingRowResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHuntingRowResult
func (r *SecurityHuntingRowResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityHyperlinkRequestBuilder is request builder for SecurityHyperlink
type SecurityHyperlinkRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityHyperlinkRequest
func (b *SecurityHyperlinkRequestBuilder) Request() *SecurityHyperlinkRequest {
	return &SecurityHyperlinkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityHyperlinkRequest is request for SecurityHyperlink
type SecurityHyperlinkRequest struct{ BaseRequest }

// Get performs GET request for SecurityHyperlink
func (r *SecurityHyperlinkRequest) Get(ctx context.Context) (resObj *SecurityHyperlink, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityHyperlink
func (r *SecurityHyperlinkRequest) Update(ctx context.Context, reqObj *SecurityHyperlink) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityHyperlink
func (r *SecurityHyperlinkRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIPAddressRequestBuilder is request builder for SecurityIPAddress
type SecurityIPAddressRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIPAddressRequest
func (b *SecurityIPAddressRequestBuilder) Request() *SecurityIPAddressRequest {
	return &SecurityIPAddressRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIPAddressRequest is request for SecurityIPAddress
type SecurityIPAddressRequest struct{ BaseRequest }

// Get performs GET request for SecurityIPAddress
func (r *SecurityIPAddressRequest) Get(ctx context.Context) (resObj *SecurityIPAddress, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIPAddress
func (r *SecurityIPAddressRequest) Update(ctx context.Context, reqObj *SecurityIPAddress) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIPAddress
func (r *SecurityIPAddressRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIPEvidenceRequestBuilder is request builder for SecurityIPEvidence
type SecurityIPEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIPEvidenceRequest
func (b *SecurityIPEvidenceRequestBuilder) Request() *SecurityIPEvidenceRequest {
	return &SecurityIPEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIPEvidenceRequest is request for SecurityIPEvidence
type SecurityIPEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityIPEvidence
func (r *SecurityIPEvidenceRequest) Get(ctx context.Context) (resObj *SecurityIPEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIPEvidence
func (r *SecurityIPEvidenceRequest) Update(ctx context.Context, reqObj *SecurityIPEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIPEvidence
func (r *SecurityIPEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIndicatorRequestBuilder is request builder for SecurityIndicator
type SecurityIndicatorRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIndicatorRequest
func (b *SecurityIndicatorRequestBuilder) Request() *SecurityIndicatorRequest {
	return &SecurityIndicatorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIndicatorRequest is request for SecurityIndicator
type SecurityIndicatorRequest struct{ BaseRequest }

// Get performs GET request for SecurityIndicator
func (r *SecurityIndicatorRequest) Get(ctx context.Context) (resObj *SecurityIndicator, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIndicator
func (r *SecurityIndicatorRequest) Update(ctx context.Context, reqObj *SecurityIndicator) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIndicator
func (r *SecurityIndicatorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityInformationProtectionActionRequestBuilder is request builder for SecurityInformationProtectionAction
type SecurityInformationProtectionActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityInformationProtectionActionRequest
func (b *SecurityInformationProtectionActionRequestBuilder) Request() *SecurityInformationProtectionActionRequest {
	return &SecurityInformationProtectionActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityInformationProtectionActionRequest is request for SecurityInformationProtectionAction
type SecurityInformationProtectionActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityInformationProtectionAction
func (r *SecurityInformationProtectionActionRequest) Get(ctx context.Context) (resObj *SecurityInformationProtectionAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityInformationProtectionAction
func (r *SecurityInformationProtectionActionRequest) Update(ctx context.Context, reqObj *SecurityInformationProtectionAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityInformationProtectionAction
func (r *SecurityInformationProtectionActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityInformationProtectionPolicySettingRequestBuilder is request builder for SecurityInformationProtectionPolicySetting
type SecurityInformationProtectionPolicySettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityInformationProtectionPolicySettingRequest
func (b *SecurityInformationProtectionPolicySettingRequestBuilder) Request() *SecurityInformationProtectionPolicySettingRequest {
	return &SecurityInformationProtectionPolicySettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityInformationProtectionPolicySettingRequest is request for SecurityInformationProtectionPolicySetting
type SecurityInformationProtectionPolicySettingRequest struct{ BaseRequest }

// Get performs GET request for SecurityInformationProtectionPolicySetting
func (r *SecurityInformationProtectionPolicySettingRequest) Get(ctx context.Context) (resObj *SecurityInformationProtectionPolicySetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityInformationProtectionPolicySetting
func (r *SecurityInformationProtectionPolicySettingRequest) Update(ctx context.Context, reqObj *SecurityInformationProtectionPolicySetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityInformationProtectionPolicySetting
func (r *SecurityInformationProtectionPolicySettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIntelligenceProfileRequestBuilder is request builder for SecurityIntelligenceProfile
type SecurityIntelligenceProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIntelligenceProfileRequest
func (b *SecurityIntelligenceProfileRequestBuilder) Request() *SecurityIntelligenceProfileRequest {
	return &SecurityIntelligenceProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIntelligenceProfileRequest is request for SecurityIntelligenceProfile
type SecurityIntelligenceProfileRequest struct{ BaseRequest }

// Get performs GET request for SecurityIntelligenceProfile
func (r *SecurityIntelligenceProfileRequest) Get(ctx context.Context) (resObj *SecurityIntelligenceProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIntelligenceProfile
func (r *SecurityIntelligenceProfileRequest) Update(ctx context.Context, reqObj *SecurityIntelligenceProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIntelligenceProfile
func (r *SecurityIntelligenceProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIntelligenceProfileIndicatorRequestBuilder is request builder for SecurityIntelligenceProfileIndicator
type SecurityIntelligenceProfileIndicatorRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIntelligenceProfileIndicatorRequest
func (b *SecurityIntelligenceProfileIndicatorRequestBuilder) Request() *SecurityIntelligenceProfileIndicatorRequest {
	return &SecurityIntelligenceProfileIndicatorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIntelligenceProfileIndicatorRequest is request for SecurityIntelligenceProfileIndicator
type SecurityIntelligenceProfileIndicatorRequest struct{ BaseRequest }

// Get performs GET request for SecurityIntelligenceProfileIndicator
func (r *SecurityIntelligenceProfileIndicatorRequest) Get(ctx context.Context) (resObj *SecurityIntelligenceProfileIndicator, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIntelligenceProfileIndicator
func (r *SecurityIntelligenceProfileIndicatorRequest) Update(ctx context.Context, reqObj *SecurityIntelligenceProfileIndicator) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIntelligenceProfileIndicator
func (r *SecurityIntelligenceProfileIndicatorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIntelligenceProfileSponsorStateRequestBuilder is request builder for SecurityIntelligenceProfileSponsorState
type SecurityIntelligenceProfileSponsorStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIntelligenceProfileSponsorStateRequest
func (b *SecurityIntelligenceProfileSponsorStateRequestBuilder) Request() *SecurityIntelligenceProfileSponsorStateRequest {
	return &SecurityIntelligenceProfileSponsorStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIntelligenceProfileSponsorStateRequest is request for SecurityIntelligenceProfileSponsorState
type SecurityIntelligenceProfileSponsorStateRequest struct{ BaseRequest }

// Get performs GET request for SecurityIntelligenceProfileSponsorState
func (r *SecurityIntelligenceProfileSponsorStateRequest) Get(ctx context.Context) (resObj *SecurityIntelligenceProfileSponsorState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIntelligenceProfileSponsorState
func (r *SecurityIntelligenceProfileSponsorStateRequest) Update(ctx context.Context, reqObj *SecurityIntelligenceProfileSponsorState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIntelligenceProfileSponsorState
func (r *SecurityIntelligenceProfileSponsorStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityJustifyActionRequestBuilder is request builder for SecurityJustifyAction
type SecurityJustifyActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityJustifyActionRequest
func (b *SecurityJustifyActionRequestBuilder) Request() *SecurityJustifyActionRequest {
	return &SecurityJustifyActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityJustifyActionRequest is request for SecurityJustifyAction
type SecurityJustifyActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityJustifyAction
func (r *SecurityJustifyActionRequest) Get(ctx context.Context) (resObj *SecurityJustifyAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityJustifyAction
func (r *SecurityJustifyActionRequest) Update(ctx context.Context, reqObj *SecurityJustifyAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityJustifyAction
func (r *SecurityJustifyActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityKeyValuePairRequestBuilder is request builder for SecurityKeyValuePair
type SecurityKeyValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityKeyValuePairRequest
func (b *SecurityKeyValuePairRequestBuilder) Request() *SecurityKeyValuePairRequest {
	return &SecurityKeyValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityKeyValuePairRequest is request for SecurityKeyValuePair
type SecurityKeyValuePairRequest struct{ BaseRequest }

// Get performs GET request for SecurityKeyValuePair
func (r *SecurityKeyValuePairRequest) Get(ctx context.Context) (resObj *SecurityKeyValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityKeyValuePair
func (r *SecurityKeyValuePairRequest) Update(ctx context.Context, reqObj *SecurityKeyValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityKeyValuePair
func (r *SecurityKeyValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityLabelingOptionsRequestBuilder is request builder for SecurityLabelingOptions
type SecurityLabelingOptionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityLabelingOptionsRequest
func (b *SecurityLabelingOptionsRequestBuilder) Request() *SecurityLabelingOptionsRequest {
	return &SecurityLabelingOptionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityLabelingOptionsRequest is request for SecurityLabelingOptions
type SecurityLabelingOptionsRequest struct{ BaseRequest }

// Get performs GET request for SecurityLabelingOptions
func (r *SecurityLabelingOptionsRequest) Get(ctx context.Context) (resObj *SecurityLabelingOptions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityLabelingOptions
func (r *SecurityLabelingOptionsRequest) Update(ctx context.Context, reqObj *SecurityLabelingOptions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityLabelingOptions
func (r *SecurityLabelingOptionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityLoggedOnUserRequestBuilder is request builder for SecurityLoggedOnUser
type SecurityLoggedOnUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityLoggedOnUserRequest
func (b *SecurityLoggedOnUserRequestBuilder) Request() *SecurityLoggedOnUserRequest {
	return &SecurityLoggedOnUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityLoggedOnUserRequest is request for SecurityLoggedOnUser
type SecurityLoggedOnUserRequest struct{ BaseRequest }

// Get performs GET request for SecurityLoggedOnUser
func (r *SecurityLoggedOnUserRequest) Get(ctx context.Context) (resObj *SecurityLoggedOnUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityLoggedOnUser
func (r *SecurityLoggedOnUserRequest) Update(ctx context.Context, reqObj *SecurityLoggedOnUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityLoggedOnUser
func (r *SecurityLoggedOnUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityMailClusterEvidenceRequestBuilder is request builder for SecurityMailClusterEvidence
type SecurityMailClusterEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityMailClusterEvidenceRequest
func (b *SecurityMailClusterEvidenceRequestBuilder) Request() *SecurityMailClusterEvidenceRequest {
	return &SecurityMailClusterEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityMailClusterEvidenceRequest is request for SecurityMailClusterEvidence
type SecurityMailClusterEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityMailClusterEvidence
func (r *SecurityMailClusterEvidenceRequest) Get(ctx context.Context) (resObj *SecurityMailClusterEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityMailClusterEvidence
func (r *SecurityMailClusterEvidenceRequest) Update(ctx context.Context, reqObj *SecurityMailClusterEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityMailClusterEvidence
func (r *SecurityMailClusterEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityMailboxEvidenceRequestBuilder is request builder for SecurityMailboxEvidence
type SecurityMailboxEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityMailboxEvidenceRequest
func (b *SecurityMailboxEvidenceRequestBuilder) Request() *SecurityMailboxEvidenceRequest {
	return &SecurityMailboxEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityMailboxEvidenceRequest is request for SecurityMailboxEvidence
type SecurityMailboxEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityMailboxEvidence
func (r *SecurityMailboxEvidenceRequest) Get(ctx context.Context) (resObj *SecurityMailboxEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityMailboxEvidence
func (r *SecurityMailboxEvidenceRequest) Update(ctx context.Context, reqObj *SecurityMailboxEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityMailboxEvidence
func (r *SecurityMailboxEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityMetadataActionRequestBuilder is request builder for SecurityMetadataAction
type SecurityMetadataActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityMetadataActionRequest
func (b *SecurityMetadataActionRequestBuilder) Request() *SecurityMetadataActionRequest {
	return &SecurityMetadataActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityMetadataActionRequest is request for SecurityMetadataAction
type SecurityMetadataActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityMetadataAction
func (r *SecurityMetadataActionRequest) Get(ctx context.Context) (resObj *SecurityMetadataAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityMetadataAction
func (r *SecurityMetadataActionRequest) Update(ctx context.Context, reqObj *SecurityMetadataAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityMetadataAction
func (r *SecurityMetadataActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityOAuthApplicationEvidenceRequestBuilder is request builder for SecurityOAuthApplicationEvidence
type SecurityOAuthApplicationEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityOAuthApplicationEvidenceRequest
func (b *SecurityOAuthApplicationEvidenceRequestBuilder) Request() *SecurityOAuthApplicationEvidenceRequest {
	return &SecurityOAuthApplicationEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityOAuthApplicationEvidenceRequest is request for SecurityOAuthApplicationEvidence
type SecurityOAuthApplicationEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityOAuthApplicationEvidence
func (r *SecurityOAuthApplicationEvidenceRequest) Get(ctx context.Context) (resObj *SecurityOAuthApplicationEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityOAuthApplicationEvidence
func (r *SecurityOAuthApplicationEvidenceRequest) Update(ctx context.Context, reqObj *SecurityOAuthApplicationEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityOAuthApplicationEvidence
func (r *SecurityOAuthApplicationEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityOcrSettingsRequestBuilder is request builder for SecurityOcrSettings
type SecurityOcrSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityOcrSettingsRequest
func (b *SecurityOcrSettingsRequestBuilder) Request() *SecurityOcrSettingsRequest {
	return &SecurityOcrSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityOcrSettingsRequest is request for SecurityOcrSettings
type SecurityOcrSettingsRequest struct{ BaseRequest }

// Get performs GET request for SecurityOcrSettings
func (r *SecurityOcrSettingsRequest) Get(ctx context.Context) (resObj *SecurityOcrSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityOcrSettings
func (r *SecurityOcrSettingsRequest) Update(ctx context.Context, reqObj *SecurityOcrSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityOcrSettings
func (r *SecurityOcrSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityPassiveDnsRecordRequestBuilder is request builder for SecurityPassiveDnsRecord
type SecurityPassiveDnsRecordRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityPassiveDnsRecordRequest
func (b *SecurityPassiveDnsRecordRequestBuilder) Request() *SecurityPassiveDnsRecordRequest {
	return &SecurityPassiveDnsRecordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityPassiveDnsRecordRequest is request for SecurityPassiveDnsRecord
type SecurityPassiveDnsRecordRequest struct{ BaseRequest }

// Get performs GET request for SecurityPassiveDnsRecord
func (r *SecurityPassiveDnsRecordRequest) Get(ctx context.Context) (resObj *SecurityPassiveDnsRecord, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityPassiveDnsRecord
func (r *SecurityPassiveDnsRecordRequest) Update(ctx context.Context, reqObj *SecurityPassiveDnsRecord) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityPassiveDnsRecord
func (r *SecurityPassiveDnsRecordRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityPolicyBaseRequestBuilder is request builder for SecurityPolicyBase
type SecurityPolicyBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityPolicyBaseRequest
func (b *SecurityPolicyBaseRequestBuilder) Request() *SecurityPolicyBaseRequest {
	return &SecurityPolicyBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityPolicyBaseRequest is request for SecurityPolicyBase
type SecurityPolicyBaseRequest struct{ BaseRequest }

// Get performs GET request for SecurityPolicyBase
func (r *SecurityPolicyBaseRequest) Get(ctx context.Context) (resObj *SecurityPolicyBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityPolicyBase
func (r *SecurityPolicyBaseRequest) Update(ctx context.Context, reqObj *SecurityPolicyBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityPolicyBase
func (r *SecurityPolicyBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityProcessEvidenceRequestBuilder is request builder for SecurityProcessEvidence
type SecurityProcessEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityProcessEvidenceRequest
func (b *SecurityProcessEvidenceRequestBuilder) Request() *SecurityProcessEvidenceRequest {
	return &SecurityProcessEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityProcessEvidenceRequest is request for SecurityProcessEvidence
type SecurityProcessEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityProcessEvidence
func (r *SecurityProcessEvidenceRequest) Get(ctx context.Context) (resObj *SecurityProcessEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityProcessEvidence
func (r *SecurityProcessEvidenceRequest) Update(ctx context.Context, reqObj *SecurityProcessEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityProcessEvidence
func (r *SecurityProcessEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityProtectAdhocActionRequestBuilder is request builder for SecurityProtectAdhocAction
type SecurityProtectAdhocActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityProtectAdhocActionRequest
func (b *SecurityProtectAdhocActionRequestBuilder) Request() *SecurityProtectAdhocActionRequest {
	return &SecurityProtectAdhocActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityProtectAdhocActionRequest is request for SecurityProtectAdhocAction
type SecurityProtectAdhocActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityProtectAdhocAction
func (r *SecurityProtectAdhocActionRequest) Get(ctx context.Context) (resObj *SecurityProtectAdhocAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityProtectAdhocAction
func (r *SecurityProtectAdhocActionRequest) Update(ctx context.Context, reqObj *SecurityProtectAdhocAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityProtectAdhocAction
func (r *SecurityProtectAdhocActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityProtectByTemplateActionRequestBuilder is request builder for SecurityProtectByTemplateAction
type SecurityProtectByTemplateActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityProtectByTemplateActionRequest
func (b *SecurityProtectByTemplateActionRequestBuilder) Request() *SecurityProtectByTemplateActionRequest {
	return &SecurityProtectByTemplateActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityProtectByTemplateActionRequest is request for SecurityProtectByTemplateAction
type SecurityProtectByTemplateActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityProtectByTemplateAction
func (r *SecurityProtectByTemplateActionRequest) Get(ctx context.Context) (resObj *SecurityProtectByTemplateAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityProtectByTemplateAction
func (r *SecurityProtectByTemplateActionRequest) Update(ctx context.Context, reqObj *SecurityProtectByTemplateAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityProtectByTemplateAction
func (r *SecurityProtectByTemplateActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityProtectDoNotForwardActionRequestBuilder is request builder for SecurityProtectDoNotForwardAction
type SecurityProtectDoNotForwardActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityProtectDoNotForwardActionRequest
func (b *SecurityProtectDoNotForwardActionRequestBuilder) Request() *SecurityProtectDoNotForwardActionRequest {
	return &SecurityProtectDoNotForwardActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityProtectDoNotForwardActionRequest is request for SecurityProtectDoNotForwardAction
type SecurityProtectDoNotForwardActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityProtectDoNotForwardAction
func (r *SecurityProtectDoNotForwardActionRequest) Get(ctx context.Context) (resObj *SecurityProtectDoNotForwardAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityProtectDoNotForwardAction
func (r *SecurityProtectDoNotForwardActionRequest) Update(ctx context.Context, reqObj *SecurityProtectDoNotForwardAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityProtectDoNotForwardAction
func (r *SecurityProtectDoNotForwardActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRecommendLabelActionRequestBuilder is request builder for SecurityRecommendLabelAction
type SecurityRecommendLabelActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRecommendLabelActionRequest
func (b *SecurityRecommendLabelActionRequestBuilder) Request() *SecurityRecommendLabelActionRequest {
	return &SecurityRecommendLabelActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRecommendLabelActionRequest is request for SecurityRecommendLabelAction
type SecurityRecommendLabelActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityRecommendLabelAction
func (r *SecurityRecommendLabelActionRequest) Get(ctx context.Context) (resObj *SecurityRecommendLabelAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRecommendLabelAction
func (r *SecurityRecommendLabelActionRequest) Update(ctx context.Context, reqObj *SecurityRecommendLabelAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRecommendLabelAction
func (r *SecurityRecommendLabelActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRecommendedHuntingQueryRequestBuilder is request builder for SecurityRecommendedHuntingQuery
type SecurityRecommendedHuntingQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRecommendedHuntingQueryRequest
func (b *SecurityRecommendedHuntingQueryRequestBuilder) Request() *SecurityRecommendedHuntingQueryRequest {
	return &SecurityRecommendedHuntingQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRecommendedHuntingQueryRequest is request for SecurityRecommendedHuntingQuery
type SecurityRecommendedHuntingQueryRequest struct{ BaseRequest }

// Get performs GET request for SecurityRecommendedHuntingQuery
func (r *SecurityRecommendedHuntingQueryRequest) Get(ctx context.Context) (resObj *SecurityRecommendedHuntingQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRecommendedHuntingQuery
func (r *SecurityRecommendedHuntingQueryRequest) Update(ctx context.Context, reqObj *SecurityRecommendedHuntingQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRecommendedHuntingQuery
func (r *SecurityRecommendedHuntingQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRedundancyDetectionSettingsRequestBuilder is request builder for SecurityRedundancyDetectionSettings
type SecurityRedundancyDetectionSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRedundancyDetectionSettingsRequest
func (b *SecurityRedundancyDetectionSettingsRequestBuilder) Request() *SecurityRedundancyDetectionSettingsRequest {
	return &SecurityRedundancyDetectionSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRedundancyDetectionSettingsRequest is request for SecurityRedundancyDetectionSettings
type SecurityRedundancyDetectionSettingsRequest struct{ BaseRequest }

// Get performs GET request for SecurityRedundancyDetectionSettings
func (r *SecurityRedundancyDetectionSettingsRequest) Get(ctx context.Context) (resObj *SecurityRedundancyDetectionSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRedundancyDetectionSettings
func (r *SecurityRedundancyDetectionSettingsRequest) Update(ctx context.Context, reqObj *SecurityRedundancyDetectionSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRedundancyDetectionSettings
func (r *SecurityRedundancyDetectionSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRegistryKeyEvidenceRequestBuilder is request builder for SecurityRegistryKeyEvidence
type SecurityRegistryKeyEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRegistryKeyEvidenceRequest
func (b *SecurityRegistryKeyEvidenceRequestBuilder) Request() *SecurityRegistryKeyEvidenceRequest {
	return &SecurityRegistryKeyEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRegistryKeyEvidenceRequest is request for SecurityRegistryKeyEvidence
type SecurityRegistryKeyEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityRegistryKeyEvidence
func (r *SecurityRegistryKeyEvidenceRequest) Get(ctx context.Context) (resObj *SecurityRegistryKeyEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRegistryKeyEvidence
func (r *SecurityRegistryKeyEvidenceRequest) Update(ctx context.Context, reqObj *SecurityRegistryKeyEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRegistryKeyEvidence
func (r *SecurityRegistryKeyEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRegistryValueEvidenceRequestBuilder is request builder for SecurityRegistryValueEvidence
type SecurityRegistryValueEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRegistryValueEvidenceRequest
func (b *SecurityRegistryValueEvidenceRequestBuilder) Request() *SecurityRegistryValueEvidenceRequest {
	return &SecurityRegistryValueEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRegistryValueEvidenceRequest is request for SecurityRegistryValueEvidence
type SecurityRegistryValueEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityRegistryValueEvidence
func (r *SecurityRegistryValueEvidenceRequest) Get(ctx context.Context) (resObj *SecurityRegistryValueEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRegistryValueEvidence
func (r *SecurityRegistryValueEvidenceRequest) Update(ctx context.Context, reqObj *SecurityRegistryValueEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRegistryValueEvidence
func (r *SecurityRegistryValueEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRemoveContentFooterActionRequestBuilder is request builder for SecurityRemoveContentFooterAction
type SecurityRemoveContentFooterActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRemoveContentFooterActionRequest
func (b *SecurityRemoveContentFooterActionRequestBuilder) Request() *SecurityRemoveContentFooterActionRequest {
	return &SecurityRemoveContentFooterActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRemoveContentFooterActionRequest is request for SecurityRemoveContentFooterAction
type SecurityRemoveContentFooterActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityRemoveContentFooterAction
func (r *SecurityRemoveContentFooterActionRequest) Get(ctx context.Context) (resObj *SecurityRemoveContentFooterAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRemoveContentFooterAction
func (r *SecurityRemoveContentFooterActionRequest) Update(ctx context.Context, reqObj *SecurityRemoveContentFooterAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRemoveContentFooterAction
func (r *SecurityRemoveContentFooterActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRemoveContentHeaderActionRequestBuilder is request builder for SecurityRemoveContentHeaderAction
type SecurityRemoveContentHeaderActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRemoveContentHeaderActionRequest
func (b *SecurityRemoveContentHeaderActionRequestBuilder) Request() *SecurityRemoveContentHeaderActionRequest {
	return &SecurityRemoveContentHeaderActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRemoveContentHeaderActionRequest is request for SecurityRemoveContentHeaderAction
type SecurityRemoveContentHeaderActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityRemoveContentHeaderAction
func (r *SecurityRemoveContentHeaderActionRequest) Get(ctx context.Context) (resObj *SecurityRemoveContentHeaderAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRemoveContentHeaderAction
func (r *SecurityRemoveContentHeaderActionRequest) Update(ctx context.Context, reqObj *SecurityRemoveContentHeaderAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRemoveContentHeaderAction
func (r *SecurityRemoveContentHeaderActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRemoveProtectionActionRequestBuilder is request builder for SecurityRemoveProtectionAction
type SecurityRemoveProtectionActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRemoveProtectionActionRequest
func (b *SecurityRemoveProtectionActionRequestBuilder) Request() *SecurityRemoveProtectionActionRequest {
	return &SecurityRemoveProtectionActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRemoveProtectionActionRequest is request for SecurityRemoveProtectionAction
type SecurityRemoveProtectionActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityRemoveProtectionAction
func (r *SecurityRemoveProtectionActionRequest) Get(ctx context.Context) (resObj *SecurityRemoveProtectionAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRemoveProtectionAction
func (r *SecurityRemoveProtectionActionRequest) Update(ctx context.Context, reqObj *SecurityRemoveProtectionAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRemoveProtectionAction
func (r *SecurityRemoveProtectionActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRemoveWatermarkActionRequestBuilder is request builder for SecurityRemoveWatermarkAction
type SecurityRemoveWatermarkActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRemoveWatermarkActionRequest
func (b *SecurityRemoveWatermarkActionRequestBuilder) Request() *SecurityRemoveWatermarkActionRequest {
	return &SecurityRemoveWatermarkActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRemoveWatermarkActionRequest is request for SecurityRemoveWatermarkAction
type SecurityRemoveWatermarkActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityRemoveWatermarkAction
func (r *SecurityRemoveWatermarkActionRequest) Get(ctx context.Context) (resObj *SecurityRemoveWatermarkAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRemoveWatermarkAction
func (r *SecurityRemoveWatermarkActionRequest) Update(ctx context.Context, reqObj *SecurityRemoveWatermarkAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRemoveWatermarkAction
func (r *SecurityRemoveWatermarkActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionDurationRequestBuilder is request builder for SecurityRetentionDuration
type SecurityRetentionDurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionDurationRequest
func (b *SecurityRetentionDurationRequestBuilder) Request() *SecurityRetentionDurationRequest {
	return &SecurityRetentionDurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionDurationRequest is request for SecurityRetentionDuration
type SecurityRetentionDurationRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionDuration
func (r *SecurityRetentionDurationRequest) Get(ctx context.Context) (resObj *SecurityRetentionDuration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionDuration
func (r *SecurityRetentionDurationRequest) Update(ctx context.Context, reqObj *SecurityRetentionDuration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionDuration
func (r *SecurityRetentionDurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionDurationForeverRequestBuilder is request builder for SecurityRetentionDurationForever
type SecurityRetentionDurationForeverRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionDurationForeverRequest
func (b *SecurityRetentionDurationForeverRequestBuilder) Request() *SecurityRetentionDurationForeverRequest {
	return &SecurityRetentionDurationForeverRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionDurationForeverRequest is request for SecurityRetentionDurationForever
type SecurityRetentionDurationForeverRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionDurationForever
func (r *SecurityRetentionDurationForeverRequest) Get(ctx context.Context) (resObj *SecurityRetentionDurationForever, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionDurationForever
func (r *SecurityRetentionDurationForeverRequest) Update(ctx context.Context, reqObj *SecurityRetentionDurationForever) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionDurationForever
func (r *SecurityRetentionDurationForeverRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionDurationInDaysRequestBuilder is request builder for SecurityRetentionDurationInDays
type SecurityRetentionDurationInDaysRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionDurationInDaysRequest
func (b *SecurityRetentionDurationInDaysRequestBuilder) Request() *SecurityRetentionDurationInDaysRequest {
	return &SecurityRetentionDurationInDaysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionDurationInDaysRequest is request for SecurityRetentionDurationInDays
type SecurityRetentionDurationInDaysRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionDurationInDays
func (r *SecurityRetentionDurationInDaysRequest) Get(ctx context.Context) (resObj *SecurityRetentionDurationInDays, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionDurationInDays
func (r *SecurityRetentionDurationInDaysRequest) Update(ctx context.Context, reqObj *SecurityRetentionDurationInDays) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionDurationInDays
func (r *SecurityRetentionDurationInDaysRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionEventRequestBuilder is request builder for SecurityRetentionEvent
type SecurityRetentionEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionEventRequest
func (b *SecurityRetentionEventRequestBuilder) Request() *SecurityRetentionEventRequest {
	return &SecurityRetentionEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionEventRequest is request for SecurityRetentionEvent
type SecurityRetentionEventRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionEvent
func (r *SecurityRetentionEventRequest) Get(ctx context.Context) (resObj *SecurityRetentionEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionEvent
func (r *SecurityRetentionEventRequest) Update(ctx context.Context, reqObj *SecurityRetentionEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionEvent
func (r *SecurityRetentionEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionEventStatusRequestBuilder is request builder for SecurityRetentionEventStatus
type SecurityRetentionEventStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionEventStatusRequest
func (b *SecurityRetentionEventStatusRequestBuilder) Request() *SecurityRetentionEventStatusRequest {
	return &SecurityRetentionEventStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionEventStatusRequest is request for SecurityRetentionEventStatus
type SecurityRetentionEventStatusRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionEventStatus
func (r *SecurityRetentionEventStatusRequest) Get(ctx context.Context) (resObj *SecurityRetentionEventStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionEventStatus
func (r *SecurityRetentionEventStatusRequest) Update(ctx context.Context, reqObj *SecurityRetentionEventStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionEventStatus
func (r *SecurityRetentionEventStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionEventTypeRequestBuilder is request builder for SecurityRetentionEventType
type SecurityRetentionEventTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionEventTypeRequest
func (b *SecurityRetentionEventTypeRequestBuilder) Request() *SecurityRetentionEventTypeRequest {
	return &SecurityRetentionEventTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionEventTypeRequest is request for SecurityRetentionEventType
type SecurityRetentionEventTypeRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionEventType
func (r *SecurityRetentionEventTypeRequest) Get(ctx context.Context) (resObj *SecurityRetentionEventType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionEventType
func (r *SecurityRetentionEventTypeRequest) Update(ctx context.Context, reqObj *SecurityRetentionEventType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionEventType
func (r *SecurityRetentionEventTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityRetentionLabelRequestBuilder is request builder for SecurityRetentionLabel
type SecurityRetentionLabelRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRetentionLabelRequest
func (b *SecurityRetentionLabelRequestBuilder) Request() *SecurityRetentionLabelRequest {
	return &SecurityRetentionLabelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRetentionLabelRequest is request for SecurityRetentionLabel
type SecurityRetentionLabelRequest struct{ BaseRequest }

// Get performs GET request for SecurityRetentionLabel
func (r *SecurityRetentionLabelRequest) Get(ctx context.Context) (resObj *SecurityRetentionLabel, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityRetentionLabel
func (r *SecurityRetentionLabelRequest) Update(ctx context.Context, reqObj *SecurityRetentionLabel) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityRetentionLabel
func (r *SecurityRetentionLabelRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySearchRequestBuilder is request builder for SecuritySearch
type SecuritySearchRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySearchRequest
func (b *SecuritySearchRequestBuilder) Request() *SecuritySearchRequest {
	return &SecuritySearchRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySearchRequest is request for SecuritySearch
type SecuritySearchRequest struct{ BaseRequest }

// Get performs GET request for SecuritySearch
func (r *SecuritySearchRequest) Get(ctx context.Context) (resObj *SecuritySearch, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySearch
func (r *SecuritySearchRequest) Update(ctx context.Context, reqObj *SecuritySearch) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySearch
func (r *SecuritySearchRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySecurityGroupEvidenceRequestBuilder is request builder for SecuritySecurityGroupEvidence
type SecuritySecurityGroupEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySecurityGroupEvidenceRequest
func (b *SecuritySecurityGroupEvidenceRequestBuilder) Request() *SecuritySecurityGroupEvidenceRequest {
	return &SecuritySecurityGroupEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySecurityGroupEvidenceRequest is request for SecuritySecurityGroupEvidence
type SecuritySecurityGroupEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecuritySecurityGroupEvidence
func (r *SecuritySecurityGroupEvidenceRequest) Get(ctx context.Context) (resObj *SecuritySecurityGroupEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySecurityGroupEvidence
func (r *SecuritySecurityGroupEvidenceRequest) Update(ctx context.Context, reqObj *SecuritySecurityGroupEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySecurityGroupEvidence
func (r *SecuritySecurityGroupEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySensitivityLabelRequestBuilder is request builder for SecuritySensitivityLabel
type SecuritySensitivityLabelRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySensitivityLabelRequest
func (b *SecuritySensitivityLabelRequestBuilder) Request() *SecuritySensitivityLabelRequest {
	return &SecuritySensitivityLabelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySensitivityLabelRequest is request for SecuritySensitivityLabel
type SecuritySensitivityLabelRequest struct{ BaseRequest }

// Get performs GET request for SecuritySensitivityLabel
func (r *SecuritySensitivityLabelRequest) Get(ctx context.Context) (resObj *SecuritySensitivityLabel, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySensitivityLabel
func (r *SecuritySensitivityLabelRequest) Update(ctx context.Context, reqObj *SecuritySensitivityLabel) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySensitivityLabel
func (r *SecuritySensitivityLabelRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySigningResultRequestBuilder is request builder for SecuritySigningResult
type SecuritySigningResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySigningResultRequest
func (b *SecuritySigningResultRequestBuilder) Request() *SecuritySigningResultRequest {
	return &SecuritySigningResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySigningResultRequest is request for SecuritySigningResult
type SecuritySigningResultRequest struct{ BaseRequest }

// Get performs GET request for SecuritySigningResult
func (r *SecuritySigningResultRequest) Get(ctx context.Context) (resObj *SecuritySigningResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySigningResult
func (r *SecuritySigningResultRequest) Update(ctx context.Context, reqObj *SecuritySigningResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySigningResult
func (r *SecuritySigningResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySinglePropertySchemaRequestBuilder is request builder for SecuritySinglePropertySchema
type SecuritySinglePropertySchemaRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySinglePropertySchemaRequest
func (b *SecuritySinglePropertySchemaRequestBuilder) Request() *SecuritySinglePropertySchemaRequest {
	return &SecuritySinglePropertySchemaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySinglePropertySchemaRequest is request for SecuritySinglePropertySchema
type SecuritySinglePropertySchemaRequest struct{ BaseRequest }

// Get performs GET request for SecuritySinglePropertySchema
func (r *SecuritySinglePropertySchemaRequest) Get(ctx context.Context) (resObj *SecuritySinglePropertySchema, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySinglePropertySchema
func (r *SecuritySinglePropertySchemaRequest) Update(ctx context.Context, reqObj *SecuritySinglePropertySchema) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySinglePropertySchema
func (r *SecuritySinglePropertySchemaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySiteSourceRequestBuilder is request builder for SecuritySiteSource
type SecuritySiteSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySiteSourceRequest
func (b *SecuritySiteSourceRequestBuilder) Request() *SecuritySiteSourceRequest {
	return &SecuritySiteSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySiteSourceRequest is request for SecuritySiteSource
type SecuritySiteSourceRequest struct{ BaseRequest }

// Get performs GET request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Get(ctx context.Context) (resObj *SecuritySiteSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Update(ctx context.Context, reqObj *SecuritySiteSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityStringValueDictionaryRequestBuilder is request builder for SecurityStringValueDictionary
type SecurityStringValueDictionaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityStringValueDictionaryRequest
func (b *SecurityStringValueDictionaryRequestBuilder) Request() *SecurityStringValueDictionaryRequest {
	return &SecurityStringValueDictionaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityStringValueDictionaryRequest is request for SecurityStringValueDictionary
type SecurityStringValueDictionaryRequest struct{ BaseRequest }

// Get performs GET request for SecurityStringValueDictionary
func (r *SecurityStringValueDictionaryRequest) Get(ctx context.Context) (resObj *SecurityStringValueDictionary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityStringValueDictionary
func (r *SecurityStringValueDictionaryRequest) Update(ctx context.Context, reqObj *SecurityStringValueDictionary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityStringValueDictionary
func (r *SecurityStringValueDictionaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySubmissionAdminReviewRequestBuilder is request builder for SecuritySubmissionAdminReview
type SecuritySubmissionAdminReviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySubmissionAdminReviewRequest
func (b *SecuritySubmissionAdminReviewRequestBuilder) Request() *SecuritySubmissionAdminReviewRequest {
	return &SecuritySubmissionAdminReviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySubmissionAdminReviewRequest is request for SecuritySubmissionAdminReview
type SecuritySubmissionAdminReviewRequest struct{ BaseRequest }

// Get performs GET request for SecuritySubmissionAdminReview
func (r *SecuritySubmissionAdminReviewRequest) Get(ctx context.Context) (resObj *SecuritySubmissionAdminReview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySubmissionAdminReview
func (r *SecuritySubmissionAdminReviewRequest) Update(ctx context.Context, reqObj *SecuritySubmissionAdminReview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySubmissionAdminReview
func (r *SecuritySubmissionAdminReviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySubmissionDetectedFileRequestBuilder is request builder for SecuritySubmissionDetectedFile
type SecuritySubmissionDetectedFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySubmissionDetectedFileRequest
func (b *SecuritySubmissionDetectedFileRequestBuilder) Request() *SecuritySubmissionDetectedFileRequest {
	return &SecuritySubmissionDetectedFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySubmissionDetectedFileRequest is request for SecuritySubmissionDetectedFile
type SecuritySubmissionDetectedFileRequest struct{ BaseRequest }

// Get performs GET request for SecuritySubmissionDetectedFile
func (r *SecuritySubmissionDetectedFileRequest) Get(ctx context.Context) (resObj *SecuritySubmissionDetectedFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySubmissionDetectedFile
func (r *SecuritySubmissionDetectedFileRequest) Update(ctx context.Context, reqObj *SecuritySubmissionDetectedFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySubmissionDetectedFile
func (r *SecuritySubmissionDetectedFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySubmissionResultRequestBuilder is request builder for SecuritySubmissionResult
type SecuritySubmissionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySubmissionResultRequest
func (b *SecuritySubmissionResultRequestBuilder) Request() *SecuritySubmissionResultRequest {
	return &SecuritySubmissionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySubmissionResultRequest is request for SecuritySubmissionResult
type SecuritySubmissionResultRequest struct{ BaseRequest }

// Get performs GET request for SecuritySubmissionResult
func (r *SecuritySubmissionResultRequest) Get(ctx context.Context) (resObj *SecuritySubmissionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySubmissionResult
func (r *SecuritySubmissionResultRequest) Update(ctx context.Context, reqObj *SecuritySubmissionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySubmissionResult
func (r *SecuritySubmissionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySubmissionUserIdentityRequestBuilder is request builder for SecuritySubmissionUserIdentity
type SecuritySubmissionUserIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySubmissionUserIdentityRequest
func (b *SecuritySubmissionUserIdentityRequestBuilder) Request() *SecuritySubmissionUserIdentityRequest {
	return &SecuritySubmissionUserIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySubmissionUserIdentityRequest is request for SecuritySubmissionUserIdentity
type SecuritySubmissionUserIdentityRequest struct{ BaseRequest }

// Get performs GET request for SecuritySubmissionUserIdentity
func (r *SecuritySubmissionUserIdentityRequest) Get(ctx context.Context) (resObj *SecuritySubmissionUserIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySubmissionUserIdentity
func (r *SecuritySubmissionUserIdentityRequest) Update(ctx context.Context, reqObj *SecuritySubmissionUserIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySubmissionUserIdentity
func (r *SecuritySubmissionUserIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTagRequestBuilder is request builder for SecurityTag
type SecurityTagRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTagRequest
func (b *SecurityTagRequestBuilder) Request() *SecurityTagRequest {
	return &SecurityTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTagRequest is request for SecurityTag
type SecurityTagRequest struct{ BaseRequest }

// Get performs GET request for SecurityTag
func (r *SecurityTagRequest) Get(ctx context.Context) (resObj *SecurityTag, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTag
func (r *SecurityTagRequest) Update(ctx context.Context, reqObj *SecurityTag) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTag
func (r *SecurityTagRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTenantAllowBlockListEntryResultRequestBuilder is request builder for SecurityTenantAllowBlockListEntryResult
type SecurityTenantAllowBlockListEntryResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTenantAllowBlockListEntryResultRequest
func (b *SecurityTenantAllowBlockListEntryResultRequestBuilder) Request() *SecurityTenantAllowBlockListEntryResultRequest {
	return &SecurityTenantAllowBlockListEntryResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTenantAllowBlockListEntryResultRequest is request for SecurityTenantAllowBlockListEntryResult
type SecurityTenantAllowBlockListEntryResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityTenantAllowBlockListEntryResult
func (r *SecurityTenantAllowBlockListEntryResultRequest) Get(ctx context.Context) (resObj *SecurityTenantAllowBlockListEntryResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTenantAllowBlockListEntryResult
func (r *SecurityTenantAllowBlockListEntryResultRequest) Update(ctx context.Context, reqObj *SecurityTenantAllowBlockListEntryResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTenantAllowBlockListEntryResult
func (r *SecurityTenantAllowBlockListEntryResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTenantAllowOrBlockListActionRequestBuilder is request builder for SecurityTenantAllowOrBlockListAction
type SecurityTenantAllowOrBlockListActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTenantAllowOrBlockListActionRequest
func (b *SecurityTenantAllowOrBlockListActionRequestBuilder) Request() *SecurityTenantAllowOrBlockListActionRequest {
	return &SecurityTenantAllowOrBlockListActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTenantAllowOrBlockListActionRequest is request for SecurityTenantAllowOrBlockListAction
type SecurityTenantAllowOrBlockListActionRequest struct{ BaseRequest }

// Get performs GET request for SecurityTenantAllowOrBlockListAction
func (r *SecurityTenantAllowOrBlockListActionRequest) Get(ctx context.Context) (resObj *SecurityTenantAllowOrBlockListAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTenantAllowOrBlockListAction
func (r *SecurityTenantAllowOrBlockListActionRequest) Update(ctx context.Context, reqObj *SecurityTenantAllowOrBlockListAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTenantAllowOrBlockListAction
func (r *SecurityTenantAllowOrBlockListActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityThreatSubmissionRequestBuilder is request builder for SecurityThreatSubmission
type SecurityThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityThreatSubmissionRequest
func (b *SecurityThreatSubmissionRequestBuilder) Request() *SecurityThreatSubmissionRequest {
	return &SecurityThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityThreatSubmissionRequest is request for SecurityThreatSubmission
type SecurityThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityThreatSubmission
func (r *SecurityThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityThreatSubmission
func (r *SecurityThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityThreatSubmission
func (r *SecurityThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityTopicModelingSettingsRequestBuilder is request builder for SecurityTopicModelingSettings
type SecurityTopicModelingSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityTopicModelingSettingsRequest
func (b *SecurityTopicModelingSettingsRequestBuilder) Request() *SecurityTopicModelingSettingsRequest {
	return &SecurityTopicModelingSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityTopicModelingSettingsRequest is request for SecurityTopicModelingSettings
type SecurityTopicModelingSettingsRequest struct{ BaseRequest }

// Get performs GET request for SecurityTopicModelingSettings
func (r *SecurityTopicModelingSettingsRequest) Get(ctx context.Context) (resObj *SecurityTopicModelingSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityTopicModelingSettings
func (r *SecurityTopicModelingSettingsRequest) Update(ctx context.Context, reqObj *SecurityTopicModelingSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityTopicModelingSettings
func (r *SecurityTopicModelingSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityURLEvidenceRequestBuilder is request builder for SecurityURLEvidence
type SecurityURLEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityURLEvidenceRequest
func (b *SecurityURLEvidenceRequestBuilder) Request() *SecurityURLEvidenceRequest {
	return &SecurityURLEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityURLEvidenceRequest is request for SecurityURLEvidence
type SecurityURLEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityURLEvidence
func (r *SecurityURLEvidenceRequest) Get(ctx context.Context) (resObj *SecurityURLEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityURLEvidence
func (r *SecurityURLEvidenceRequest) Update(ctx context.Context, reqObj *SecurityURLEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityURLEvidence
func (r *SecurityURLEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityURLThreatSubmissionRequestBuilder is request builder for SecurityURLThreatSubmission
type SecurityURLThreatSubmissionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityURLThreatSubmissionRequest
func (b *SecurityURLThreatSubmissionRequestBuilder) Request() *SecurityURLThreatSubmissionRequest {
	return &SecurityURLThreatSubmissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityURLThreatSubmissionRequest is request for SecurityURLThreatSubmission
type SecurityURLThreatSubmissionRequest struct{ BaseRequest }

// Get performs GET request for SecurityURLThreatSubmission
func (r *SecurityURLThreatSubmissionRequest) Get(ctx context.Context) (resObj *SecurityURLThreatSubmission, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityURLThreatSubmission
func (r *SecurityURLThreatSubmissionRequest) Update(ctx context.Context, reqObj *SecurityURLThreatSubmission) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityURLThreatSubmission
func (r *SecurityURLThreatSubmissionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUnclassifiedArtifactRequestBuilder is request builder for SecurityUnclassifiedArtifact
type SecurityUnclassifiedArtifactRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUnclassifiedArtifactRequest
func (b *SecurityUnclassifiedArtifactRequestBuilder) Request() *SecurityUnclassifiedArtifactRequest {
	return &SecurityUnclassifiedArtifactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUnclassifiedArtifactRequest is request for SecurityUnclassifiedArtifact
type SecurityUnclassifiedArtifactRequest struct{ BaseRequest }

// Get performs GET request for SecurityUnclassifiedArtifact
func (r *SecurityUnclassifiedArtifactRequest) Get(ctx context.Context) (resObj *SecurityUnclassifiedArtifact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUnclassifiedArtifact
func (r *SecurityUnclassifiedArtifactRequest) Update(ctx context.Context, reqObj *SecurityUnclassifiedArtifact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUnclassifiedArtifact
func (r *SecurityUnclassifiedArtifactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUnifiedGroupSourceRequestBuilder is request builder for SecurityUnifiedGroupSource
type SecurityUnifiedGroupSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUnifiedGroupSourceRequest
func (b *SecurityUnifiedGroupSourceRequestBuilder) Request() *SecurityUnifiedGroupSourceRequest {
	return &SecurityUnifiedGroupSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUnifiedGroupSourceRequest is request for SecurityUnifiedGroupSource
type SecurityUnifiedGroupSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Get(ctx context.Context) (resObj *SecurityUnifiedGroupSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Update(ctx context.Context, reqObj *SecurityUnifiedGroupSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUserAccountRequestBuilder is request builder for SecurityUserAccount
type SecurityUserAccountRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUserAccountRequest
func (b *SecurityUserAccountRequestBuilder) Request() *SecurityUserAccountRequest {
	return &SecurityUserAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUserAccountRequest is request for SecurityUserAccount
type SecurityUserAccountRequest struct{ BaseRequest }

// Get performs GET request for SecurityUserAccount
func (r *SecurityUserAccountRequest) Get(ctx context.Context) (resObj *SecurityUserAccount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUserAccount
func (r *SecurityUserAccountRequest) Update(ctx context.Context, reqObj *SecurityUserAccount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUserAccount
func (r *SecurityUserAccountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUserEvidenceRequestBuilder is request builder for SecurityUserEvidence
type SecurityUserEvidenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUserEvidenceRequest
func (b *SecurityUserEvidenceRequestBuilder) Request() *SecurityUserEvidenceRequest {
	return &SecurityUserEvidenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUserEvidenceRequest is request for SecurityUserEvidence
type SecurityUserEvidenceRequest struct{ BaseRequest }

// Get performs GET request for SecurityUserEvidence
func (r *SecurityUserEvidenceRequest) Get(ctx context.Context) (resObj *SecurityUserEvidence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUserEvidence
func (r *SecurityUserEvidenceRequest) Update(ctx context.Context, reqObj *SecurityUserEvidence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUserEvidence
func (r *SecurityUserEvidenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUserSourceRequestBuilder is request builder for SecurityUserSource
type SecurityUserSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUserSourceRequest
func (b *SecurityUserSourceRequestBuilder) Request() *SecurityUserSourceRequest {
	return &SecurityUserSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUserSourceRequest is request for SecurityUserSource
type SecurityUserSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityUserSource
func (r *SecurityUserSourceRequest) Get(ctx context.Context) (resObj *SecurityUserSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUserSource
func (r *SecurityUserSourceRequest) Update(ctx context.Context, reqObj *SecurityUserSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUserSource
func (r *SecurityUserSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityVMMetadataRequestBuilder is request builder for SecurityVMMetadata
type SecurityVMMetadataRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityVMMetadataRequest
func (b *SecurityVMMetadataRequestBuilder) Request() *SecurityVMMetadataRequest {
	return &SecurityVMMetadataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityVMMetadataRequest is request for SecurityVMMetadata
type SecurityVMMetadataRequest struct{ BaseRequest }

// Get performs GET request for SecurityVMMetadata
func (r *SecurityVMMetadataRequest) Get(ctx context.Context) (resObj *SecurityVMMetadata, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityVMMetadata
func (r *SecurityVMMetadataRequest) Update(ctx context.Context, reqObj *SecurityVMMetadata) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityVMMetadata
func (r *SecurityVMMetadataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityVerificationResultRequestBuilder is request builder for SecurityVerificationResult
type SecurityVerificationResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityVerificationResultRequest
func (b *SecurityVerificationResultRequestBuilder) Request() *SecurityVerificationResultRequest {
	return &SecurityVerificationResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityVerificationResultRequest is request for SecurityVerificationResult
type SecurityVerificationResultRequest struct{ BaseRequest }

// Get performs GET request for SecurityVerificationResult
func (r *SecurityVerificationResultRequest) Get(ctx context.Context) (resObj *SecurityVerificationResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityVerificationResult
func (r *SecurityVerificationResultRequest) Update(ctx context.Context, reqObj *SecurityVerificationResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityVerificationResult
func (r *SecurityVerificationResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityVulnerabilityRequestBuilder is request builder for SecurityVulnerability
type SecurityVulnerabilityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityVulnerabilityRequest
func (b *SecurityVulnerabilityRequestBuilder) Request() *SecurityVulnerabilityRequest {
	return &SecurityVulnerabilityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityVulnerabilityRequest is request for SecurityVulnerability
type SecurityVulnerabilityRequest struct{ BaseRequest }

// Get performs GET request for SecurityVulnerability
func (r *SecurityVulnerabilityRequest) Get(ctx context.Context) (resObj *SecurityVulnerability, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityVulnerability
func (r *SecurityVulnerabilityRequest) Update(ctx context.Context, reqObj *SecurityVulnerability) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityVulnerability
func (r *SecurityVulnerabilityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityVulnerabilityComponentRequestBuilder is request builder for SecurityVulnerabilityComponent
type SecurityVulnerabilityComponentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityVulnerabilityComponentRequest
func (b *SecurityVulnerabilityComponentRequestBuilder) Request() *SecurityVulnerabilityComponentRequest {
	return &SecurityVulnerabilityComponentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityVulnerabilityComponentRequest is request for SecurityVulnerabilityComponent
type SecurityVulnerabilityComponentRequest struct{ BaseRequest }

// Get performs GET request for SecurityVulnerabilityComponent
func (r *SecurityVulnerabilityComponentRequest) Get(ctx context.Context) (resObj *SecurityVulnerabilityComponent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityVulnerabilityComponent
func (r *SecurityVulnerabilityComponentRequest) Update(ctx context.Context, reqObj *SecurityVulnerabilityComponent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityVulnerabilityComponent
func (r *SecurityVulnerabilityComponentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityApplyHold action undocumentedrav
func (b *SecurityEdiscoveryCaseCustodiansCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder) Request() *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest {
	return &SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityRemoveHold action undocumentedrav
func (b *SecurityEdiscoveryCaseCustodiansCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder) Request() *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest {
	return &SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityApplyHold action undocumentedrav
func (b *SecurityEdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SecurityApplyHold action undocumentedrav
func (b *SecurityEdiscoverySearchNoncustodialSourcesCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityRemoveHold action undocumentedrav
func (b *SecurityEdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SecurityRemoveHold action undocumentedrav
func (b *SecurityEdiscoverySearchNoncustodialSourcesCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequestBuilder struct{ BaseRequestBuilder }

// SecurityEvaluateApplication action undocumentedrac
func (b *SecurityInformationProtectionSensitivityLabelsCollectionRequestBuilder) SecurityEvaluateApplication(reqObj *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequestParameter) *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequestBuilder {
	bb := &SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityEvaluateApplication"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest struct{ BaseRequest }

func (b *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequestBuilder) Request() *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest {
	return &SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]SecurityInformationProtectionAction, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecurityInformationProtectionAction
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []SecurityInformationProtectionAction
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest) PostN(ctx context.Context, n int) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateApplicationRequest) Post(ctx context.Context) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequestBuilder struct{ BaseRequestBuilder }

// SecurityEvaluateClassificationResults action undocumentedrac
func (b *SecurityInformationProtectionSensitivityLabelsCollectionRequestBuilder) SecurityEvaluateClassificationResults(reqObj *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequestParameter) *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequestBuilder {
	bb := &SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityEvaluateClassificationResults"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest struct{ BaseRequest }

func (b *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequestBuilder) Request() *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest {
	return &SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]SecurityInformationProtectionAction, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecurityInformationProtectionAction
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []SecurityInformationProtectionAction
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest) PostN(ctx context.Context, n int) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateClassificationResultsRequest) Post(ctx context.Context) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequestBuilder struct{ BaseRequestBuilder }

// SecurityEvaluateRemoval action undocumentedrac
func (b *SecurityInformationProtectionSensitivityLabelsCollectionRequestBuilder) SecurityEvaluateRemoval(reqObj *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequestParameter) *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequestBuilder {
	bb := &SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityEvaluateRemoval"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest struct{ BaseRequest }

func (b *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequestBuilder) Request() *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest {
	return &SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]SecurityInformationProtectionAction, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecurityInformationProtectionAction
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []SecurityInformationProtectionAction
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest) PostN(ctx context.Context, n int) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *SecuritySensitivityLabelCollectionSecurityEvaluateRemovalRequest) Post(ctx context.Context) ([]SecurityInformationProtectionAction, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequestBuilder struct{ BaseRequestBuilder }

// SecurityExtractContentLabel action undocumentedras
func (b *SecurityInformationProtectionSensitivityLabelsCollectionRequestBuilder) SecurityExtractContentLabel(reqObj *SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequestParameter) *SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequestBuilder {
	bb := &SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityExtractContentLabel"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequest struct{ BaseRequest }

func (b *SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequestBuilder) Request() *SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequest {
	return &SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecuritySensitivityLabelCollectionSecurityExtractContentLabelRequest) Post(ctx context.Context) (resObj *SecurityContentLabel, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
