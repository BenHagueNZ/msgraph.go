// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// TargetPolicyEndpointsRequestBuilder is request builder for TargetPolicyEndpoints
type TargetPolicyEndpointsRequestBuilder struct{ BaseRequestBuilder }

// Request returns TargetPolicyEndpointsRequest
func (b *TargetPolicyEndpointsRequestBuilder) Request() *TargetPolicyEndpointsRequest {
	return &TargetPolicyEndpointsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TargetPolicyEndpointsRequest is request for TargetPolicyEndpoints
type TargetPolicyEndpointsRequest struct{ BaseRequest }

// Get performs GET request for TargetPolicyEndpoints
func (r *TargetPolicyEndpointsRequest) Get(ctx context.Context) (resObj *TargetPolicyEndpoints, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TargetPolicyEndpoints
func (r *TargetPolicyEndpointsRequest) Update(ctx context.Context, reqObj *TargetPolicyEndpoints) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TargetPolicyEndpoints
func (r *TargetPolicyEndpointsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TargetResourceRequestBuilder is request builder for TargetResource
type TargetResourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns TargetResourceRequest
func (b *TargetResourceRequestBuilder) Request() *TargetResourceRequest {
	return &TargetResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TargetResourceRequest is request for TargetResource
type TargetResourceRequest struct{ BaseRequest }

// Get performs GET request for TargetResource
func (r *TargetResourceRequest) Get(ctx context.Context) (resObj *TargetResource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TargetResource
func (r *TargetResourceRequest) Update(ctx context.Context, reqObj *TargetResource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TargetResource
func (r *TargetResourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
