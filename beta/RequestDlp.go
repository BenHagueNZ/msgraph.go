// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// DlpActionInfoRequestBuilder is request builder for DlpActionInfo
type DlpActionInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpActionInfoRequest
func (b *DlpActionInfoRequestBuilder) Request() *DlpActionInfoRequest {
	return &DlpActionInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpActionInfoRequest is request for DlpActionInfo
type DlpActionInfoRequest struct{ BaseRequest }

// Get performs GET request for DlpActionInfo
func (r *DlpActionInfoRequest) Get(ctx context.Context) (resObj *DlpActionInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpActionInfo
func (r *DlpActionInfoRequest) Update(ctx context.Context, reqObj *DlpActionInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpActionInfo
func (r *DlpActionInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpEvaluatePoliciesJobResponseRequestBuilder is request builder for DlpEvaluatePoliciesJobResponse
type DlpEvaluatePoliciesJobResponseRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpEvaluatePoliciesJobResponseRequest
func (b *DlpEvaluatePoliciesJobResponseRequestBuilder) Request() *DlpEvaluatePoliciesJobResponseRequest {
	return &DlpEvaluatePoliciesJobResponseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpEvaluatePoliciesJobResponseRequest is request for DlpEvaluatePoliciesJobResponse
type DlpEvaluatePoliciesJobResponseRequest struct{ BaseRequest }

// Get performs GET request for DlpEvaluatePoliciesJobResponse
func (r *DlpEvaluatePoliciesJobResponseRequest) Get(ctx context.Context) (resObj *DlpEvaluatePoliciesJobResponse, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpEvaluatePoliciesJobResponse
func (r *DlpEvaluatePoliciesJobResponseRequest) Update(ctx context.Context, reqObj *DlpEvaluatePoliciesJobResponse) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpEvaluatePoliciesJobResponse
func (r *DlpEvaluatePoliciesJobResponseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpEvaluatePoliciesRequestObjectRequestBuilder is request builder for DlpEvaluatePoliciesRequestObject
type DlpEvaluatePoliciesRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpEvaluatePoliciesRequestObjectRequest
func (b *DlpEvaluatePoliciesRequestObjectRequestBuilder) Request() *DlpEvaluatePoliciesRequestObjectRequest {
	return &DlpEvaluatePoliciesRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpEvaluatePoliciesRequestObjectRequest is request for DlpEvaluatePoliciesRequestObject
type DlpEvaluatePoliciesRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for DlpEvaluatePoliciesRequestObject
func (r *DlpEvaluatePoliciesRequestObjectRequest) Get(ctx context.Context) (resObj *DlpEvaluatePoliciesRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpEvaluatePoliciesRequestObject
func (r *DlpEvaluatePoliciesRequestObjectRequest) Update(ctx context.Context, reqObj *DlpEvaluatePoliciesRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpEvaluatePoliciesRequestObject
func (r *DlpEvaluatePoliciesRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpEvaluationInputRequestBuilder is request builder for DlpEvaluationInput
type DlpEvaluationInputRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpEvaluationInputRequest
func (b *DlpEvaluationInputRequestBuilder) Request() *DlpEvaluationInputRequest {
	return &DlpEvaluationInputRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpEvaluationInputRequest is request for DlpEvaluationInput
type DlpEvaluationInputRequest struct{ BaseRequest }

// Get performs GET request for DlpEvaluationInput
func (r *DlpEvaluationInputRequest) Get(ctx context.Context) (resObj *DlpEvaluationInput, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpEvaluationInput
func (r *DlpEvaluationInputRequest) Update(ctx context.Context, reqObj *DlpEvaluationInput) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpEvaluationInput
func (r *DlpEvaluationInputRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpEvaluationWindowsDevicesInputRequestBuilder is request builder for DlpEvaluationWindowsDevicesInput
type DlpEvaluationWindowsDevicesInputRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpEvaluationWindowsDevicesInputRequest
func (b *DlpEvaluationWindowsDevicesInputRequestBuilder) Request() *DlpEvaluationWindowsDevicesInputRequest {
	return &DlpEvaluationWindowsDevicesInputRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpEvaluationWindowsDevicesInputRequest is request for DlpEvaluationWindowsDevicesInput
type DlpEvaluationWindowsDevicesInputRequest struct{ BaseRequest }

// Get performs GET request for DlpEvaluationWindowsDevicesInput
func (r *DlpEvaluationWindowsDevicesInputRequest) Get(ctx context.Context) (resObj *DlpEvaluationWindowsDevicesInput, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpEvaluationWindowsDevicesInput
func (r *DlpEvaluationWindowsDevicesInputRequest) Update(ctx context.Context, reqObj *DlpEvaluationWindowsDevicesInput) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpEvaluationWindowsDevicesInput
func (r *DlpEvaluationWindowsDevicesInputRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpNotificationRequestBuilder is request builder for DlpNotification
type DlpNotificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpNotificationRequest
func (b *DlpNotificationRequestBuilder) Request() *DlpNotificationRequest {
	return &DlpNotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpNotificationRequest is request for DlpNotification
type DlpNotificationRequest struct{ BaseRequest }

// Get performs GET request for DlpNotification
func (r *DlpNotificationRequest) Get(ctx context.Context) (resObj *DlpNotification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpNotification
func (r *DlpNotificationRequest) Update(ctx context.Context, reqObj *DlpNotification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpNotification
func (r *DlpNotificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpPoliciesJobResultRequestBuilder is request builder for DlpPoliciesJobResult
type DlpPoliciesJobResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpPoliciesJobResultRequest
func (b *DlpPoliciesJobResultRequestBuilder) Request() *DlpPoliciesJobResultRequest {
	return &DlpPoliciesJobResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpPoliciesJobResultRequest is request for DlpPoliciesJobResult
type DlpPoliciesJobResultRequest struct{ BaseRequest }

// Get performs GET request for DlpPoliciesJobResult
func (r *DlpPoliciesJobResultRequest) Get(ctx context.Context) (resObj *DlpPoliciesJobResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpPoliciesJobResult
func (r *DlpPoliciesJobResultRequest) Update(ctx context.Context, reqObj *DlpPoliciesJobResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpPoliciesJobResult
func (r *DlpPoliciesJobResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DlpWindowsDevicesNotificationRequestBuilder is request builder for DlpWindowsDevicesNotification
type DlpWindowsDevicesNotificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns DlpWindowsDevicesNotificationRequest
func (b *DlpWindowsDevicesNotificationRequestBuilder) Request() *DlpWindowsDevicesNotificationRequest {
	return &DlpWindowsDevicesNotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DlpWindowsDevicesNotificationRequest is request for DlpWindowsDevicesNotification
type DlpWindowsDevicesNotificationRequest struct{ BaseRequest }

// Get performs GET request for DlpWindowsDevicesNotification
func (r *DlpWindowsDevicesNotificationRequest) Get(ctx context.Context) (resObj *DlpWindowsDevicesNotification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DlpWindowsDevicesNotification
func (r *DlpWindowsDevicesNotificationRequest) Update(ctx context.Context, reqObj *DlpWindowsDevicesNotification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DlpWindowsDevicesNotification
func (r *DlpWindowsDevicesNotificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
