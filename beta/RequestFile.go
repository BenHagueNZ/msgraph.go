// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// FileRequestBuilder is request builder for File
type FileRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileRequest
func (b *FileRequestBuilder) Request() *FileRequest {
	return &FileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileRequest is request for File
type FileRequest struct{ BaseRequest }

// Get performs GET request for File
func (r *FileRequest) Get(ctx context.Context) (resObj *File, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for File
func (r *FileRequest) Update(ctx context.Context, reqObj *File) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for File
func (r *FileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileAssessmentRequestObjectRequestBuilder is request builder for FileAssessmentRequestObject
type FileAssessmentRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileAssessmentRequestObjectRequest
func (b *FileAssessmentRequestObjectRequestBuilder) Request() *FileAssessmentRequestObjectRequest {
	return &FileAssessmentRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileAssessmentRequestObjectRequest is request for FileAssessmentRequestObject
type FileAssessmentRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for FileAssessmentRequestObject
func (r *FileAssessmentRequestObjectRequest) Get(ctx context.Context) (resObj *FileAssessmentRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileAssessmentRequestObject
func (r *FileAssessmentRequestObjectRequest) Update(ctx context.Context, reqObj *FileAssessmentRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileAssessmentRequestObject
func (r *FileAssessmentRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileAttachmentRequestBuilder is request builder for FileAttachment
type FileAttachmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileAttachmentRequest
func (b *FileAttachmentRequestBuilder) Request() *FileAttachmentRequest {
	return &FileAttachmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileAttachmentRequest is request for FileAttachment
type FileAttachmentRequest struct{ BaseRequest }

// Get performs GET request for FileAttachment
func (r *FileAttachmentRequest) Get(ctx context.Context) (resObj *FileAttachment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileAttachment
func (r *FileAttachmentRequest) Update(ctx context.Context, reqObj *FileAttachment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileAttachment
func (r *FileAttachmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileClassificationRequestObjectRequestBuilder is request builder for FileClassificationRequestObject
type FileClassificationRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileClassificationRequestObjectRequest
func (b *FileClassificationRequestObjectRequestBuilder) Request() *FileClassificationRequestObjectRequest {
	return &FileClassificationRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileClassificationRequestObjectRequest is request for FileClassificationRequestObject
type FileClassificationRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Get(ctx context.Context) (resObj *FileClassificationRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Update(ctx context.Context, reqObj *FileClassificationRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileContentPropertiesRequestBuilder is request builder for FileContentProperties
type FileContentPropertiesRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileContentPropertiesRequest
func (b *FileContentPropertiesRequestBuilder) Request() *FileContentPropertiesRequest {
	return &FileContentPropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileContentPropertiesRequest is request for FileContentProperties
type FileContentPropertiesRequest struct{ BaseRequest }

// Get performs GET request for FileContentProperties
func (r *FileContentPropertiesRequest) Get(ctx context.Context) (resObj *FileContentProperties, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileContentProperties
func (r *FileContentPropertiesRequest) Update(ctx context.Context, reqObj *FileContentProperties) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileContentProperties
func (r *FileContentPropertiesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileEncryptionInfoRequestBuilder is request builder for FileEncryptionInfo
type FileEncryptionInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileEncryptionInfoRequest
func (b *FileEncryptionInfoRequestBuilder) Request() *FileEncryptionInfoRequest {
	return &FileEncryptionInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileEncryptionInfoRequest is request for FileEncryptionInfo
type FileEncryptionInfoRequest struct{ BaseRequest }

// Get performs GET request for FileEncryptionInfo
func (r *FileEncryptionInfoRequest) Get(ctx context.Context) (resObj *FileEncryptionInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileEncryptionInfo
func (r *FileEncryptionInfoRequest) Update(ctx context.Context, reqObj *FileEncryptionInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileEncryptionInfo
func (r *FileEncryptionInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileHashRequestBuilder is request builder for FileHash
type FileHashRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileHashRequest
func (b *FileHashRequestBuilder) Request() *FileHashRequest {
	return &FileHashRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileHashRequest is request for FileHash
type FileHashRequest struct{ BaseRequest }

// Get performs GET request for FileHash
func (r *FileHashRequest) Get(ctx context.Context) (resObj *FileHash, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileHash
func (r *FileHashRequest) Update(ctx context.Context, reqObj *FileHash) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileHash
func (r *FileHashRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileSecurityProfileRequestBuilder is request builder for FileSecurityProfile
type FileSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileSecurityProfileRequest
func (b *FileSecurityProfileRequestBuilder) Request() *FileSecurityProfileRequest {
	return &FileSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileSecurityProfileRequest is request for FileSecurityProfile
type FileSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Get(ctx context.Context) (resObj *FileSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Update(ctx context.Context, reqObj *FileSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileSecurityStateRequestBuilder is request builder for FileSecurityState
type FileSecurityStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileSecurityStateRequest
func (b *FileSecurityStateRequestBuilder) Request() *FileSecurityStateRequest {
	return &FileSecurityStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileSecurityStateRequest is request for FileSecurityState
type FileSecurityStateRequest struct{ BaseRequest }

// Get performs GET request for FileSecurityState
func (r *FileSecurityStateRequest) Get(ctx context.Context) (resObj *FileSecurityState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileSecurityState
func (r *FileSecurityStateRequest) Update(ctx context.Context, reqObj *FileSecurityState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileSecurityState
func (r *FileSecurityStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// FileSystemInfoRequestBuilder is request builder for FileSystemInfo
type FileSystemInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileSystemInfoRequest
func (b *FileSystemInfoRequestBuilder) Request() *FileSystemInfoRequest {
	return &FileSystemInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileSystemInfoRequest is request for FileSystemInfo
type FileSystemInfoRequest struct{ BaseRequest }

// Get performs GET request for FileSystemInfo
func (r *FileSystemInfoRequest) Get(ctx context.Context) (resObj *FileSystemInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileSystemInfo
func (r *FileSystemInfoRequest) Update(ctx context.Context, reqObj *FileSystemInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileSystemInfo
func (r *FileSystemInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
