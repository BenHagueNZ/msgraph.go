// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ConfigManagerCollectionRequestBuilder is request builder for ConfigManagerCollection
type ConfigManagerCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ConfigManagerCollectionRequest
func (b *ConfigManagerCollectionRequestBuilder) Request() *ConfigManagerCollectionRequest {
	return &ConfigManagerCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ConfigManagerCollectionRequest is request for ConfigManagerCollection
type ConfigManagerCollectionRequest struct{ BaseRequest }

// Get performs GET request for ConfigManagerCollection
func (r *ConfigManagerCollectionRequest) Get(ctx context.Context) (resObj *ConfigManagerCollection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ConfigManagerCollection
func (r *ConfigManagerCollectionRequest) Update(ctx context.Context, reqObj *ConfigManagerCollection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ConfigManagerCollection
func (r *ConfigManagerCollectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ConfigManagerPolicySummaryRequestBuilder is request builder for ConfigManagerPolicySummary
type ConfigManagerPolicySummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ConfigManagerPolicySummaryRequest
func (b *ConfigManagerPolicySummaryRequestBuilder) Request() *ConfigManagerPolicySummaryRequest {
	return &ConfigManagerPolicySummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ConfigManagerPolicySummaryRequest is request for ConfigManagerPolicySummary
type ConfigManagerPolicySummaryRequest struct{ BaseRequest }

// Get performs GET request for ConfigManagerPolicySummary
func (r *ConfigManagerPolicySummaryRequest) Get(ctx context.Context) (resObj *ConfigManagerPolicySummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ConfigManagerPolicySummary
func (r *ConfigManagerPolicySummaryRequest) Update(ctx context.Context, reqObj *ConfigManagerPolicySummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ConfigManagerPolicySummary
func (r *ConfigManagerPolicySummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
