// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// IncludeTargets returns request builder for VoiceAuthenticationMethodTarget collection
func (b *VoiceAuthenticationMethodConfigurationRequestBuilder) IncludeTargets() *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder {
	bb := &VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/includeTargets"
	return bb
}

// VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder is request builder for VoiceAuthenticationMethodTarget collection rcn
type VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for VoiceAuthenticationMethodTarget collection
func (b *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder) Request() *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest {
	return &VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for VoiceAuthenticationMethodTarget item
func (b *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder) ID(id string) *VoiceAuthenticationMethodTargetRequestBuilder {
	bb := &VoiceAuthenticationMethodTargetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest is request for VoiceAuthenticationMethodTarget collection
type VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for VoiceAuthenticationMethodTarget collection
func (r *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]VoiceAuthenticationMethodTarget, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []VoiceAuthenticationMethodTarget
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []VoiceAuthenticationMethodTarget
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for VoiceAuthenticationMethodTarget collection, max N pages
func (r *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest) GetN(ctx context.Context, n int) ([]VoiceAuthenticationMethodTarget, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for VoiceAuthenticationMethodTarget collection
func (r *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest) Get(ctx context.Context) ([]VoiceAuthenticationMethodTarget, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for VoiceAuthenticationMethodTarget collection
func (r *VoiceAuthenticationMethodConfigurationIncludeTargetsCollectionRequest) Add(ctx context.Context, reqObj *VoiceAuthenticationMethodTarget) (resObj *VoiceAuthenticationMethodTarget, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// VoiceAuthenticationMethodConfiguration returns request builder for VoiceAuthenticationMethodConfiguration collection
func (b *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionRequestBuilder) VoiceAuthenticationMethodConfiguration() *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder {
	bb := &AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder is request builder for VoiceAuthenticationMethodConfiguration collection rcn
type AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for VoiceAuthenticationMethodConfiguration collection
func (b *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder) Request() *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest {
	return &AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for VoiceAuthenticationMethodConfiguration item
func (b *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequestBuilder) ID(id string) *VoiceAuthenticationMethodConfigurationRequestBuilder {
	bb := &VoiceAuthenticationMethodConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest is request for VoiceAuthenticationMethodConfiguration collection
type AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for VoiceAuthenticationMethodConfiguration collection
func (r *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]VoiceAuthenticationMethodConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []VoiceAuthenticationMethodConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []VoiceAuthenticationMethodConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for VoiceAuthenticationMethodConfiguration collection, max N pages
func (r *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]VoiceAuthenticationMethodConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for VoiceAuthenticationMethodConfiguration collection
func (r *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest) Get(ctx context.Context) ([]VoiceAuthenticationMethodConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for VoiceAuthenticationMethodConfiguration collection
func (r *AuthenticationMethodsPolicyAuthenticationMethodConfigurationsCollectionVoiceAuthenticationMethodConfigurationCollectionRequest) Add(ctx context.Context, reqObj *VoiceAuthenticationMethodConfiguration) (resObj *VoiceAuthenticationMethodConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// VoiceAuthenticationMethodTarget returns request builder for VoiceAuthenticationMethodTarget collection
func (b *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionRequestBuilder) VoiceAuthenticationMethodTarget() *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder {
	bb := &EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/"
	return bb
}

// EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder is request builder for VoiceAuthenticationMethodTarget collection rcn
type EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for VoiceAuthenticationMethodTarget collection
func (b *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder) Request() *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest {
	return &EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for VoiceAuthenticationMethodTarget item
func (b *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequestBuilder) ID(id string) *VoiceAuthenticationMethodTargetRequestBuilder {
	bb := &VoiceAuthenticationMethodTargetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest is request for VoiceAuthenticationMethodTarget collection
type EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for VoiceAuthenticationMethodTarget collection
func (r *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]VoiceAuthenticationMethodTarget, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []VoiceAuthenticationMethodTarget
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []VoiceAuthenticationMethodTarget
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for VoiceAuthenticationMethodTarget collection, max N pages
func (r *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest) GetN(ctx context.Context, n int) ([]VoiceAuthenticationMethodTarget, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for VoiceAuthenticationMethodTarget collection
func (r *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest) Get(ctx context.Context) ([]VoiceAuthenticationMethodTarget, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for VoiceAuthenticationMethodTarget collection
func (r *EmailAuthenticationMethodConfigurationIncludeTargetsCollectionVoiceAuthenticationMethodTargetCollectionRequest) Add(ctx context.Context, reqObj *VoiceAuthenticationMethodTarget) (resObj *VoiceAuthenticationMethodTarget, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}
