// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IncludeAllAccountTargetContentRequestBuilder is request builder for IncludeAllAccountTargetContent
type IncludeAllAccountTargetContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IncludeAllAccountTargetContentRequest
func (b *IncludeAllAccountTargetContentRequestBuilder) Request() *IncludeAllAccountTargetContentRequest {
	return &IncludeAllAccountTargetContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IncludeAllAccountTargetContentRequest is request for IncludeAllAccountTargetContent
type IncludeAllAccountTargetContentRequest struct{ BaseRequest }

// Get performs GET request for IncludeAllAccountTargetContent
func (r *IncludeAllAccountTargetContentRequest) Get(ctx context.Context) (resObj *IncludeAllAccountTargetContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IncludeAllAccountTargetContent
func (r *IncludeAllAccountTargetContentRequest) Update(ctx context.Context, reqObj *IncludeAllAccountTargetContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IncludeAllAccountTargetContent
func (r *IncludeAllAccountTargetContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IncludeTargetRequestBuilder is request builder for IncludeTarget
type IncludeTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns IncludeTargetRequest
func (b *IncludeTargetRequestBuilder) Request() *IncludeTargetRequest {
	return &IncludeTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IncludeTargetRequest is request for IncludeTarget
type IncludeTargetRequest struct{ BaseRequest }

// Get performs GET request for IncludeTarget
func (r *IncludeTargetRequest) Get(ctx context.Context) (resObj *IncludeTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IncludeTarget
func (r *IncludeTargetRequest) Update(ctx context.Context, reqObj *IncludeTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IncludeTarget
func (r *IncludeTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
