// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// EvaluateDynamicMembershipResultRequestBuilder is request builder for EvaluateDynamicMembershipResult
type EvaluateDynamicMembershipResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns EvaluateDynamicMembershipResultRequest
func (b *EvaluateDynamicMembershipResultRequestBuilder) Request() *EvaluateDynamicMembershipResultRequest {
	return &EvaluateDynamicMembershipResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EvaluateDynamicMembershipResultRequest is request for EvaluateDynamicMembershipResult
type EvaluateDynamicMembershipResultRequest struct{ BaseRequest }

// Get performs GET request for EvaluateDynamicMembershipResult
func (r *EvaluateDynamicMembershipResultRequest) Get(ctx context.Context) (resObj *EvaluateDynamicMembershipResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EvaluateDynamicMembershipResult
func (r *EvaluateDynamicMembershipResultRequest) Update(ctx context.Context, reqObj *EvaluateDynamicMembershipResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EvaluateDynamicMembershipResult
func (r *EvaluateDynamicMembershipResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EvaluateLabelJobResponseRequestBuilder is request builder for EvaluateLabelJobResponse
type EvaluateLabelJobResponseRequestBuilder struct{ BaseRequestBuilder }

// Request returns EvaluateLabelJobResponseRequest
func (b *EvaluateLabelJobResponseRequestBuilder) Request() *EvaluateLabelJobResponseRequest {
	return &EvaluateLabelJobResponseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EvaluateLabelJobResponseRequest is request for EvaluateLabelJobResponse
type EvaluateLabelJobResponseRequest struct{ BaseRequest }

// Get performs GET request for EvaluateLabelJobResponse
func (r *EvaluateLabelJobResponseRequest) Get(ctx context.Context) (resObj *EvaluateLabelJobResponse, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EvaluateLabelJobResponse
func (r *EvaluateLabelJobResponseRequest) Update(ctx context.Context, reqObj *EvaluateLabelJobResponse) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EvaluateLabelJobResponse
func (r *EvaluateLabelJobResponseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EvaluateLabelJobResultRequestBuilder is request builder for EvaluateLabelJobResult
type EvaluateLabelJobResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns EvaluateLabelJobResultRequest
func (b *EvaluateLabelJobResultRequestBuilder) Request() *EvaluateLabelJobResultRequest {
	return &EvaluateLabelJobResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EvaluateLabelJobResultRequest is request for EvaluateLabelJobResult
type EvaluateLabelJobResultRequest struct{ BaseRequest }

// Get performs GET request for EvaluateLabelJobResult
func (r *EvaluateLabelJobResultRequest) Get(ctx context.Context) (resObj *EvaluateLabelJobResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EvaluateLabelJobResult
func (r *EvaluateLabelJobResultRequest) Update(ctx context.Context, reqObj *EvaluateLabelJobResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EvaluateLabelJobResult
func (r *EvaluateLabelJobResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EvaluateLabelJobResultGroupRequestBuilder is request builder for EvaluateLabelJobResultGroup
type EvaluateLabelJobResultGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns EvaluateLabelJobResultGroupRequest
func (b *EvaluateLabelJobResultGroupRequestBuilder) Request() *EvaluateLabelJobResultGroupRequest {
	return &EvaluateLabelJobResultGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EvaluateLabelJobResultGroupRequest is request for EvaluateLabelJobResultGroup
type EvaluateLabelJobResultGroupRequest struct{ BaseRequest }

// Get performs GET request for EvaluateLabelJobResultGroup
func (r *EvaluateLabelJobResultGroupRequest) Get(ctx context.Context) (resObj *EvaluateLabelJobResultGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EvaluateLabelJobResultGroup
func (r *EvaluateLabelJobResultGroupRequest) Update(ctx context.Context, reqObj *EvaluateLabelJobResultGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EvaluateLabelJobResultGroup
func (r *EvaluateLabelJobResultGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EvaluateSensitivityLabelsRequestObjectRequestBuilder is request builder for EvaluateSensitivityLabelsRequestObject
type EvaluateSensitivityLabelsRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns EvaluateSensitivityLabelsRequestObjectRequest
func (b *EvaluateSensitivityLabelsRequestObjectRequestBuilder) Request() *EvaluateSensitivityLabelsRequestObjectRequest {
	return &EvaluateSensitivityLabelsRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EvaluateSensitivityLabelsRequestObjectRequest is request for EvaluateSensitivityLabelsRequestObject
type EvaluateSensitivityLabelsRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for EvaluateSensitivityLabelsRequestObject
func (r *EvaluateSensitivityLabelsRequestObjectRequest) Get(ctx context.Context) (resObj *EvaluateSensitivityLabelsRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EvaluateSensitivityLabelsRequestObject
func (r *EvaluateSensitivityLabelsRequestObjectRequest) Update(ctx context.Context, reqObj *EvaluateSensitivityLabelsRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EvaluateSensitivityLabelsRequestObject
func (r *EvaluateSensitivityLabelsRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
