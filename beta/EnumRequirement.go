// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

// RequirementProvider undocumented
type RequirementProvider string

const (
	// RequirementProviderVUser undocumented
	RequirementProviderVUser RequirementProvider = "user"
	// RequirementProviderVRequest undocumented
	RequirementProviderVRequest RequirementProvider = "request"
	// RequirementProviderVServicePrincipal undocumented
	RequirementProviderVServicePrincipal RequirementProvider = "servicePrincipal"
	// RequirementProviderVV1ConditionalAccess undocumented
	RequirementProviderVV1ConditionalAccess RequirementProvider = "v1ConditionalAccess"
	// RequirementProviderVMultiConditionalAccess undocumented
	RequirementProviderVMultiConditionalAccess RequirementProvider = "multiConditionalAccess"
	// RequirementProviderVTenantSessionRiskPolicy undocumented
	RequirementProviderVTenantSessionRiskPolicy RequirementProvider = "tenantSessionRiskPolicy"
	// RequirementProviderVAccountCompromisePolicies undocumented
	RequirementProviderVAccountCompromisePolicies RequirementProvider = "accountCompromisePolicies"
	// RequirementProviderVV1ConditionalAccessDependency undocumented
	RequirementProviderVV1ConditionalAccessDependency RequirementProvider = "v1ConditionalAccessDependency"
	// RequirementProviderVV1ConditionalAccessPolicyIDRequested undocumented
	RequirementProviderVV1ConditionalAccessPolicyIDRequested RequirementProvider = "v1ConditionalAccessPolicyIdRequested"
	// RequirementProviderVMFARegistrationRequiredByIdentityProtectionPolicy undocumented
	RequirementProviderVMFARegistrationRequiredByIdentityProtectionPolicy RequirementProvider = "mfaRegistrationRequiredByIdentityProtectionPolicy"
	// RequirementProviderVBaselineProtection undocumented
	RequirementProviderVBaselineProtection RequirementProvider = "baselineProtection"
	// RequirementProviderVMFARegistrationRequiredByBaselineProtection undocumented
	RequirementProviderVMFARegistrationRequiredByBaselineProtection RequirementProvider = "mfaRegistrationRequiredByBaselineProtection"
	// RequirementProviderVMFARegistrationRequiredByMultiConditionalAccess undocumented
	RequirementProviderVMFARegistrationRequiredByMultiConditionalAccess RequirementProvider = "mfaRegistrationRequiredByMultiConditionalAccess"
	// RequirementProviderVEnforcedForCspAdmins undocumented
	RequirementProviderVEnforcedForCspAdmins RequirementProvider = "enforcedForCspAdmins"
	// RequirementProviderVSecurityDefaults undocumented
	RequirementProviderVSecurityDefaults RequirementProvider = "securityDefaults"
	// RequirementProviderVMFARegistrationRequiredBySecurityDefaults undocumented
	RequirementProviderVMFARegistrationRequiredBySecurityDefaults RequirementProvider = "mfaRegistrationRequiredBySecurityDefaults"
	// RequirementProviderVProofUpCodeRequest undocumented
	RequirementProviderVProofUpCodeRequest RequirementProvider = "proofUpCodeRequest"
	// RequirementProviderVCrossTenantOutboundRule undocumented
	RequirementProviderVCrossTenantOutboundRule RequirementProvider = "crossTenantOutboundRule"
	// RequirementProviderVGpsLocationCondition undocumented
	RequirementProviderVGpsLocationCondition RequirementProvider = "gpsLocationCondition"
	// RequirementProviderVRiskBasedPolicy undocumented
	RequirementProviderVRiskBasedPolicy RequirementProvider = "riskBasedPolicy"
	// RequirementProviderVUnknownFutureValue undocumented
	RequirementProviderVUnknownFutureValue RequirementProvider = "unknownFutureValue"
)

var (
	// RequirementProviderPUser is a pointer to RequirementProviderVUser
	RequirementProviderPUser = &_RequirementProviderPUser
	// RequirementProviderPRequest is a pointer to RequirementProviderVRequest
	RequirementProviderPRequest = &_RequirementProviderPRequest
	// RequirementProviderPServicePrincipal is a pointer to RequirementProviderVServicePrincipal
	RequirementProviderPServicePrincipal = &_RequirementProviderPServicePrincipal
	// RequirementProviderPV1ConditionalAccess is a pointer to RequirementProviderVV1ConditionalAccess
	RequirementProviderPV1ConditionalAccess = &_RequirementProviderPV1ConditionalAccess
	// RequirementProviderPMultiConditionalAccess is a pointer to RequirementProviderVMultiConditionalAccess
	RequirementProviderPMultiConditionalAccess = &_RequirementProviderPMultiConditionalAccess
	// RequirementProviderPTenantSessionRiskPolicy is a pointer to RequirementProviderVTenantSessionRiskPolicy
	RequirementProviderPTenantSessionRiskPolicy = &_RequirementProviderPTenantSessionRiskPolicy
	// RequirementProviderPAccountCompromisePolicies is a pointer to RequirementProviderVAccountCompromisePolicies
	RequirementProviderPAccountCompromisePolicies = &_RequirementProviderPAccountCompromisePolicies
	// RequirementProviderPV1ConditionalAccessDependency is a pointer to RequirementProviderVV1ConditionalAccessDependency
	RequirementProviderPV1ConditionalAccessDependency = &_RequirementProviderPV1ConditionalAccessDependency
	// RequirementProviderPV1ConditionalAccessPolicyIDRequested is a pointer to RequirementProviderVV1ConditionalAccessPolicyIDRequested
	RequirementProviderPV1ConditionalAccessPolicyIDRequested = &_RequirementProviderPV1ConditionalAccessPolicyIDRequested
	// RequirementProviderPMFARegistrationRequiredByIdentityProtectionPolicy is a pointer to RequirementProviderVMFARegistrationRequiredByIdentityProtectionPolicy
	RequirementProviderPMFARegistrationRequiredByIdentityProtectionPolicy = &_RequirementProviderPMFARegistrationRequiredByIdentityProtectionPolicy
	// RequirementProviderPBaselineProtection is a pointer to RequirementProviderVBaselineProtection
	RequirementProviderPBaselineProtection = &_RequirementProviderPBaselineProtection
	// RequirementProviderPMFARegistrationRequiredByBaselineProtection is a pointer to RequirementProviderVMFARegistrationRequiredByBaselineProtection
	RequirementProviderPMFARegistrationRequiredByBaselineProtection = &_RequirementProviderPMFARegistrationRequiredByBaselineProtection
	// RequirementProviderPMFARegistrationRequiredByMultiConditionalAccess is a pointer to RequirementProviderVMFARegistrationRequiredByMultiConditionalAccess
	RequirementProviderPMFARegistrationRequiredByMultiConditionalAccess = &_RequirementProviderPMFARegistrationRequiredByMultiConditionalAccess
	// RequirementProviderPEnforcedForCspAdmins is a pointer to RequirementProviderVEnforcedForCspAdmins
	RequirementProviderPEnforcedForCspAdmins = &_RequirementProviderPEnforcedForCspAdmins
	// RequirementProviderPSecurityDefaults is a pointer to RequirementProviderVSecurityDefaults
	RequirementProviderPSecurityDefaults = &_RequirementProviderPSecurityDefaults
	// RequirementProviderPMFARegistrationRequiredBySecurityDefaults is a pointer to RequirementProviderVMFARegistrationRequiredBySecurityDefaults
	RequirementProviderPMFARegistrationRequiredBySecurityDefaults = &_RequirementProviderPMFARegistrationRequiredBySecurityDefaults
	// RequirementProviderPProofUpCodeRequest is a pointer to RequirementProviderVProofUpCodeRequest
	RequirementProviderPProofUpCodeRequest = &_RequirementProviderPProofUpCodeRequest
	// RequirementProviderPCrossTenantOutboundRule is a pointer to RequirementProviderVCrossTenantOutboundRule
	RequirementProviderPCrossTenantOutboundRule = &_RequirementProviderPCrossTenantOutboundRule
	// RequirementProviderPGpsLocationCondition is a pointer to RequirementProviderVGpsLocationCondition
	RequirementProviderPGpsLocationCondition = &_RequirementProviderPGpsLocationCondition
	// RequirementProviderPRiskBasedPolicy is a pointer to RequirementProviderVRiskBasedPolicy
	RequirementProviderPRiskBasedPolicy = &_RequirementProviderPRiskBasedPolicy
	// RequirementProviderPUnknownFutureValue is a pointer to RequirementProviderVUnknownFutureValue
	RequirementProviderPUnknownFutureValue = &_RequirementProviderPUnknownFutureValue
)

var (
	_RequirementProviderPUser                                              = RequirementProviderVUser
	_RequirementProviderPRequest                                           = RequirementProviderVRequest
	_RequirementProviderPServicePrincipal                                  = RequirementProviderVServicePrincipal
	_RequirementProviderPV1ConditionalAccess                               = RequirementProviderVV1ConditionalAccess
	_RequirementProviderPMultiConditionalAccess                            = RequirementProviderVMultiConditionalAccess
	_RequirementProviderPTenantSessionRiskPolicy                           = RequirementProviderVTenantSessionRiskPolicy
	_RequirementProviderPAccountCompromisePolicies                         = RequirementProviderVAccountCompromisePolicies
	_RequirementProviderPV1ConditionalAccessDependency                     = RequirementProviderVV1ConditionalAccessDependency
	_RequirementProviderPV1ConditionalAccessPolicyIDRequested              = RequirementProviderVV1ConditionalAccessPolicyIDRequested
	_RequirementProviderPMFARegistrationRequiredByIdentityProtectionPolicy = RequirementProviderVMFARegistrationRequiredByIdentityProtectionPolicy
	_RequirementProviderPBaselineProtection                                = RequirementProviderVBaselineProtection
	_RequirementProviderPMFARegistrationRequiredByBaselineProtection       = RequirementProviderVMFARegistrationRequiredByBaselineProtection
	_RequirementProviderPMFARegistrationRequiredByMultiConditionalAccess   = RequirementProviderVMFARegistrationRequiredByMultiConditionalAccess
	_RequirementProviderPEnforcedForCspAdmins                              = RequirementProviderVEnforcedForCspAdmins
	_RequirementProviderPSecurityDefaults                                  = RequirementProviderVSecurityDefaults
	_RequirementProviderPMFARegistrationRequiredBySecurityDefaults         = RequirementProviderVMFARegistrationRequiredBySecurityDefaults
	_RequirementProviderPProofUpCodeRequest                                = RequirementProviderVProofUpCodeRequest
	_RequirementProviderPCrossTenantOutboundRule                           = RequirementProviderVCrossTenantOutboundRule
	_RequirementProviderPGpsLocationCondition                              = RequirementProviderVGpsLocationCondition
	_RequirementProviderPRiskBasedPolicy                                   = RequirementProviderVRiskBasedPolicy
	_RequirementProviderPUnknownFutureValue                                = RequirementProviderVUnknownFutureValue
)
