// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// LabelActionBaseRequestBuilder is request builder for LabelActionBase
type LabelActionBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns LabelActionBaseRequest
func (b *LabelActionBaseRequestBuilder) Request() *LabelActionBaseRequest {
	return &LabelActionBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// LabelActionBaseRequest is request for LabelActionBase
type LabelActionBaseRequest struct{ BaseRequest }

// Get performs GET request for LabelActionBase
func (r *LabelActionBaseRequest) Get(ctx context.Context) (resObj *LabelActionBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for LabelActionBase
func (r *LabelActionBaseRequest) Update(ctx context.Context, reqObj *LabelActionBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for LabelActionBase
func (r *LabelActionBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// LabelDetailsRequestBuilder is request builder for LabelDetails
type LabelDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns LabelDetailsRequest
func (b *LabelDetailsRequestBuilder) Request() *LabelDetailsRequest {
	return &LabelDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// LabelDetailsRequest is request for LabelDetails
type LabelDetailsRequest struct{ BaseRequest }

// Get performs GET request for LabelDetails
func (r *LabelDetailsRequest) Get(ctx context.Context) (resObj *LabelDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for LabelDetails
func (r *LabelDetailsRequest) Update(ctx context.Context, reqObj *LabelDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for LabelDetails
func (r *LabelDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// LabelPolicyRequestBuilder is request builder for LabelPolicy
type LabelPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns LabelPolicyRequest
func (b *LabelPolicyRequestBuilder) Request() *LabelPolicyRequest {
	return &LabelPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// LabelPolicyRequest is request for LabelPolicy
type LabelPolicyRequest struct{ BaseRequest }

// Get performs GET request for LabelPolicy
func (r *LabelPolicyRequest) Get(ctx context.Context) (resObj *LabelPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for LabelPolicy
func (r *LabelPolicyRequest) Update(ctx context.Context, reqObj *LabelPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for LabelPolicy
func (r *LabelPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
