// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// Malware undocumented
type Malware struct {
	// Object is the base model of Malware
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
}

func NewMalware() (*Malware, error) {
	newMalware := &Malware{
		ODataType: "#microsoft.graph.Malware",
	}
	return newMalware, nil
}

// MalwareState undocumented
type MalwareState struct {
	// Object is the base model of MalwareState
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// Category undocumented
	Category *string `json:"category,omitempty"`
	// Family undocumented
	Family *string `json:"family,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Severity undocumented
	Severity *string `json:"severity,omitempty"`
	// WasRunning undocumented
	WasRunning *bool `json:"wasRunning,omitempty"`
}

func NewMalwareState() (*MalwareState, error) {
	newMalwareState := &MalwareState{
		ODataType: "#microsoft.graph.MalwareState",
	}
	return newMalwareState, nil
}

// MalwareStateForWindowsDevice undocumented
type MalwareStateForWindowsDevice struct {
	// Entity is the base model of MalwareStateForWindowsDevice
	Entity

	ODataType string `json:"@odata.type,omitempty"`
	// DetectionCount undocumented
	DetectionCount *int `json:"detectionCount,omitempty"`
	// DeviceName undocumented
	DeviceName *string `json:"deviceName,omitempty"`
	// ExecutionState undocumented
	ExecutionState *WindowsMalwareExecutionState `json:"executionState,omitempty"`
	// InitialDetectionDateTime undocumented
	InitialDetectionDateTime *time.Time `json:"initialDetectionDateTime,omitempty"`
	// LastStateChangeDateTime undocumented
	LastStateChangeDateTime *time.Time `json:"lastStateChangeDateTime,omitempty"`
	// ThreatState undocumented
	ThreatState *WindowsMalwareThreatState `json:"threatState,omitempty"`
}

func NewMalwareStateForWindowsDevice() (*MalwareStateForWindowsDevice, error) {
	newMalwareStateForWindowsDevice := &MalwareStateForWindowsDevice{
		ODataType: "#microsoft.graph.MalwareStateForWindowsDevice",
	}
	return newMalwareStateForWindowsDevice, nil
}
