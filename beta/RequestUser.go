// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// UserRequestBuilder is request builder for User
type UserRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRequest
func (b *UserRequestBuilder) Request() *UserRequest {
	return &UserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRequest is request for User
type UserRequest struct{ BaseRequest }

// Get performs GET request for User
func (r *UserRequest) Get(ctx context.Context) (resObj *User, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for User
func (r *UserRequest) Update(ctx context.Context, reqObj *User) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for User
func (r *UserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserAccountRequestBuilder is request builder for UserAccount
type UserAccountRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserAccountRequest
func (b *UserAccountRequestBuilder) Request() *UserAccountRequest {
	return &UserAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserAccountRequest is request for UserAccount
type UserAccountRequest struct{ BaseRequest }

// Get performs GET request for UserAccount
func (r *UserAccountRequest) Get(ctx context.Context) (resObj *UserAccount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserAccount
func (r *UserAccountRequest) Update(ctx context.Context, reqObj *UserAccount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserAccount
func (r *UserAccountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserAccountInformationRequestBuilder is request builder for UserAccountInformation
type UserAccountInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserAccountInformationRequest
func (b *UserAccountInformationRequestBuilder) Request() *UserAccountInformationRequest {
	return &UserAccountInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserAccountInformationRequest is request for UserAccountInformation
type UserAccountInformationRequest struct{ BaseRequest }

// Get performs GET request for UserAccountInformation
func (r *UserAccountInformationRequest) Get(ctx context.Context) (resObj *UserAccountInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserAccountInformation
func (r *UserAccountInformationRequest) Update(ctx context.Context, reqObj *UserAccountInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserAccountInformation
func (r *UserAccountInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserActivityRequestBuilder is request builder for UserActivity
type UserActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserActivityRequest
func (b *UserActivityRequestBuilder) Request() *UserActivityRequest {
	return &UserActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserActivityRequest is request for UserActivity
type UserActivityRequest struct{ BaseRequest }

// Get performs GET request for UserActivity
func (r *UserActivityRequest) Get(ctx context.Context) (resObj *UserActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserActivity
func (r *UserActivityRequest) Update(ctx context.Context, reqObj *UserActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserActivity
func (r *UserActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserAnalyticsRequestBuilder is request builder for UserAnalytics
type UserAnalyticsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserAnalyticsRequest
func (b *UserAnalyticsRequestBuilder) Request() *UserAnalyticsRequest {
	return &UserAnalyticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserAnalyticsRequest is request for UserAnalytics
type UserAnalyticsRequest struct{ BaseRequest }

// Get performs GET request for UserAnalytics
func (r *UserAnalyticsRequest) Get(ctx context.Context) (resObj *UserAnalytics, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserAnalytics
func (r *UserAnalyticsRequest) Update(ctx context.Context, reqObj *UserAnalytics) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserAnalytics
func (r *UserAnalyticsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserAppInstallStatusRequestBuilder is request builder for UserAppInstallStatus
type UserAppInstallStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserAppInstallStatusRequest
func (b *UserAppInstallStatusRequestBuilder) Request() *UserAppInstallStatusRequest {
	return &UserAppInstallStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserAppInstallStatusRequest is request for UserAppInstallStatus
type UserAppInstallStatusRequest struct{ BaseRequest }

// Get performs GET request for UserAppInstallStatus
func (r *UserAppInstallStatusRequest) Get(ctx context.Context) (resObj *UserAppInstallStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserAppInstallStatus
func (r *UserAppInstallStatusRequest) Update(ctx context.Context, reqObj *UserAppInstallStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserAppInstallStatus
func (r *UserAppInstallStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserAttributeValuesItemRequestBuilder is request builder for UserAttributeValuesItem
type UserAttributeValuesItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserAttributeValuesItemRequest
func (b *UserAttributeValuesItemRequestBuilder) Request() *UserAttributeValuesItemRequest {
	return &UserAttributeValuesItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserAttributeValuesItemRequest is request for UserAttributeValuesItem
type UserAttributeValuesItemRequest struct{ BaseRequest }

// Get performs GET request for UserAttributeValuesItem
func (r *UserAttributeValuesItemRequest) Get(ctx context.Context) (resObj *UserAttributeValuesItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserAttributeValuesItem
func (r *UserAttributeValuesItemRequest) Update(ctx context.Context, reqObj *UserAttributeValuesItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserAttributeValuesItem
func (r *UserAttributeValuesItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserConfigurationRequestBuilder is request builder for UserConfiguration
type UserConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserConfigurationRequest
func (b *UserConfigurationRequestBuilder) Request() *UserConfigurationRequest {
	return &UserConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserConfigurationRequest is request for UserConfiguration
type UserConfigurationRequest struct{ BaseRequest }

// Get performs GET request for UserConfiguration
func (r *UserConfigurationRequest) Get(ctx context.Context) (resObj *UserConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserConfiguration
func (r *UserConfigurationRequest) Update(ctx context.Context, reqObj *UserConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserConfiguration
func (r *UserConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserConsentRequestObjectRequestBuilder is request builder for UserConsentRequestObject
type UserConsentRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserConsentRequestObjectRequest
func (b *UserConsentRequestObjectRequestBuilder) Request() *UserConsentRequestObjectRequest {
	return &UserConsentRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserConsentRequestObjectRequest is request for UserConsentRequestObject
type UserConsentRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for UserConsentRequestObject
func (r *UserConsentRequestObjectRequest) Get(ctx context.Context) (resObj *UserConsentRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserConsentRequestObject
func (r *UserConsentRequestObjectRequest) Update(ctx context.Context, reqObj *UserConsentRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserConsentRequestObject
func (r *UserConsentRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserCredentialUsageDetailsRequestBuilder is request builder for UserCredentialUsageDetails
type UserCredentialUsageDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserCredentialUsageDetailsRequest
func (b *UserCredentialUsageDetailsRequestBuilder) Request() *UserCredentialUsageDetailsRequest {
	return &UserCredentialUsageDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserCredentialUsageDetailsRequest is request for UserCredentialUsageDetails
type UserCredentialUsageDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserCredentialUsageDetails
func (r *UserCredentialUsageDetailsRequest) Get(ctx context.Context) (resObj *UserCredentialUsageDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserCredentialUsageDetails
func (r *UserCredentialUsageDetailsRequest) Update(ctx context.Context, reqObj *UserCredentialUsageDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserCredentialUsageDetails
func (r *UserCredentialUsageDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAnomalyRequestBuilder is request builder for UserExperienceAnalyticsAnomaly
type UserExperienceAnalyticsAnomalyRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAnomalyRequest
func (b *UserExperienceAnalyticsAnomalyRequestBuilder) Request() *UserExperienceAnalyticsAnomalyRequest {
	return &UserExperienceAnalyticsAnomalyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAnomalyRequest is request for UserExperienceAnalyticsAnomaly
type UserExperienceAnalyticsAnomalyRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAnomaly
func (r *UserExperienceAnalyticsAnomalyRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAnomaly, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAnomaly
func (r *UserExperienceAnalyticsAnomalyRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAnomaly) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAnomaly
func (r *UserExperienceAnalyticsAnomalyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAnomalyDeviceRequestBuilder is request builder for UserExperienceAnalyticsAnomalyDevice
type UserExperienceAnalyticsAnomalyDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAnomalyDeviceRequest
func (b *UserExperienceAnalyticsAnomalyDeviceRequestBuilder) Request() *UserExperienceAnalyticsAnomalyDeviceRequest {
	return &UserExperienceAnalyticsAnomalyDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAnomalyDeviceRequest is request for UserExperienceAnalyticsAnomalyDevice
type UserExperienceAnalyticsAnomalyDeviceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAnomalyDevice
func (r *UserExperienceAnalyticsAnomalyDeviceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAnomalyDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAnomalyDevice
func (r *UserExperienceAnalyticsAnomalyDeviceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAnomalyDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAnomalyDevice
func (r *UserExperienceAnalyticsAnomalyDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAnomalySeverityOverviewRequestBuilder is request builder for UserExperienceAnalyticsAnomalySeverityOverview
type UserExperienceAnalyticsAnomalySeverityOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAnomalySeverityOverviewRequest
func (b *UserExperienceAnalyticsAnomalySeverityOverviewRequestBuilder) Request() *UserExperienceAnalyticsAnomalySeverityOverviewRequest {
	return &UserExperienceAnalyticsAnomalySeverityOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAnomalySeverityOverviewRequest is request for UserExperienceAnalyticsAnomalySeverityOverview
type UserExperienceAnalyticsAnomalySeverityOverviewRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAnomalySeverityOverview
func (r *UserExperienceAnalyticsAnomalySeverityOverviewRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAnomalySeverityOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAnomalySeverityOverview
func (r *UserExperienceAnalyticsAnomalySeverityOverviewRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAnomalySeverityOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAnomalySeverityOverview
func (r *UserExperienceAnalyticsAnomalySeverityOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequestBuilder is request builder for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest
func (b *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequestBuilder) Request() *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest {
	return &UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest is request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequestBuilder is request builder for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest
func (b *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequestBuilder) Request() *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest {
	return &UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest is request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequestBuilder is request builder for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest
func (b *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequestBuilder) Request() *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest {
	return &UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest is request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID
type UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceID
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIDRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequestBuilder is request builder for UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion
type UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest
func (b *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequestBuilder) Request() *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest {
	return &UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest is request for UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion
type UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthAppPerformanceByOSVersion
func (r *UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder is request builder for UserExperienceAnalyticsAppHealthApplicationPerformance
type UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthApplicationPerformanceRequest
func (b *UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder) Request() *UserExperienceAnalyticsAppHealthApplicationPerformanceRequest {
	return &UserExperienceAnalyticsAppHealthApplicationPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthApplicationPerformanceRequest is request for UserExperienceAnalyticsAppHealthApplicationPerformance
type UserExperienceAnalyticsAppHealthApplicationPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthApplicationPerformance
func (r *UserExperienceAnalyticsAppHealthApplicationPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthApplicationPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthApplicationPerformance
func (r *UserExperienceAnalyticsAppHealthApplicationPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthApplicationPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthApplicationPerformance
func (r *UserExperienceAnalyticsAppHealthApplicationPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder is request builder for UserExperienceAnalyticsAppHealthDeviceModelPerformance
type UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest
func (b *UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder) Request() *UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest {
	return &UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest is request for UserExperienceAnalyticsAppHealthDeviceModelPerformance
type UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthDeviceModelPerformance
func (r *UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthDeviceModelPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthDeviceModelPerformance
func (r *UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthDeviceModelPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthDeviceModelPerformance
func (r *UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder is request builder for UserExperienceAnalyticsAppHealthDevicePerformance
type UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthDevicePerformanceRequest
func (b *UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder) Request() *UserExperienceAnalyticsAppHealthDevicePerformanceRequest {
	return &UserExperienceAnalyticsAppHealthDevicePerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthDevicePerformanceRequest is request for UserExperienceAnalyticsAppHealthDevicePerformance
type UserExperienceAnalyticsAppHealthDevicePerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthDevicePerformance
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthDevicePerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthDevicePerformance
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthDevicePerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthDevicePerformance
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder is request builder for UserExperienceAnalyticsAppHealthDevicePerformanceDetails
type UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest
func (b *UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder) Request() *UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest {
	return &UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest is request for UserExperienceAnalyticsAppHealthDevicePerformanceDetails
type UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthDevicePerformanceDetails
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthDevicePerformanceDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthDevicePerformanceDetails
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthDevicePerformanceDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthDevicePerformanceDetails
func (r *UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder is request builder for UserExperienceAnalyticsAppHealthOSVersionPerformance
type UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest
func (b *UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder) Request() *UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest {
	return &UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest is request for UserExperienceAnalyticsAppHealthOSVersionPerformance
type UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAppHealthOSVersionPerformance
func (r *UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAppHealthOSVersionPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAppHealthOSVersionPerformance
func (r *UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAppHealthOSVersionPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAppHealthOSVersionPerformance
func (r *UserExperienceAnalyticsAppHealthOSVersionPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsAutopilotDevicesSummaryRequestBuilder is request builder for UserExperienceAnalyticsAutopilotDevicesSummary
type UserExperienceAnalyticsAutopilotDevicesSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsAutopilotDevicesSummaryRequest
func (b *UserExperienceAnalyticsAutopilotDevicesSummaryRequestBuilder) Request() *UserExperienceAnalyticsAutopilotDevicesSummaryRequest {
	return &UserExperienceAnalyticsAutopilotDevicesSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsAutopilotDevicesSummaryRequest is request for UserExperienceAnalyticsAutopilotDevicesSummary
type UserExperienceAnalyticsAutopilotDevicesSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsAutopilotDevicesSummary
func (r *UserExperienceAnalyticsAutopilotDevicesSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsAutopilotDevicesSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsAutopilotDevicesSummary
func (r *UserExperienceAnalyticsAutopilotDevicesSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsAutopilotDevicesSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsAutopilotDevicesSummary
func (r *UserExperienceAnalyticsAutopilotDevicesSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBaselineRequestBuilder is request builder for UserExperienceAnalyticsBaseline
type UserExperienceAnalyticsBaselineRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBaselineRequest
func (b *UserExperienceAnalyticsBaselineRequestBuilder) Request() *UserExperienceAnalyticsBaselineRequest {
	return &UserExperienceAnalyticsBaselineRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBaselineRequest is request for UserExperienceAnalyticsBaseline
type UserExperienceAnalyticsBaselineRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBaseline
func (r *UserExperienceAnalyticsBaselineRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBaseline, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBaseline
func (r *UserExperienceAnalyticsBaselineRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBaseline) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBaseline
func (r *UserExperienceAnalyticsBaselineRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthAppImpact
type UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthAppImpactRequest
func (b *UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthAppImpactRequest {
	return &UserExperienceAnalyticsBatteryHealthAppImpactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthAppImpactRequest is request for UserExperienceAnalyticsBatteryHealthAppImpact
type UserExperienceAnalyticsBatteryHealthAppImpactRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthAppImpact
func (r *UserExperienceAnalyticsBatteryHealthAppImpactRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthAppImpact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthAppImpact
func (r *UserExperienceAnalyticsBatteryHealthAppImpactRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthAppImpact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthAppImpact
func (r *UserExperienceAnalyticsBatteryHealthAppImpactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthCapacityDetails
type UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest
func (b *UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest {
	return &UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest is request for UserExperienceAnalyticsBatteryHealthCapacityDetails
type UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthCapacityDetails
func (r *UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthCapacityDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthCapacityDetails
func (r *UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthCapacityDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthCapacityDetails
func (r *UserExperienceAnalyticsBatteryHealthCapacityDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthDeviceAppImpact
type UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest
func (b *UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest {
	return &UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest is request for UserExperienceAnalyticsBatteryHealthDeviceAppImpact
type UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthDeviceAppImpact
func (r *UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthDeviceAppImpact, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthDeviceAppImpact
func (r *UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthDeviceAppImpact) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthDeviceAppImpact
func (r *UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthDevicePerformance
type UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest
func (b *UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest {
	return &UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest is request for UserExperienceAnalyticsBatteryHealthDevicePerformance
type UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthDevicePerformance
func (r *UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthDevicePerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthDevicePerformance
func (r *UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthDevicePerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthDevicePerformance
func (r *UserExperienceAnalyticsBatteryHealthDevicePerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory
type UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest
func (b *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest {
	return &UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest is request for UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory
type UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory
func (r *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory
func (r *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory
func (r *UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthModelPerformance
type UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthModelPerformanceRequest
func (b *UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthModelPerformanceRequest {
	return &UserExperienceAnalyticsBatteryHealthModelPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthModelPerformanceRequest is request for UserExperienceAnalyticsBatteryHealthModelPerformance
type UserExperienceAnalyticsBatteryHealthModelPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthModelPerformance
func (r *UserExperienceAnalyticsBatteryHealthModelPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthModelPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthModelPerformance
func (r *UserExperienceAnalyticsBatteryHealthModelPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthModelPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthModelPerformance
func (r *UserExperienceAnalyticsBatteryHealthModelPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthOsPerformance
type UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthOsPerformanceRequest
func (b *UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthOsPerformanceRequest {
	return &UserExperienceAnalyticsBatteryHealthOsPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthOsPerformanceRequest is request for UserExperienceAnalyticsBatteryHealthOsPerformance
type UserExperienceAnalyticsBatteryHealthOsPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthOsPerformance
func (r *UserExperienceAnalyticsBatteryHealthOsPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthOsPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthOsPerformance
func (r *UserExperienceAnalyticsBatteryHealthOsPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthOsPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthOsPerformance
func (r *UserExperienceAnalyticsBatteryHealthOsPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder is request builder for UserExperienceAnalyticsBatteryHealthRuntimeDetails
type UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest
func (b *UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder) Request() *UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest {
	return &UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest is request for UserExperienceAnalyticsBatteryHealthRuntimeDetails
type UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsBatteryHealthRuntimeDetails
func (r *UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsBatteryHealthRuntimeDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsBatteryHealthRuntimeDetails
func (r *UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsBatteryHealthRuntimeDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsBatteryHealthRuntimeDetails
func (r *UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsCategoryRequestBuilder is request builder for UserExperienceAnalyticsCategory
type UserExperienceAnalyticsCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsCategoryRequest
func (b *UserExperienceAnalyticsCategoryRequestBuilder) Request() *UserExperienceAnalyticsCategoryRequest {
	return &UserExperienceAnalyticsCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsCategoryRequest is request for UserExperienceAnalyticsCategory
type UserExperienceAnalyticsCategoryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsCategory
func (r *UserExperienceAnalyticsCategoryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsCategory
func (r *UserExperienceAnalyticsCategoryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsCategory
func (r *UserExperienceAnalyticsCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsCloudIdentityDevicesSummaryRequestBuilder is request builder for UserExperienceAnalyticsCloudIdentityDevicesSummary
type UserExperienceAnalyticsCloudIdentityDevicesSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest
func (b *UserExperienceAnalyticsCloudIdentityDevicesSummaryRequestBuilder) Request() *UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest {
	return &UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest is request for UserExperienceAnalyticsCloudIdentityDevicesSummary
type UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsCloudIdentityDevicesSummary
func (r *UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsCloudIdentityDevicesSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsCloudIdentityDevicesSummary
func (r *UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsCloudIdentityDevicesSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsCloudIdentityDevicesSummary
func (r *UserExperienceAnalyticsCloudIdentityDevicesSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsCloudManagementDevicesSummaryRequestBuilder is request builder for UserExperienceAnalyticsCloudManagementDevicesSummary
type UserExperienceAnalyticsCloudManagementDevicesSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsCloudManagementDevicesSummaryRequest
func (b *UserExperienceAnalyticsCloudManagementDevicesSummaryRequestBuilder) Request() *UserExperienceAnalyticsCloudManagementDevicesSummaryRequest {
	return &UserExperienceAnalyticsCloudManagementDevicesSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsCloudManagementDevicesSummaryRequest is request for UserExperienceAnalyticsCloudManagementDevicesSummary
type UserExperienceAnalyticsCloudManagementDevicesSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsCloudManagementDevicesSummary
func (r *UserExperienceAnalyticsCloudManagementDevicesSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsCloudManagementDevicesSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsCloudManagementDevicesSummary
func (r *UserExperienceAnalyticsCloudManagementDevicesSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsCloudManagementDevicesSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsCloudManagementDevicesSummary
func (r *UserExperienceAnalyticsCloudManagementDevicesSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDevicePerformanceRequestBuilder is request builder for UserExperienceAnalyticsDevicePerformance
type UserExperienceAnalyticsDevicePerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDevicePerformanceRequest
func (b *UserExperienceAnalyticsDevicePerformanceRequestBuilder) Request() *UserExperienceAnalyticsDevicePerformanceRequest {
	return &UserExperienceAnalyticsDevicePerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDevicePerformanceRequest is request for UserExperienceAnalyticsDevicePerformance
type UserExperienceAnalyticsDevicePerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDevicePerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDevicePerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceScopeRequestBuilder is request builder for UserExperienceAnalyticsDeviceScope
type UserExperienceAnalyticsDeviceScopeRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceScopeRequest
func (b *UserExperienceAnalyticsDeviceScopeRequestBuilder) Request() *UserExperienceAnalyticsDeviceScopeRequest {
	return &UserExperienceAnalyticsDeviceScopeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceScopeRequest is request for UserExperienceAnalyticsDeviceScope
type UserExperienceAnalyticsDeviceScopeRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceScope
func (r *UserExperienceAnalyticsDeviceScopeRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceScope, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceScope
func (r *UserExperienceAnalyticsDeviceScopeRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceScope) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceScope
func (r *UserExperienceAnalyticsDeviceScopeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceScopeSummaryRequestBuilder is request builder for UserExperienceAnalyticsDeviceScopeSummary
type UserExperienceAnalyticsDeviceScopeSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceScopeSummaryRequest
func (b *UserExperienceAnalyticsDeviceScopeSummaryRequestBuilder) Request() *UserExperienceAnalyticsDeviceScopeSummaryRequest {
	return &UserExperienceAnalyticsDeviceScopeSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceScopeSummaryRequest is request for UserExperienceAnalyticsDeviceScopeSummary
type UserExperienceAnalyticsDeviceScopeSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceScopeSummary
func (r *UserExperienceAnalyticsDeviceScopeSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceScopeSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceScopeSummary
func (r *UserExperienceAnalyticsDeviceScopeSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceScopeSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceScopeSummary
func (r *UserExperienceAnalyticsDeviceScopeSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceScoresRequestBuilder is request builder for UserExperienceAnalyticsDeviceScores
type UserExperienceAnalyticsDeviceScoresRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceScoresRequest
func (b *UserExperienceAnalyticsDeviceScoresRequestBuilder) Request() *UserExperienceAnalyticsDeviceScoresRequest {
	return &UserExperienceAnalyticsDeviceScoresRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceScoresRequest is request for UserExperienceAnalyticsDeviceScores
type UserExperienceAnalyticsDeviceScoresRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceScores
func (r *UserExperienceAnalyticsDeviceScoresRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceScores, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceScores
func (r *UserExperienceAnalyticsDeviceScoresRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceScores) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceScores
func (r *UserExperienceAnalyticsDeviceScoresRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder is request builder for UserExperienceAnalyticsDeviceStartupHistory
type UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceStartupHistoryRequest
func (b *UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder) Request() *UserExperienceAnalyticsDeviceStartupHistoryRequest {
	return &UserExperienceAnalyticsDeviceStartupHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceStartupHistoryRequest is request for UserExperienceAnalyticsDeviceStartupHistory
type UserExperienceAnalyticsDeviceStartupHistoryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceStartupHistory
func (r *UserExperienceAnalyticsDeviceStartupHistoryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceStartupHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceStartupHistory
func (r *UserExperienceAnalyticsDeviceStartupHistoryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceStartupHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceStartupHistory
func (r *UserExperienceAnalyticsDeviceStartupHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceStartupProcessRequestBuilder is request builder for UserExperienceAnalyticsDeviceStartupProcess
type UserExperienceAnalyticsDeviceStartupProcessRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceStartupProcessRequest
func (b *UserExperienceAnalyticsDeviceStartupProcessRequestBuilder) Request() *UserExperienceAnalyticsDeviceStartupProcessRequest {
	return &UserExperienceAnalyticsDeviceStartupProcessRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceStartupProcessRequest is request for UserExperienceAnalyticsDeviceStartupProcess
type UserExperienceAnalyticsDeviceStartupProcessRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceStartupProcess
func (r *UserExperienceAnalyticsDeviceStartupProcessRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceStartupProcess, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceStartupProcess
func (r *UserExperienceAnalyticsDeviceStartupProcessRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceStartupProcess) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceStartupProcess
func (r *UserExperienceAnalyticsDeviceStartupProcessRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder is request builder for UserExperienceAnalyticsDeviceStartupProcessPerformance
type UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest
func (b *UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder) Request() *UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest {
	return &UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest is request for UserExperienceAnalyticsDeviceStartupProcessPerformance
type UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceStartupProcessPerformance
func (r *UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceStartupProcessPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceStartupProcessPerformance
func (r *UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceStartupProcessPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceStartupProcessPerformance
func (r *UserExperienceAnalyticsDeviceStartupProcessPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceTimelineEventRequestBuilder is request builder for UserExperienceAnalyticsDeviceTimelineEvent
type UserExperienceAnalyticsDeviceTimelineEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceTimelineEventRequest
func (b *UserExperienceAnalyticsDeviceTimelineEventRequestBuilder) Request() *UserExperienceAnalyticsDeviceTimelineEventRequest {
	return &UserExperienceAnalyticsDeviceTimelineEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceTimelineEventRequest is request for UserExperienceAnalyticsDeviceTimelineEvent
type UserExperienceAnalyticsDeviceTimelineEventRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceTimelineEvent
func (r *UserExperienceAnalyticsDeviceTimelineEventRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceTimelineEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceTimelineEvent
func (r *UserExperienceAnalyticsDeviceTimelineEventRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceTimelineEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceTimelineEvent
func (r *UserExperienceAnalyticsDeviceTimelineEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsDeviceWithoutCloudIdentityRequestBuilder is request builder for UserExperienceAnalyticsDeviceWithoutCloudIdentity
type UserExperienceAnalyticsDeviceWithoutCloudIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest
func (b *UserExperienceAnalyticsDeviceWithoutCloudIdentityRequestBuilder) Request() *UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest {
	return &UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest is request for UserExperienceAnalyticsDeviceWithoutCloudIdentity
type UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDeviceWithoutCloudIdentity
func (r *UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDeviceWithoutCloudIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDeviceWithoutCloudIdentity
func (r *UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDeviceWithoutCloudIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDeviceWithoutCloudIdentity
func (r *UserExperienceAnalyticsDeviceWithoutCloudIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsImpactingProcessRequestBuilder is request builder for UserExperienceAnalyticsImpactingProcess
type UserExperienceAnalyticsImpactingProcessRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsImpactingProcessRequest
func (b *UserExperienceAnalyticsImpactingProcessRequestBuilder) Request() *UserExperienceAnalyticsImpactingProcessRequest {
	return &UserExperienceAnalyticsImpactingProcessRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsImpactingProcessRequest is request for UserExperienceAnalyticsImpactingProcess
type UserExperienceAnalyticsImpactingProcessRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsImpactingProcess
func (r *UserExperienceAnalyticsImpactingProcessRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsImpactingProcess, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsImpactingProcess
func (r *UserExperienceAnalyticsImpactingProcessRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsImpactingProcess) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsImpactingProcess
func (r *UserExperienceAnalyticsImpactingProcessRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsInsightRequestBuilder is request builder for UserExperienceAnalyticsInsight
type UserExperienceAnalyticsInsightRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsInsightRequest
func (b *UserExperienceAnalyticsInsightRequestBuilder) Request() *UserExperienceAnalyticsInsightRequest {
	return &UserExperienceAnalyticsInsightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsInsightRequest is request for UserExperienceAnalyticsInsight
type UserExperienceAnalyticsInsightRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsInsight
func (r *UserExperienceAnalyticsInsightRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsInsight, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsInsight
func (r *UserExperienceAnalyticsInsightRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsInsight) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsInsight
func (r *UserExperienceAnalyticsInsightRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsInsightValueRequestBuilder is request builder for UserExperienceAnalyticsInsightValue
type UserExperienceAnalyticsInsightValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsInsightValueRequest
func (b *UserExperienceAnalyticsInsightValueRequestBuilder) Request() *UserExperienceAnalyticsInsightValueRequest {
	return &UserExperienceAnalyticsInsightValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsInsightValueRequest is request for UserExperienceAnalyticsInsightValue
type UserExperienceAnalyticsInsightValueRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsInsightValue
func (r *UserExperienceAnalyticsInsightValueRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsInsightValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsInsightValue
func (r *UserExperienceAnalyticsInsightValueRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsInsightValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsInsightValue
func (r *UserExperienceAnalyticsInsightValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsMetricRequestBuilder is request builder for UserExperienceAnalyticsMetric
type UserExperienceAnalyticsMetricRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsMetricRequest
func (b *UserExperienceAnalyticsMetricRequestBuilder) Request() *UserExperienceAnalyticsMetricRequest {
	return &UserExperienceAnalyticsMetricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsMetricRequest is request for UserExperienceAnalyticsMetric
type UserExperienceAnalyticsMetricRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsMetric
func (r *UserExperienceAnalyticsMetricRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsMetric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsMetric
func (r *UserExperienceAnalyticsMetricRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsMetric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsMetric
func (r *UserExperienceAnalyticsMetricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsMetricHistoryRequestBuilder is request builder for UserExperienceAnalyticsMetricHistory
type UserExperienceAnalyticsMetricHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsMetricHistoryRequest
func (b *UserExperienceAnalyticsMetricHistoryRequestBuilder) Request() *UserExperienceAnalyticsMetricHistoryRequest {
	return &UserExperienceAnalyticsMetricHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsMetricHistoryRequest is request for UserExperienceAnalyticsMetricHistory
type UserExperienceAnalyticsMetricHistoryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsMetricHistory
func (r *UserExperienceAnalyticsMetricHistoryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsMetricHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsMetricHistory
func (r *UserExperienceAnalyticsMetricHistoryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsMetricHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsMetricHistory
func (r *UserExperienceAnalyticsMetricHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsModelScoresRequestBuilder is request builder for UserExperienceAnalyticsModelScores
type UserExperienceAnalyticsModelScoresRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsModelScoresRequest
func (b *UserExperienceAnalyticsModelScoresRequestBuilder) Request() *UserExperienceAnalyticsModelScoresRequest {
	return &UserExperienceAnalyticsModelScoresRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsModelScoresRequest is request for UserExperienceAnalyticsModelScores
type UserExperienceAnalyticsModelScoresRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsModelScores
func (r *UserExperienceAnalyticsModelScoresRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsModelScores, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsModelScores
func (r *UserExperienceAnalyticsModelScoresRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsModelScores) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsModelScores
func (r *UserExperienceAnalyticsModelScoresRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder is request builder for UserExperienceAnalyticsNotAutopilotReadyDevice
type UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsNotAutopilotReadyDeviceRequest
func (b *UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder) Request() *UserExperienceAnalyticsNotAutopilotReadyDeviceRequest {
	return &UserExperienceAnalyticsNotAutopilotReadyDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsNotAutopilotReadyDeviceRequest is request for UserExperienceAnalyticsNotAutopilotReadyDevice
type UserExperienceAnalyticsNotAutopilotReadyDeviceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsNotAutopilotReadyDevice
func (r *UserExperienceAnalyticsNotAutopilotReadyDeviceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsNotAutopilotReadyDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsNotAutopilotReadyDevice
func (r *UserExperienceAnalyticsNotAutopilotReadyDeviceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsNotAutopilotReadyDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsNotAutopilotReadyDevice
func (r *UserExperienceAnalyticsNotAutopilotReadyDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsOverviewRequestBuilder is request builder for UserExperienceAnalyticsOverview
type UserExperienceAnalyticsOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsOverviewRequest
func (b *UserExperienceAnalyticsOverviewRequestBuilder) Request() *UserExperienceAnalyticsOverviewRequest {
	return &UserExperienceAnalyticsOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsOverviewRequest is request for UserExperienceAnalyticsOverview
type UserExperienceAnalyticsOverviewRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsOverview
func (r *UserExperienceAnalyticsOverviewRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsOverview
func (r *UserExperienceAnalyticsOverviewRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsOverview
func (r *UserExperienceAnalyticsOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsRemoteConnectionRequestBuilder is request builder for UserExperienceAnalyticsRemoteConnection
type UserExperienceAnalyticsRemoteConnectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsRemoteConnectionRequest
func (b *UserExperienceAnalyticsRemoteConnectionRequestBuilder) Request() *UserExperienceAnalyticsRemoteConnectionRequest {
	return &UserExperienceAnalyticsRemoteConnectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsRemoteConnectionRequest is request for UserExperienceAnalyticsRemoteConnection
type UserExperienceAnalyticsRemoteConnectionRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsRemoteConnection
func (r *UserExperienceAnalyticsRemoteConnectionRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsRemoteConnection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsRemoteConnection
func (r *UserExperienceAnalyticsRemoteConnectionRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsRemoteConnection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsRemoteConnection
func (r *UserExperienceAnalyticsRemoteConnectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsResourcePerformanceRequestBuilder is request builder for UserExperienceAnalyticsResourcePerformance
type UserExperienceAnalyticsResourcePerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsResourcePerformanceRequest
func (b *UserExperienceAnalyticsResourcePerformanceRequestBuilder) Request() *UserExperienceAnalyticsResourcePerformanceRequest {
	return &UserExperienceAnalyticsResourcePerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsResourcePerformanceRequest is request for UserExperienceAnalyticsResourcePerformance
type UserExperienceAnalyticsResourcePerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsResourcePerformance
func (r *UserExperienceAnalyticsResourcePerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsResourcePerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsResourcePerformance
func (r *UserExperienceAnalyticsResourcePerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsResourcePerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsResourcePerformance
func (r *UserExperienceAnalyticsResourcePerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsScoreHistoryRequestBuilder is request builder for UserExperienceAnalyticsScoreHistory
type UserExperienceAnalyticsScoreHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsScoreHistoryRequest
func (b *UserExperienceAnalyticsScoreHistoryRequestBuilder) Request() *UserExperienceAnalyticsScoreHistoryRequest {
	return &UserExperienceAnalyticsScoreHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsScoreHistoryRequest is request for UserExperienceAnalyticsScoreHistory
type UserExperienceAnalyticsScoreHistoryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsScoreHistory
func (r *UserExperienceAnalyticsScoreHistoryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsScoreHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsScoreHistory
func (r *UserExperienceAnalyticsScoreHistoryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsScoreHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsScoreHistory
func (r *UserExperienceAnalyticsScoreHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsSettingsRequestBuilder is request builder for UserExperienceAnalyticsSettings
type UserExperienceAnalyticsSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsSettingsRequest
func (b *UserExperienceAnalyticsSettingsRequestBuilder) Request() *UserExperienceAnalyticsSettingsRequest {
	return &UserExperienceAnalyticsSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsSettingsRequest is request for UserExperienceAnalyticsSettings
type UserExperienceAnalyticsSettingsRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsSettings
func (r *UserExperienceAnalyticsSettingsRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsSettings
func (r *UserExperienceAnalyticsSettingsRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsSettings
func (r *UserExperienceAnalyticsSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWindows10DevicesSummaryRequestBuilder is request builder for UserExperienceAnalyticsWindows10DevicesSummary
type UserExperienceAnalyticsWindows10DevicesSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWindows10DevicesSummaryRequest
func (b *UserExperienceAnalyticsWindows10DevicesSummaryRequestBuilder) Request() *UserExperienceAnalyticsWindows10DevicesSummaryRequest {
	return &UserExperienceAnalyticsWindows10DevicesSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWindows10DevicesSummaryRequest is request for UserExperienceAnalyticsWindows10DevicesSummary
type UserExperienceAnalyticsWindows10DevicesSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWindows10DevicesSummary
func (r *UserExperienceAnalyticsWindows10DevicesSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWindows10DevicesSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWindows10DevicesSummary
func (r *UserExperienceAnalyticsWindows10DevicesSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWindows10DevicesSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWindows10DevicesSummary
func (r *UserExperienceAnalyticsWindows10DevicesSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWorkFromAnywhereDeviceRequestBuilder is request builder for UserExperienceAnalyticsWorkFromAnywhereDevice
type UserExperienceAnalyticsWorkFromAnywhereDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWorkFromAnywhereDeviceRequest
func (b *UserExperienceAnalyticsWorkFromAnywhereDeviceRequestBuilder) Request() *UserExperienceAnalyticsWorkFromAnywhereDeviceRequest {
	return &UserExperienceAnalyticsWorkFromAnywhereDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWorkFromAnywhereDeviceRequest is request for UserExperienceAnalyticsWorkFromAnywhereDevice
type UserExperienceAnalyticsWorkFromAnywhereDeviceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWorkFromAnywhereDevice
func (r *UserExperienceAnalyticsWorkFromAnywhereDeviceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWorkFromAnywhereDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWorkFromAnywhereDevice
func (r *UserExperienceAnalyticsWorkFromAnywhereDeviceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWorkFromAnywhereDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWorkFromAnywhereDevice
func (r *UserExperienceAnalyticsWorkFromAnywhereDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequestBuilder is request builder for UserExperienceAnalyticsWorkFromAnywhereDevicesSummary
type UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest
func (b *UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequestBuilder) Request() *UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest {
	return &UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest is request for UserExperienceAnalyticsWorkFromAnywhereDevicesSummary
type UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWorkFromAnywhereDevicesSummary
func (r *UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWorkFromAnywhereDevicesSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWorkFromAnywhereDevicesSummary
func (r *UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWorkFromAnywhereDevicesSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWorkFromAnywhereDevicesSummary
func (r *UserExperienceAnalyticsWorkFromAnywhereDevicesSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder is request builder for UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
type UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest
func (b *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder) Request() *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest {
	return &UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest is request for UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
type UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWorkFromAnywhereMetricRequestBuilder is request builder for UserExperienceAnalyticsWorkFromAnywhereMetric
type UserExperienceAnalyticsWorkFromAnywhereMetricRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWorkFromAnywhereMetricRequest
func (b *UserExperienceAnalyticsWorkFromAnywhereMetricRequestBuilder) Request() *UserExperienceAnalyticsWorkFromAnywhereMetricRequest {
	return &UserExperienceAnalyticsWorkFromAnywhereMetricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWorkFromAnywhereMetricRequest is request for UserExperienceAnalyticsWorkFromAnywhereMetric
type UserExperienceAnalyticsWorkFromAnywhereMetricRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWorkFromAnywhereMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereMetricRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWorkFromAnywhereMetric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWorkFromAnywhereMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereMetricRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWorkFromAnywhereMetric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWorkFromAnywhereMetric
func (r *UserExperienceAnalyticsWorkFromAnywhereMetricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder is request builder for UserExperienceAnalyticsWorkFromAnywhereModelPerformance
type UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest
func (b *UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder) Request() *UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest {
	return &UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest is request for UserExperienceAnalyticsWorkFromAnywhereModelPerformance
type UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsWorkFromAnywhereModelPerformance
func (r *UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsWorkFromAnywhereModelPerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsWorkFromAnywhereModelPerformance
func (r *UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsWorkFromAnywhereModelPerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsWorkFromAnywhereModelPerformance
func (r *UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserFlowAPIConnectorConfigurationRequestBuilder is request builder for UserFlowAPIConnectorConfiguration
type UserFlowAPIConnectorConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserFlowAPIConnectorConfigurationRequest
func (b *UserFlowAPIConnectorConfigurationRequestBuilder) Request() *UserFlowAPIConnectorConfigurationRequest {
	return &UserFlowAPIConnectorConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserFlowAPIConnectorConfigurationRequest is request for UserFlowAPIConnectorConfiguration
type UserFlowAPIConnectorConfigurationRequest struct{ BaseRequest }

// Get performs GET request for UserFlowAPIConnectorConfiguration
func (r *UserFlowAPIConnectorConfigurationRequest) Get(ctx context.Context) (resObj *UserFlowAPIConnectorConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserFlowAPIConnectorConfiguration
func (r *UserFlowAPIConnectorConfigurationRequest) Update(ctx context.Context, reqObj *UserFlowAPIConnectorConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserFlowAPIConnectorConfiguration
func (r *UserFlowAPIConnectorConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserFlowLanguageConfigurationRequestBuilder is request builder for UserFlowLanguageConfiguration
type UserFlowLanguageConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserFlowLanguageConfigurationRequest
func (b *UserFlowLanguageConfigurationRequestBuilder) Request() *UserFlowLanguageConfigurationRequest {
	return &UserFlowLanguageConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserFlowLanguageConfigurationRequest is request for UserFlowLanguageConfiguration
type UserFlowLanguageConfigurationRequest struct{ BaseRequest }

// Get performs GET request for UserFlowLanguageConfiguration
func (r *UserFlowLanguageConfigurationRequest) Get(ctx context.Context) (resObj *UserFlowLanguageConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserFlowLanguageConfiguration
func (r *UserFlowLanguageConfigurationRequest) Update(ctx context.Context, reqObj *UserFlowLanguageConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserFlowLanguageConfiguration
func (r *UserFlowLanguageConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserFlowLanguagePageRequestBuilder is request builder for UserFlowLanguagePage
type UserFlowLanguagePageRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserFlowLanguagePageRequest
func (b *UserFlowLanguagePageRequestBuilder) Request() *UserFlowLanguagePageRequest {
	return &UserFlowLanguagePageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserFlowLanguagePageRequest is request for UserFlowLanguagePage
type UserFlowLanguagePageRequest struct{ BaseRequest }

// Get performs GET request for UserFlowLanguagePage
func (r *UserFlowLanguagePageRequest) Get(ctx context.Context) (resObj *UserFlowLanguagePage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserFlowLanguagePage
func (r *UserFlowLanguagePageRequest) Update(ctx context.Context, reqObj *UserFlowLanguagePage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserFlowLanguagePage
func (r *UserFlowLanguagePageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserGovernanceCriteriaRequestBuilder is request builder for UserGovernanceCriteria
type UserGovernanceCriteriaRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserGovernanceCriteriaRequest
func (b *UserGovernanceCriteriaRequestBuilder) Request() *UserGovernanceCriteriaRequest {
	return &UserGovernanceCriteriaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserGovernanceCriteriaRequest is request for UserGovernanceCriteria
type UserGovernanceCriteriaRequest struct{ BaseRequest }

// Get performs GET request for UserGovernanceCriteria
func (r *UserGovernanceCriteriaRequest) Get(ctx context.Context) (resObj *UserGovernanceCriteria, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserGovernanceCriteria
func (r *UserGovernanceCriteriaRequest) Update(ctx context.Context, reqObj *UserGovernanceCriteria) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserGovernanceCriteria
func (r *UserGovernanceCriteriaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserIdentityRequestBuilder is request builder for UserIdentity
type UserIdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserIdentityRequest
func (b *UserIdentityRequestBuilder) Request() *UserIdentityRequest {
	return &UserIdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserIdentityRequest is request for UserIdentity
type UserIdentityRequest struct{ BaseRequest }

// Get performs GET request for UserIdentity
func (r *UserIdentityRequest) Get(ctx context.Context) (resObj *UserIdentity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserIdentity
func (r *UserIdentityRequest) Update(ctx context.Context, reqObj *UserIdentity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserIdentity
func (r *UserIdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserInsightsSettingsRequestBuilder is request builder for UserInsightsSettings
type UserInsightsSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserInsightsSettingsRequest
func (b *UserInsightsSettingsRequestBuilder) Request() *UserInsightsSettingsRequest {
	return &UserInsightsSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserInsightsSettingsRequest is request for UserInsightsSettings
type UserInsightsSettingsRequest struct{ BaseRequest }

// Get performs GET request for UserInsightsSettings
func (r *UserInsightsSettingsRequest) Get(ctx context.Context) (resObj *UserInsightsSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserInsightsSettings
func (r *UserInsightsSettingsRequest) Update(ctx context.Context, reqObj *UserInsightsSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserInsightsSettings
func (r *UserInsightsSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserInstallStateSummaryRequestBuilder is request builder for UserInstallStateSummary
type UserInstallStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserInstallStateSummaryRequest
func (b *UserInstallStateSummaryRequestBuilder) Request() *UserInstallStateSummaryRequest {
	return &UserInstallStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserInstallStateSummaryRequest is request for UserInstallStateSummary
type UserInstallStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserInstallStateSummary
func (r *UserInstallStateSummaryRequest) Get(ctx context.Context) (resObj *UserInstallStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserInstallStateSummary
func (r *UserInstallStateSummaryRequest) Update(ctx context.Context, reqObj *UserInstallStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserInstallStateSummary
func (r *UserInstallStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserLastSignInRecommendationInsightSettingRequestBuilder is request builder for UserLastSignInRecommendationInsightSetting
type UserLastSignInRecommendationInsightSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserLastSignInRecommendationInsightSettingRequest
func (b *UserLastSignInRecommendationInsightSettingRequestBuilder) Request() *UserLastSignInRecommendationInsightSettingRequest {
	return &UserLastSignInRecommendationInsightSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserLastSignInRecommendationInsightSettingRequest is request for UserLastSignInRecommendationInsightSetting
type UserLastSignInRecommendationInsightSettingRequest struct{ BaseRequest }

// Get performs GET request for UserLastSignInRecommendationInsightSetting
func (r *UserLastSignInRecommendationInsightSettingRequest) Get(ctx context.Context) (resObj *UserLastSignInRecommendationInsightSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserLastSignInRecommendationInsightSetting
func (r *UserLastSignInRecommendationInsightSettingRequest) Update(ctx context.Context, reqObj *UserLastSignInRecommendationInsightSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserLastSignInRecommendationInsightSetting
func (r *UserLastSignInRecommendationInsightSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserPFXCertificateRequestBuilder is request builder for UserPFXCertificate
type UserPFXCertificateRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserPFXCertificateRequest
func (b *UserPFXCertificateRequestBuilder) Request() *UserPFXCertificateRequest {
	return &UserPFXCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserPFXCertificateRequest is request for UserPFXCertificate
type UserPFXCertificateRequest struct{ BaseRequest }

// Get performs GET request for UserPFXCertificate
func (r *UserPFXCertificateRequest) Get(ctx context.Context) (resObj *UserPFXCertificate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserPFXCertificate
func (r *UserPFXCertificateRequest) Update(ctx context.Context, reqObj *UserPFXCertificate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserPFXCertificate
func (r *UserPFXCertificateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserPrintRequestBuilder is request builder for UserPrint
type UserPrintRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserPrintRequest
func (b *UserPrintRequestBuilder) Request() *UserPrintRequest {
	return &UserPrintRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserPrintRequest is request for UserPrint
type UserPrintRequest struct{ BaseRequest }

// Get performs GET request for UserPrint
func (r *UserPrintRequest) Get(ctx context.Context) (resObj *UserPrint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserPrint
func (r *UserPrintRequest) Update(ctx context.Context, reqObj *UserPrint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserPrint
func (r *UserPrintRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserPrintUsageSummaryRequestBuilder is request builder for UserPrintUsageSummary
type UserPrintUsageSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserPrintUsageSummaryRequest
func (b *UserPrintUsageSummaryRequestBuilder) Request() *UserPrintUsageSummaryRequest {
	return &UserPrintUsageSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserPrintUsageSummaryRequest is request for UserPrintUsageSummary
type UserPrintUsageSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserPrintUsageSummary
func (r *UserPrintUsageSummaryRequest) Get(ctx context.Context) (resObj *UserPrintUsageSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserPrintUsageSummary
func (r *UserPrintUsageSummaryRequest) Update(ctx context.Context, reqObj *UserPrintUsageSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserPrintUsageSummary
func (r *UserPrintUsageSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationCountRequestBuilder is request builder for UserRegistrationCount
type UserRegistrationCountRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationCountRequest
func (b *UserRegistrationCountRequestBuilder) Request() *UserRegistrationCountRequest {
	return &UserRegistrationCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationCountRequest is request for UserRegistrationCount
type UserRegistrationCountRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationCount
func (r *UserRegistrationCountRequest) Get(ctx context.Context) (resObj *UserRegistrationCount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationCount
func (r *UserRegistrationCountRequest) Update(ctx context.Context, reqObj *UserRegistrationCount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationCount
func (r *UserRegistrationCountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationDetailsRequestBuilder is request builder for UserRegistrationDetails
type UserRegistrationDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationDetailsRequest
func (b *UserRegistrationDetailsRequestBuilder) Request() *UserRegistrationDetailsRequest {
	return &UserRegistrationDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationDetailsRequest is request for UserRegistrationDetails
type UserRegistrationDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationDetails
func (r *UserRegistrationDetailsRequest) Get(ctx context.Context) (resObj *UserRegistrationDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationDetails
func (r *UserRegistrationDetailsRequest) Update(ctx context.Context, reqObj *UserRegistrationDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationDetails
func (r *UserRegistrationDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationFeatureCountRequestBuilder is request builder for UserRegistrationFeatureCount
type UserRegistrationFeatureCountRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationFeatureCountRequest
func (b *UserRegistrationFeatureCountRequestBuilder) Request() *UserRegistrationFeatureCountRequest {
	return &UserRegistrationFeatureCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationFeatureCountRequest is request for UserRegistrationFeatureCount
type UserRegistrationFeatureCountRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationFeatureCount
func (r *UserRegistrationFeatureCountRequest) Get(ctx context.Context) (resObj *UserRegistrationFeatureCount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationFeatureCount
func (r *UserRegistrationFeatureCountRequest) Update(ctx context.Context, reqObj *UserRegistrationFeatureCount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationFeatureCount
func (r *UserRegistrationFeatureCountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationFeatureSummaryRequestBuilder is request builder for UserRegistrationFeatureSummary
type UserRegistrationFeatureSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationFeatureSummaryRequest
func (b *UserRegistrationFeatureSummaryRequestBuilder) Request() *UserRegistrationFeatureSummaryRequest {
	return &UserRegistrationFeatureSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationFeatureSummaryRequest is request for UserRegistrationFeatureSummary
type UserRegistrationFeatureSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationFeatureSummary
func (r *UserRegistrationFeatureSummaryRequest) Get(ctx context.Context) (resObj *UserRegistrationFeatureSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationFeatureSummary
func (r *UserRegistrationFeatureSummaryRequest) Update(ctx context.Context, reqObj *UserRegistrationFeatureSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationFeatureSummary
func (r *UserRegistrationFeatureSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationMethodCountRequestBuilder is request builder for UserRegistrationMethodCount
type UserRegistrationMethodCountRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationMethodCountRequest
func (b *UserRegistrationMethodCountRequestBuilder) Request() *UserRegistrationMethodCountRequest {
	return &UserRegistrationMethodCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationMethodCountRequest is request for UserRegistrationMethodCount
type UserRegistrationMethodCountRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationMethodCount
func (r *UserRegistrationMethodCountRequest) Get(ctx context.Context) (resObj *UserRegistrationMethodCount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationMethodCount
func (r *UserRegistrationMethodCountRequest) Update(ctx context.Context, reqObj *UserRegistrationMethodCount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationMethodCount
func (r *UserRegistrationMethodCountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserRegistrationMethodSummaryRequestBuilder is request builder for UserRegistrationMethodSummary
type UserRegistrationMethodSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserRegistrationMethodSummaryRequest
func (b *UserRegistrationMethodSummaryRequestBuilder) Request() *UserRegistrationMethodSummaryRequest {
	return &UserRegistrationMethodSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserRegistrationMethodSummaryRequest is request for UserRegistrationMethodSummary
type UserRegistrationMethodSummaryRequest struct{ BaseRequest }

// Get performs GET request for UserRegistrationMethodSummary
func (r *UserRegistrationMethodSummaryRequest) Get(ctx context.Context) (resObj *UserRegistrationMethodSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserRegistrationMethodSummary
func (r *UserRegistrationMethodSummaryRequest) Update(ctx context.Context, reqObj *UserRegistrationMethodSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserRegistrationMethodSummary
func (r *UserRegistrationMethodSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserScopeTeamsAppInstallationRequestBuilder is request builder for UserScopeTeamsAppInstallation
type UserScopeTeamsAppInstallationRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserScopeTeamsAppInstallationRequest
func (b *UserScopeTeamsAppInstallationRequestBuilder) Request() *UserScopeTeamsAppInstallationRequest {
	return &UserScopeTeamsAppInstallationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserScopeTeamsAppInstallationRequest is request for UserScopeTeamsAppInstallation
type UserScopeTeamsAppInstallationRequest struct{ BaseRequest }

// Get performs GET request for UserScopeTeamsAppInstallation
func (r *UserScopeTeamsAppInstallationRequest) Get(ctx context.Context) (resObj *UserScopeTeamsAppInstallation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserScopeTeamsAppInstallation
func (r *UserScopeTeamsAppInstallationRequest) Update(ctx context.Context, reqObj *UserScopeTeamsAppInstallation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserScopeTeamsAppInstallation
func (r *UserScopeTeamsAppInstallationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSecurityProfileRequestBuilder is request builder for UserSecurityProfile
type UserSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSecurityProfileRequest
func (b *UserSecurityProfileRequestBuilder) Request() *UserSecurityProfileRequest {
	return &UserSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSecurityProfileRequest is request for UserSecurityProfile
type UserSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for UserSecurityProfile
func (r *UserSecurityProfileRequest) Get(ctx context.Context) (resObj *UserSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSecurityProfile
func (r *UserSecurityProfileRequest) Update(ctx context.Context, reqObj *UserSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSecurityProfile
func (r *UserSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSecurityStateRequestBuilder is request builder for UserSecurityState
type UserSecurityStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSecurityStateRequest
func (b *UserSecurityStateRequestBuilder) Request() *UserSecurityStateRequest {
	return &UserSecurityStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSecurityStateRequest is request for UserSecurityState
type UserSecurityStateRequest struct{ BaseRequest }

// Get performs GET request for UserSecurityState
func (r *UserSecurityStateRequest) Get(ctx context.Context) (resObj *UserSecurityState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSecurityState
func (r *UserSecurityStateRequest) Update(ctx context.Context, reqObj *UserSecurityState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSecurityState
func (r *UserSecurityStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSetRequestBuilder is request builder for UserSet
type UserSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSetRequest
func (b *UserSetRequestBuilder) Request() *UserSetRequest {
	return &UserSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSetRequest is request for UserSet
type UserSetRequest struct{ BaseRequest }

// Get performs GET request for UserSet
func (r *UserSetRequest) Get(ctx context.Context) (resObj *UserSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSet
func (r *UserSetRequest) Update(ctx context.Context, reqObj *UserSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSet
func (r *UserSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSettingsRequestBuilder is request builder for UserSettings
type UserSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSettingsRequest
func (b *UserSettingsRequestBuilder) Request() *UserSettingsRequest {
	return &UserSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSettingsRequest is request for UserSettings
type UserSettingsRequest struct{ BaseRequest }

// Get performs GET request for UserSettings
func (r *UserSettingsRequest) Get(ctx context.Context) (resObj *UserSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSettings
func (r *UserSettingsRequest) Update(ctx context.Context, reqObj *UserSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSettings
func (r *UserSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSignInInsightRequestBuilder is request builder for UserSignInInsight
type UserSignInInsightRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSignInInsightRequest
func (b *UserSignInInsightRequestBuilder) Request() *UserSignInInsightRequest {
	return &UserSignInInsightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSignInInsightRequest is request for UserSignInInsight
type UserSignInInsightRequest struct{ BaseRequest }

// Get performs GET request for UserSignInInsight
func (r *UserSignInInsightRequest) Get(ctx context.Context) (resObj *UserSignInInsight, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSignInInsight
func (r *UserSignInInsightRequest) Update(ctx context.Context, reqObj *UserSignInInsight) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSignInInsight
func (r *UserSignInInsightRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSimulationDetailsRequestBuilder is request builder for UserSimulationDetails
type UserSimulationDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSimulationDetailsRequest
func (b *UserSimulationDetailsRequestBuilder) Request() *UserSimulationDetailsRequest {
	return &UserSimulationDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSimulationDetailsRequest is request for UserSimulationDetails
type UserSimulationDetailsRequest struct{ BaseRequest }

// Get performs GET request for UserSimulationDetails
func (r *UserSimulationDetailsRequest) Get(ctx context.Context) (resObj *UserSimulationDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSimulationDetails
func (r *UserSimulationDetailsRequest) Update(ctx context.Context, reqObj *UserSimulationDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSimulationDetails
func (r *UserSimulationDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserSimulationEventInfoRequestBuilder is request builder for UserSimulationEventInfo
type UserSimulationEventInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserSimulationEventInfoRequest
func (b *UserSimulationEventInfoRequestBuilder) Request() *UserSimulationEventInfoRequest {
	return &UserSimulationEventInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserSimulationEventInfoRequest is request for UserSimulationEventInfo
type UserSimulationEventInfoRequest struct{ BaseRequest }

// Get performs GET request for UserSimulationEventInfo
func (r *UserSimulationEventInfoRequest) Get(ctx context.Context) (resObj *UserSimulationEventInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserSimulationEventInfo
func (r *UserSimulationEventInfoRequest) Update(ctx context.Context, reqObj *UserSimulationEventInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserSimulationEventInfo
func (r *UserSimulationEventInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserTeamworkRequestBuilder is request builder for UserTeamwork
type UserTeamworkRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserTeamworkRequest
func (b *UserTeamworkRequestBuilder) Request() *UserTeamworkRequest {
	return &UserTeamworkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserTeamworkRequest is request for UserTeamwork
type UserTeamworkRequest struct{ BaseRequest }

// Get performs GET request for UserTeamwork
func (r *UserTeamworkRequest) Get(ctx context.Context) (resObj *UserTeamwork, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserTeamwork
func (r *UserTeamworkRequest) Update(ctx context.Context, reqObj *UserTeamwork) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserTeamwork
func (r *UserTeamworkRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserTrainingContentEventInfoRequestBuilder is request builder for UserTrainingContentEventInfo
type UserTrainingContentEventInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserTrainingContentEventInfoRequest
func (b *UserTrainingContentEventInfoRequestBuilder) Request() *UserTrainingContentEventInfoRequest {
	return &UserTrainingContentEventInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserTrainingContentEventInfoRequest is request for UserTrainingContentEventInfo
type UserTrainingContentEventInfoRequest struct{ BaseRequest }

// Get performs GET request for UserTrainingContentEventInfo
func (r *UserTrainingContentEventInfoRequest) Get(ctx context.Context) (resObj *UserTrainingContentEventInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserTrainingContentEventInfo
func (r *UserTrainingContentEventInfoRequest) Update(ctx context.Context, reqObj *UserTrainingContentEventInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserTrainingContentEventInfo
func (r *UserTrainingContentEventInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserTrainingEventInfoRequestBuilder is request builder for UserTrainingEventInfo
type UserTrainingEventInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserTrainingEventInfoRequest
func (b *UserTrainingEventInfoRequestBuilder) Request() *UserTrainingEventInfoRequest {
	return &UserTrainingEventInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserTrainingEventInfoRequest is request for UserTrainingEventInfo
type UserTrainingEventInfoRequest struct{ BaseRequest }

// Get performs GET request for UserTrainingEventInfo
func (r *UserTrainingEventInfoRequest) Get(ctx context.Context) (resObj *UserTrainingEventInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserTrainingEventInfo
func (r *UserTrainingEventInfoRequest) Update(ctx context.Context, reqObj *UserTrainingEventInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserTrainingEventInfo
func (r *UserTrainingEventInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// UserTrainingStatusInfoRequestBuilder is request builder for UserTrainingStatusInfo
type UserTrainingStatusInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserTrainingStatusInfoRequest
func (b *UserTrainingStatusInfoRequestBuilder) Request() *UserTrainingStatusInfoRequest {
	return &UserTrainingStatusInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserTrainingStatusInfoRequest is request for UserTrainingStatusInfo
type UserTrainingStatusInfoRequest struct{ BaseRequest }

// Get performs GET request for UserTrainingStatusInfo
func (r *UserTrainingStatusInfoRequest) Get(ctx context.Context) (resObj *UserTrainingStatusInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserTrainingStatusInfo
func (r *UserTrainingStatusInfoRequest) Update(ctx context.Context, reqObj *UserTrainingStatusInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserTrainingStatusInfo
func (r *UserTrainingStatusInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type UserCollectionValidatePasswordRequestBuilder struct{ BaseRequestBuilder }

// ValidatePassword action undocumentedras
func (b *CloudPcProvisioningPolicyAssignmentAssignedUsersCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidatePassword action undocumentedras
func (b *ManagedDeviceUsersCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidatePassword action undocumentedras
func (b *PrinterShareAllowedUsersCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidatePassword action undocumentedras
func (b *SubjectRightsRequestObjectApproversCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidatePassword action undocumentedras
func (b *SubjectRightsRequestObjectCollaboratorsCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidatePassword action undocumentedras
func (b *TeamOwnersCollectionRequestBuilder) ValidatePassword(reqObj *UserCollectionValidatePasswordRequestParameter) *UserCollectionValidatePasswordRequestBuilder {
	bb := &UserCollectionValidatePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidatePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserCollectionValidatePasswordRequest struct{ BaseRequest }

func (b *UserCollectionValidatePasswordRequestBuilder) Request() *UserCollectionValidatePasswordRequest {
	return &UserCollectionValidatePasswordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserCollectionValidatePasswordRequest) Post(ctx context.Context) (resObj *PasswordValidationInformation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserAssignLicenseRequestBuilder struct{ BaseRequestBuilder }

// AssignLicense action undocumentedras
func (b *UserRequestBuilder) AssignLicense(reqObj *UserAssignLicenseRequestParameter) *UserAssignLicenseRequestBuilder {
	bb := &UserAssignLicenseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/AssignLicense"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserAssignLicenseRequest struct{ BaseRequest }

func (b *UserAssignLicenseRequestBuilder) Request() *UserAssignLicenseRequest {
	return &UserAssignLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserAssignLicenseRequest) Post(ctx context.Context) (resObj *User, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserChangePasswordRequestBuilder struct{ BaseRequestBuilder }

// ChangePassword action undocumentedrav
func (b *UserRequestBuilder) ChangePassword(reqObj *UserChangePasswordRequestParameter) *UserChangePasswordRequestBuilder {
	bb := &UserChangePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ChangePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserChangePasswordRequest struct{ BaseRequest }

func (b *UserChangePasswordRequestBuilder) Request() *UserChangePasswordRequest {
	return &UserChangePasswordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserChangePasswordRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserInvalidateAllRefreshTokensRequestBuilder struct{ BaseRequestBuilder }

// InvalidateAllRefreshTokens action undocumentedras
func (b *UserRequestBuilder) InvalidateAllRefreshTokens(reqObj *UserInvalidateAllRefreshTokensRequestParameter) *UserInvalidateAllRefreshTokensRequestBuilder {
	bb := &UserInvalidateAllRefreshTokensRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/InvalidateAllRefreshTokens"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserInvalidateAllRefreshTokensRequest struct{ BaseRequest }

func (b *UserInvalidateAllRefreshTokensRequestBuilder) Request() *UserInvalidateAllRefreshTokensRequest {
	return &UserInvalidateAllRefreshTokensRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserInvalidateAllRefreshTokensRequest) Post(ctx context.Context) (resObj *bool, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserReprocessLicenseAssignmentRequestBuilder struct{ BaseRequestBuilder }

// ReprocessLicenseAssignment action undocumentedras
func (b *UserRequestBuilder) ReprocessLicenseAssignment(reqObj *UserReprocessLicenseAssignmentRequestParameter) *UserReprocessLicenseAssignmentRequestBuilder {
	bb := &UserReprocessLicenseAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ReprocessLicenseAssignment"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserReprocessLicenseAssignmentRequest struct{ BaseRequest }

func (b *UserReprocessLicenseAssignmentRequestBuilder) Request() *UserReprocessLicenseAssignmentRequest {
	return &UserReprocessLicenseAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserReprocessLicenseAssignmentRequest) Post(ctx context.Context) (resObj *User, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserRetryServiceProvisioningRequestBuilder struct{ BaseRequestBuilder }

// RetryServiceProvisioning action undocumentedrav
func (b *UserRequestBuilder) RetryServiceProvisioning(reqObj *UserRetryServiceProvisioningRequestParameter) *UserRetryServiceProvisioningRequestBuilder {
	bb := &UserRetryServiceProvisioningRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RetryServiceProvisioning"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserRetryServiceProvisioningRequest struct{ BaseRequest }

func (b *UserRetryServiceProvisioningRequestBuilder) Request() *UserRetryServiceProvisioningRequest {
	return &UserRetryServiceProvisioningRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserRetryServiceProvisioningRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserRevokeSignInSessionsRequestBuilder struct{ BaseRequestBuilder }

// RevokeSignInSessions action undocumentedras
func (b *UserRequestBuilder) RevokeSignInSessions(reqObj *UserRevokeSignInSessionsRequestParameter) *UserRevokeSignInSessionsRequestBuilder {
	bb := &UserRevokeSignInSessionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RevokeSignInSessions"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserRevokeSignInSessionsRequest struct{ BaseRequest }

func (b *UserRevokeSignInSessionsRequestBuilder) Request() *UserRevokeSignInSessionsRequest {
	return &UserRevokeSignInSessionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserRevokeSignInSessionsRequest) Post(ctx context.Context) (resObj *bool, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserFindMeetingTimesRequestBuilder struct{ BaseRequestBuilder }

// FindMeetingTimes action undocumentedras
func (b *UserRequestBuilder) FindMeetingTimes(reqObj *UserFindMeetingTimesRequestParameter) *UserFindMeetingTimesRequestBuilder {
	bb := &UserFindMeetingTimesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/FindMeetingTimes"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserFindMeetingTimesRequest struct{ BaseRequest }

func (b *UserFindMeetingTimesRequestBuilder) Request() *UserFindMeetingTimesRequest {
	return &UserFindMeetingTimesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserFindMeetingTimesRequest) Post(ctx context.Context) (resObj *MeetingTimeSuggestionsResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserGetMailTipsRequestBuilder struct{ BaseRequestBuilder }

// GetMailTips action undocumentedrac
func (b *UserRequestBuilder) GetMailTips(reqObj *UserGetMailTipsRequestParameter) *UserGetMailTipsRequestBuilder {
	bb := &UserGetMailTipsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMailTips"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserGetMailTipsRequest struct{ BaseRequest }

func (b *UserGetMailTipsRequestBuilder) Request() *UserGetMailTipsRequest {
	return &UserGetMailTipsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserGetMailTipsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]MailTips, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MailTips
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []MailTips
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *UserGetMailTipsRequest) PostN(ctx context.Context, n int) ([]MailTips, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *UserGetMailTipsRequest) Post(ctx context.Context) ([]MailTips, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type UserSendMailRequestBuilder struct{ BaseRequestBuilder }

// SendMail action undocumentedrav
func (b *UserRequestBuilder) SendMail(reqObj *UserSendMailRequestParameter) *UserSendMailRequestBuilder {
	bb := &UserSendMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SendMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserSendMailRequest struct{ BaseRequest }

func (b *UserSendMailRequestBuilder) Request() *UserSendMailRequest {
	return &UserSendMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserSendMailRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserTranslateExchangeIDsRequestBuilder struct{ BaseRequestBuilder }

// TranslateExchangeIDs action undocumentedrac
func (b *UserRequestBuilder) TranslateExchangeIDs(reqObj *UserTranslateExchangeIDsRequestParameter) *UserTranslateExchangeIDsRequestBuilder {
	bb := &UserTranslateExchangeIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TranslateExchangeIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserTranslateExchangeIDsRequest struct{ BaseRequest }

func (b *UserTranslateExchangeIDsRequestBuilder) Request() *UserTranslateExchangeIDsRequest {
	return &UserTranslateExchangeIDsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserTranslateExchangeIDsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ConvertIDResult, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ConvertIDResult
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ConvertIDResult
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *UserTranslateExchangeIDsRequest) PostN(ctx context.Context, n int) ([]ConvertIDResult, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *UserTranslateExchangeIDsRequest) Post(ctx context.Context) ([]ConvertIDResult, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type UserRemoveAllDevicesFromManagementRequestBuilder struct{ BaseRequestBuilder }

// RemoveAllDevicesFromManagement action undocumentedrav
func (b *UserRequestBuilder) RemoveAllDevicesFromManagement(reqObj *UserRemoveAllDevicesFromManagementRequestParameter) *UserRemoveAllDevicesFromManagementRequestBuilder {
	bb := &UserRemoveAllDevicesFromManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RemoveAllDevicesFromManagement"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserRemoveAllDevicesFromManagementRequest struct{ BaseRequest }

func (b *UserRemoveAllDevicesFromManagementRequestBuilder) Request() *UserRemoveAllDevicesFromManagementRequest {
	return &UserRemoveAllDevicesFromManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserRemoveAllDevicesFromManagementRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserUnblockManagedAppsRequestBuilder struct{ BaseRequestBuilder }

// UnblockManagedApps action undocumentedrav
func (b *UserRequestBuilder) UnblockManagedApps(reqObj *UserUnblockManagedAppsRequestParameter) *UserUnblockManagedAppsRequestBuilder {
	bb := &UserUnblockManagedAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UnblockManagedApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserUnblockManagedAppsRequest struct{ BaseRequest }

func (b *UserUnblockManagedAppsRequestBuilder) Request() *UserUnblockManagedAppsRequest {
	return &UserUnblockManagedAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserUnblockManagedAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserWipeAndBlockManagedAppsRequestBuilder struct{ BaseRequestBuilder }

// WipeAndBlockManagedApps action undocumentedrav
func (b *UserRequestBuilder) WipeAndBlockManagedApps(reqObj *UserWipeAndBlockManagedAppsRequestParameter) *UserWipeAndBlockManagedAppsRequestBuilder {
	bb := &UserWipeAndBlockManagedAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WipeAndBlockManagedApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserWipeAndBlockManagedAppsRequest struct{ BaseRequest }

func (b *UserWipeAndBlockManagedAppsRequestBuilder) Request() *UserWipeAndBlockManagedAppsRequest {
	return &UserWipeAndBlockManagedAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserWipeAndBlockManagedAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserWipeManagedAppRegistrationByDeviceTagRequestBuilder struct{ BaseRequestBuilder }

// WipeManagedAppRegistrationByDeviceTag action undocumentedrav
func (b *UserRequestBuilder) WipeManagedAppRegistrationByDeviceTag(reqObj *UserWipeManagedAppRegistrationByDeviceTagRequestParameter) *UserWipeManagedAppRegistrationByDeviceTagRequestBuilder {
	bb := &UserWipeManagedAppRegistrationByDeviceTagRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WipeManagedAppRegistrationByDeviceTag"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserWipeManagedAppRegistrationByDeviceTagRequest struct{ BaseRequest }

func (b *UserWipeManagedAppRegistrationByDeviceTagRequestBuilder) Request() *UserWipeManagedAppRegistrationByDeviceTagRequest {
	return &UserWipeManagedAppRegistrationByDeviceTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserWipeManagedAppRegistrationByDeviceTagRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequestBuilder struct{ BaseRequestBuilder }

// WipeManagedAppRegistrationsByAzureAdDeviceID action undocumentedrav
func (b *UserRequestBuilder) WipeManagedAppRegistrationsByAzureAdDeviceID(reqObj *UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequestParameter) *UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequestBuilder {
	bb := &UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WipeManagedAppRegistrationsByAzureAdDeviceId"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequest struct{ BaseRequest }

func (b *UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequestBuilder) Request() *UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequest {
	return &UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserWipeManagedAppRegistrationsByAzureAdDeviceIDRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder struct{ BaseRequestBuilder }

// WipeManagedAppRegistrationsByDeviceTag action undocumentedrav
func (b *UserRequestBuilder) WipeManagedAppRegistrationsByDeviceTag(reqObj *UserWipeManagedAppRegistrationsByDeviceTagRequestParameter) *UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder {
	bb := &UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/WipeManagedAppRegistrationsByDeviceTag"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserWipeManagedAppRegistrationsByDeviceTagRequest struct{ BaseRequest }

func (b *UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder) Request() *UserWipeManagedAppRegistrationsByDeviceTagRequest {
	return &UserWipeManagedAppRegistrationsByDeviceTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserWipeManagedAppRegistrationsByDeviceTagRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserExportPersonalDataRequestBuilder struct{ BaseRequestBuilder }

// ExportPersonalData action undocumentedrav
func (b *UserRequestBuilder) ExportPersonalData(reqObj *UserExportPersonalDataRequestParameter) *UserExportPersonalDataRequestBuilder {
	bb := &UserExportPersonalDataRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ExportPersonalData"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserExportPersonalDataRequest struct{ BaseRequest }

func (b *UserExportPersonalDataRequestBuilder) Request() *UserExportPersonalDataRequest {
	return &UserExportPersonalDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserExportPersonalDataRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequestBuilder struct{ BaseRequestBuilder }

// TriggerDeviceScopeAction action undocumentedras
func (b *UserExperienceAnalyticsDeviceScopeRequestBuilder) TriggerDeviceScopeAction(reqObj *UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequestParameter) *UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequestBuilder {
	bb := &UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/TriggerDeviceScopeAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequest struct{ BaseRequest }

func (b *UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequestBuilder) Request() *UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequest {
	return &UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserExperienceAnalyticsDeviceScopeTriggerDeviceScopeActionRequest) Post(ctx context.Context) (resObj *DeviceScopeActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type UserTeamworkSendActivityNotificationRequestBuilder struct{ BaseRequestBuilder }

// SendActivityNotification action undocumentedrav
func (b *UserTeamworkRequestBuilder) SendActivityNotification(reqObj *UserTeamworkSendActivityNotificationRequestParameter) *UserTeamworkSendActivityNotificationRequestBuilder {
	bb := &UserTeamworkSendActivityNotificationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SendActivityNotification"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type UserTeamworkSendActivityNotificationRequest struct{ BaseRequest }

func (b *UserTeamworkSendActivityNotificationRequestBuilder) Request() *UserTeamworkSendActivityNotificationRequest {
	return &UserTeamworkSendActivityNotificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *UserTeamworkSendActivityNotificationRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
