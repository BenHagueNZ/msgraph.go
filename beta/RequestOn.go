// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// OnPremisesAccidentalDeletionPreventionRequestBuilder is request builder for OnPremisesAccidentalDeletionPrevention
type OnPremisesAccidentalDeletionPreventionRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesAccidentalDeletionPreventionRequest
func (b *OnPremisesAccidentalDeletionPreventionRequestBuilder) Request() *OnPremisesAccidentalDeletionPreventionRequest {
	return &OnPremisesAccidentalDeletionPreventionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesAccidentalDeletionPreventionRequest is request for OnPremisesAccidentalDeletionPrevention
type OnPremisesAccidentalDeletionPreventionRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesAccidentalDeletionPrevention
func (r *OnPremisesAccidentalDeletionPreventionRequest) Get(ctx context.Context) (resObj *OnPremisesAccidentalDeletionPrevention, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesAccidentalDeletionPrevention
func (r *OnPremisesAccidentalDeletionPreventionRequest) Update(ctx context.Context, reqObj *OnPremisesAccidentalDeletionPrevention) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesAccidentalDeletionPrevention
func (r *OnPremisesAccidentalDeletionPreventionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesAgentRequestBuilder is request builder for OnPremisesAgent
type OnPremisesAgentRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesAgentRequest
func (b *OnPremisesAgentRequestBuilder) Request() *OnPremisesAgentRequest {
	return &OnPremisesAgentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesAgentRequest is request for OnPremisesAgent
type OnPremisesAgentRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesAgent
func (r *OnPremisesAgentRequest) Get(ctx context.Context) (resObj *OnPremisesAgent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesAgent
func (r *OnPremisesAgentRequest) Update(ctx context.Context, reqObj *OnPremisesAgent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesAgent
func (r *OnPremisesAgentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesAgentGroupRequestBuilder is request builder for OnPremisesAgentGroup
type OnPremisesAgentGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesAgentGroupRequest
func (b *OnPremisesAgentGroupRequestBuilder) Request() *OnPremisesAgentGroupRequest {
	return &OnPremisesAgentGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesAgentGroupRequest is request for OnPremisesAgentGroup
type OnPremisesAgentGroupRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesAgentGroup
func (r *OnPremisesAgentGroupRequest) Get(ctx context.Context) (resObj *OnPremisesAgentGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesAgentGroup
func (r *OnPremisesAgentGroupRequest) Update(ctx context.Context, reqObj *OnPremisesAgentGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesAgentGroup
func (r *OnPremisesAgentGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesApplicationSegmentRequestBuilder is request builder for OnPremisesApplicationSegment
type OnPremisesApplicationSegmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesApplicationSegmentRequest
func (b *OnPremisesApplicationSegmentRequestBuilder) Request() *OnPremisesApplicationSegmentRequest {
	return &OnPremisesApplicationSegmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesApplicationSegmentRequest is request for OnPremisesApplicationSegment
type OnPremisesApplicationSegmentRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesApplicationSegment
func (r *OnPremisesApplicationSegmentRequest) Get(ctx context.Context) (resObj *OnPremisesApplicationSegment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesApplicationSegment
func (r *OnPremisesApplicationSegmentRequest) Update(ctx context.Context, reqObj *OnPremisesApplicationSegment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesApplicationSegment
func (r *OnPremisesApplicationSegmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesConditionalAccessSettingsRequestBuilder is request builder for OnPremisesConditionalAccessSettings
type OnPremisesConditionalAccessSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesConditionalAccessSettingsRequest
func (b *OnPremisesConditionalAccessSettingsRequestBuilder) Request() *OnPremisesConditionalAccessSettingsRequest {
	return &OnPremisesConditionalAccessSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesConditionalAccessSettingsRequest is request for OnPremisesConditionalAccessSettings
type OnPremisesConditionalAccessSettingsRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesConditionalAccessSettings
func (r *OnPremisesConditionalAccessSettingsRequest) Get(ctx context.Context) (resObj *OnPremisesConditionalAccessSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesConditionalAccessSettings
func (r *OnPremisesConditionalAccessSettingsRequest) Update(ctx context.Context, reqObj *OnPremisesConditionalAccessSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesConditionalAccessSettings
func (r *OnPremisesConditionalAccessSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesDirectorySynchronizationRequestBuilder is request builder for OnPremisesDirectorySynchronization
type OnPremisesDirectorySynchronizationRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesDirectorySynchronizationRequest
func (b *OnPremisesDirectorySynchronizationRequestBuilder) Request() *OnPremisesDirectorySynchronizationRequest {
	return &OnPremisesDirectorySynchronizationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesDirectorySynchronizationRequest is request for OnPremisesDirectorySynchronization
type OnPremisesDirectorySynchronizationRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesDirectorySynchronization
func (r *OnPremisesDirectorySynchronizationRequest) Get(ctx context.Context) (resObj *OnPremisesDirectorySynchronization, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesDirectorySynchronization
func (r *OnPremisesDirectorySynchronizationRequest) Update(ctx context.Context, reqObj *OnPremisesDirectorySynchronization) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesDirectorySynchronization
func (r *OnPremisesDirectorySynchronizationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesDirectorySynchronizationConfigurationRequestBuilder is request builder for OnPremisesDirectorySynchronizationConfiguration
type OnPremisesDirectorySynchronizationConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesDirectorySynchronizationConfigurationRequest
func (b *OnPremisesDirectorySynchronizationConfigurationRequestBuilder) Request() *OnPremisesDirectorySynchronizationConfigurationRequest {
	return &OnPremisesDirectorySynchronizationConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesDirectorySynchronizationConfigurationRequest is request for OnPremisesDirectorySynchronizationConfiguration
type OnPremisesDirectorySynchronizationConfigurationRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesDirectorySynchronizationConfiguration
func (r *OnPremisesDirectorySynchronizationConfigurationRequest) Get(ctx context.Context) (resObj *OnPremisesDirectorySynchronizationConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesDirectorySynchronizationConfiguration
func (r *OnPremisesDirectorySynchronizationConfigurationRequest) Update(ctx context.Context, reqObj *OnPremisesDirectorySynchronizationConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesDirectorySynchronizationConfiguration
func (r *OnPremisesDirectorySynchronizationConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesDirectorySynchronizationFeatureRequestBuilder is request builder for OnPremisesDirectorySynchronizationFeature
type OnPremisesDirectorySynchronizationFeatureRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesDirectorySynchronizationFeatureRequest
func (b *OnPremisesDirectorySynchronizationFeatureRequestBuilder) Request() *OnPremisesDirectorySynchronizationFeatureRequest {
	return &OnPremisesDirectorySynchronizationFeatureRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesDirectorySynchronizationFeatureRequest is request for OnPremisesDirectorySynchronizationFeature
type OnPremisesDirectorySynchronizationFeatureRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesDirectorySynchronizationFeature
func (r *OnPremisesDirectorySynchronizationFeatureRequest) Get(ctx context.Context) (resObj *OnPremisesDirectorySynchronizationFeature, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesDirectorySynchronizationFeature
func (r *OnPremisesDirectorySynchronizationFeatureRequest) Update(ctx context.Context, reqObj *OnPremisesDirectorySynchronizationFeature) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesDirectorySynchronizationFeature
func (r *OnPremisesDirectorySynchronizationFeatureRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesExtensionAttributesRequestBuilder is request builder for OnPremisesExtensionAttributes
type OnPremisesExtensionAttributesRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesExtensionAttributesRequest
func (b *OnPremisesExtensionAttributesRequestBuilder) Request() *OnPremisesExtensionAttributesRequest {
	return &OnPremisesExtensionAttributesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesExtensionAttributesRequest is request for OnPremisesExtensionAttributes
type OnPremisesExtensionAttributesRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesExtensionAttributes
func (r *OnPremisesExtensionAttributesRequest) Get(ctx context.Context) (resObj *OnPremisesExtensionAttributes, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesExtensionAttributes
func (r *OnPremisesExtensionAttributesRequest) Update(ctx context.Context, reqObj *OnPremisesExtensionAttributes) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesExtensionAttributes
func (r *OnPremisesExtensionAttributesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesProvisioningErrorRequestBuilder is request builder for OnPremisesProvisioningError
type OnPremisesProvisioningErrorRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesProvisioningErrorRequest
func (b *OnPremisesProvisioningErrorRequestBuilder) Request() *OnPremisesProvisioningErrorRequest {
	return &OnPremisesProvisioningErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesProvisioningErrorRequest is request for OnPremisesProvisioningError
type OnPremisesProvisioningErrorRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesProvisioningError
func (r *OnPremisesProvisioningErrorRequest) Get(ctx context.Context) (resObj *OnPremisesProvisioningError, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesProvisioningError
func (r *OnPremisesProvisioningErrorRequest) Update(ctx context.Context, reqObj *OnPremisesProvisioningError) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesProvisioningError
func (r *OnPremisesProvisioningErrorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesPublishingRequestBuilder is request builder for OnPremisesPublishing
type OnPremisesPublishingRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesPublishingRequest
func (b *OnPremisesPublishingRequestBuilder) Request() *OnPremisesPublishingRequest {
	return &OnPremisesPublishingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesPublishingRequest is request for OnPremisesPublishing
type OnPremisesPublishingRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesPublishing
func (r *OnPremisesPublishingRequest) Get(ctx context.Context) (resObj *OnPremisesPublishing, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesPublishing
func (r *OnPremisesPublishingRequest) Update(ctx context.Context, reqObj *OnPremisesPublishing) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesPublishing
func (r *OnPremisesPublishingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesPublishingProfileRequestBuilder is request builder for OnPremisesPublishingProfile
type OnPremisesPublishingProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesPublishingProfileRequest
func (b *OnPremisesPublishingProfileRequestBuilder) Request() *OnPremisesPublishingProfileRequest {
	return &OnPremisesPublishingProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesPublishingProfileRequest is request for OnPremisesPublishingProfile
type OnPremisesPublishingProfileRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesPublishingProfile
func (r *OnPremisesPublishingProfileRequest) Get(ctx context.Context) (resObj *OnPremisesPublishingProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesPublishingProfile
func (r *OnPremisesPublishingProfileRequest) Update(ctx context.Context, reqObj *OnPremisesPublishingProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesPublishingProfile
func (r *OnPremisesPublishingProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnPremisesPublishingSingleSignOnRequestBuilder is request builder for OnPremisesPublishingSingleSignOn
type OnPremisesPublishingSingleSignOnRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnPremisesPublishingSingleSignOnRequest
func (b *OnPremisesPublishingSingleSignOnRequestBuilder) Request() *OnPremisesPublishingSingleSignOnRequest {
	return &OnPremisesPublishingSingleSignOnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnPremisesPublishingSingleSignOnRequest is request for OnPremisesPublishingSingleSignOn
type OnPremisesPublishingSingleSignOnRequest struct{ BaseRequest }

// Get performs GET request for OnPremisesPublishingSingleSignOn
func (r *OnPremisesPublishingSingleSignOnRequest) Get(ctx context.Context) (resObj *OnPremisesPublishingSingleSignOn, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnPremisesPublishingSingleSignOn
func (r *OnPremisesPublishingSingleSignOnRequest) Update(ctx context.Context, reqObj *OnPremisesPublishingSingleSignOn) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnPremisesPublishingSingleSignOn
func (r *OnPremisesPublishingSingleSignOnRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnTokenIssuanceStartCustomExtensionRequestBuilder is request builder for OnTokenIssuanceStartCustomExtension
type OnTokenIssuanceStartCustomExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnTokenIssuanceStartCustomExtensionRequest
func (b *OnTokenIssuanceStartCustomExtensionRequestBuilder) Request() *OnTokenIssuanceStartCustomExtensionRequest {
	return &OnTokenIssuanceStartCustomExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnTokenIssuanceStartCustomExtensionRequest is request for OnTokenIssuanceStartCustomExtension
type OnTokenIssuanceStartCustomExtensionRequest struct{ BaseRequest }

// Get performs GET request for OnTokenIssuanceStartCustomExtension
func (r *OnTokenIssuanceStartCustomExtensionRequest) Get(ctx context.Context) (resObj *OnTokenIssuanceStartCustomExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnTokenIssuanceStartCustomExtension
func (r *OnTokenIssuanceStartCustomExtensionRequest) Update(ctx context.Context, reqObj *OnTokenIssuanceStartCustomExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnTokenIssuanceStartCustomExtension
func (r *OnTokenIssuanceStartCustomExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnTokenIssuanceStartCustomExtensionHandlerRequestBuilder is request builder for OnTokenIssuanceStartCustomExtensionHandler
type OnTokenIssuanceStartCustomExtensionHandlerRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnTokenIssuanceStartCustomExtensionHandlerRequest
func (b *OnTokenIssuanceStartCustomExtensionHandlerRequestBuilder) Request() *OnTokenIssuanceStartCustomExtensionHandlerRequest {
	return &OnTokenIssuanceStartCustomExtensionHandlerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnTokenIssuanceStartCustomExtensionHandlerRequest is request for OnTokenIssuanceStartCustomExtensionHandler
type OnTokenIssuanceStartCustomExtensionHandlerRequest struct{ BaseRequest }

// Get performs GET request for OnTokenIssuanceStartCustomExtensionHandler
func (r *OnTokenIssuanceStartCustomExtensionHandlerRequest) Get(ctx context.Context) (resObj *OnTokenIssuanceStartCustomExtensionHandler, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnTokenIssuanceStartCustomExtensionHandler
func (r *OnTokenIssuanceStartCustomExtensionHandlerRequest) Update(ctx context.Context, reqObj *OnTokenIssuanceStartCustomExtensionHandler) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnTokenIssuanceStartCustomExtensionHandler
func (r *OnTokenIssuanceStartCustomExtensionHandlerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnTokenIssuanceStartHandlerRequestBuilder is request builder for OnTokenIssuanceStartHandler
type OnTokenIssuanceStartHandlerRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnTokenIssuanceStartHandlerRequest
func (b *OnTokenIssuanceStartHandlerRequestBuilder) Request() *OnTokenIssuanceStartHandlerRequest {
	return &OnTokenIssuanceStartHandlerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnTokenIssuanceStartHandlerRequest is request for OnTokenIssuanceStartHandler
type OnTokenIssuanceStartHandlerRequest struct{ BaseRequest }

// Get performs GET request for OnTokenIssuanceStartHandler
func (r *OnTokenIssuanceStartHandlerRequest) Get(ctx context.Context) (resObj *OnTokenIssuanceStartHandler, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnTokenIssuanceStartHandler
func (r *OnTokenIssuanceStartHandlerRequest) Update(ctx context.Context, reqObj *OnTokenIssuanceStartHandler) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnTokenIssuanceStartHandler
func (r *OnTokenIssuanceStartHandlerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnTokenIssuanceStartListenerRequestBuilder is request builder for OnTokenIssuanceStartListener
type OnTokenIssuanceStartListenerRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnTokenIssuanceStartListenerRequest
func (b *OnTokenIssuanceStartListenerRequestBuilder) Request() *OnTokenIssuanceStartListenerRequest {
	return &OnTokenIssuanceStartListenerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnTokenIssuanceStartListenerRequest is request for OnTokenIssuanceStartListener
type OnTokenIssuanceStartListenerRequest struct{ BaseRequest }

// Get performs GET request for OnTokenIssuanceStartListener
func (r *OnTokenIssuanceStartListenerRequest) Get(ctx context.Context) (resObj *OnTokenIssuanceStartListener, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnTokenIssuanceStartListener
func (r *OnTokenIssuanceStartListenerRequest) Update(ctx context.Context, reqObj *OnTokenIssuanceStartListener) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnTokenIssuanceStartListener
func (r *OnTokenIssuanceStartListenerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OnTokenIssuanceStartReturnClaimRequestBuilder is request builder for OnTokenIssuanceStartReturnClaim
type OnTokenIssuanceStartReturnClaimRequestBuilder struct{ BaseRequestBuilder }

// Request returns OnTokenIssuanceStartReturnClaimRequest
func (b *OnTokenIssuanceStartReturnClaimRequestBuilder) Request() *OnTokenIssuanceStartReturnClaimRequest {
	return &OnTokenIssuanceStartReturnClaimRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OnTokenIssuanceStartReturnClaimRequest is request for OnTokenIssuanceStartReturnClaim
type OnTokenIssuanceStartReturnClaimRequest struct{ BaseRequest }

// Get performs GET request for OnTokenIssuanceStartReturnClaim
func (r *OnTokenIssuanceStartReturnClaimRequest) Get(ctx context.Context) (resObj *OnTokenIssuanceStartReturnClaim, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OnTokenIssuanceStartReturnClaim
func (r *OnTokenIssuanceStartReturnClaimRequest) Update(ctx context.Context, reqObj *OnTokenIssuanceStartReturnClaim) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OnTokenIssuanceStartReturnClaim
func (r *OnTokenIssuanceStartReturnClaimRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
