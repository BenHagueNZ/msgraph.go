// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// CredentialRequestBuilder is request builder for Credential
type CredentialRequestBuilder struct{ BaseRequestBuilder }

// Request returns CredentialRequest
func (b *CredentialRequestBuilder) Request() *CredentialRequest {
	return &CredentialRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CredentialRequest is request for Credential
type CredentialRequest struct{ BaseRequest }

// Get performs GET request for Credential
func (r *CredentialRequest) Get(ctx context.Context) (resObj *Credential, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Credential
func (r *CredentialRequest) Update(ctx context.Context, reqObj *Credential) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Credential
func (r *CredentialRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CredentialSingleSignOnExtensionRequestBuilder is request builder for CredentialSingleSignOnExtension
type CredentialSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns CredentialSingleSignOnExtensionRequest
func (b *CredentialSingleSignOnExtensionRequestBuilder) Request() *CredentialSingleSignOnExtensionRequest {
	return &CredentialSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CredentialSingleSignOnExtensionRequest is request for CredentialSingleSignOnExtension
type CredentialSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for CredentialSingleSignOnExtension
func (r *CredentialSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *CredentialSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CredentialSingleSignOnExtension
func (r *CredentialSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *CredentialSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CredentialSingleSignOnExtension
func (r *CredentialSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CredentialUsageSummaryRequestBuilder is request builder for CredentialUsageSummary
type CredentialUsageSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns CredentialUsageSummaryRequest
func (b *CredentialUsageSummaryRequestBuilder) Request() *CredentialUsageSummaryRequest {
	return &CredentialUsageSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CredentialUsageSummaryRequest is request for CredentialUsageSummary
type CredentialUsageSummaryRequest struct{ BaseRequest }

// Get performs GET request for CredentialUsageSummary
func (r *CredentialUsageSummaryRequest) Get(ctx context.Context) (resObj *CredentialUsageSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CredentialUsageSummary
func (r *CredentialUsageSummaryRequest) Update(ctx context.Context, reqObj *CredentialUsageSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CredentialUsageSummary
func (r *CredentialUsageSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CredentialUserRegistrationCountRequestBuilder is request builder for CredentialUserRegistrationCount
type CredentialUserRegistrationCountRequestBuilder struct{ BaseRequestBuilder }

// Request returns CredentialUserRegistrationCountRequest
func (b *CredentialUserRegistrationCountRequestBuilder) Request() *CredentialUserRegistrationCountRequest {
	return &CredentialUserRegistrationCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CredentialUserRegistrationCountRequest is request for CredentialUserRegistrationCount
type CredentialUserRegistrationCountRequest struct{ BaseRequest }

// Get performs GET request for CredentialUserRegistrationCount
func (r *CredentialUserRegistrationCountRequest) Get(ctx context.Context) (resObj *CredentialUserRegistrationCount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CredentialUserRegistrationCount
func (r *CredentialUserRegistrationCountRequest) Update(ctx context.Context, reqObj *CredentialUserRegistrationCount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CredentialUserRegistrationCount
func (r *CredentialUserRegistrationCountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CredentialUserRegistrationDetailsRequestBuilder is request builder for CredentialUserRegistrationDetails
type CredentialUserRegistrationDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns CredentialUserRegistrationDetailsRequest
func (b *CredentialUserRegistrationDetailsRequestBuilder) Request() *CredentialUserRegistrationDetailsRequest {
	return &CredentialUserRegistrationDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CredentialUserRegistrationDetailsRequest is request for CredentialUserRegistrationDetails
type CredentialUserRegistrationDetailsRequest struct{ BaseRequest }

// Get performs GET request for CredentialUserRegistrationDetails
func (r *CredentialUserRegistrationDetailsRequest) Get(ctx context.Context) (resObj *CredentialUserRegistrationDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CredentialUserRegistrationDetails
func (r *CredentialUserRegistrationDetailsRequest) Update(ctx context.Context, reqObj *CredentialUserRegistrationDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CredentialUserRegistrationDetails
func (r *CredentialUserRegistrationDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
