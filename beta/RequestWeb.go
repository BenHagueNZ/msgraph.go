// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// WebAccountRequestBuilder is request builder for WebAccount
type WebAccountRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebAccountRequest
func (b *WebAccountRequestBuilder) Request() *WebAccountRequest {
	return &WebAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebAccountRequest is request for WebAccount
type WebAccountRequest struct{ BaseRequest }

// Get performs GET request for WebAccount
func (r *WebAccountRequest) Get(ctx context.Context) (resObj *WebAccount, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebAccount
func (r *WebAccountRequest) Update(ctx context.Context, reqObj *WebAccount) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebAccount
func (r *WebAccountRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebAppRequestBuilder is request builder for WebApp
type WebAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebAppRequest
func (b *WebAppRequestBuilder) Request() *WebAppRequest {
	return &WebAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebAppRequest is request for WebApp
type WebAppRequest struct{ BaseRequest }

// Get performs GET request for WebApp
func (r *WebAppRequest) Get(ctx context.Context) (resObj *WebApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebApp
func (r *WebAppRequest) Update(ctx context.Context, reqObj *WebApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebApp
func (r *WebAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebApplicationRequestBuilder is request builder for WebApplication
type WebApplicationRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebApplicationRequest
func (b *WebApplicationRequestBuilder) Request() *WebApplicationRequest {
	return &WebApplicationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebApplicationRequest is request for WebApplication
type WebApplicationRequest struct{ BaseRequest }

// Get performs GET request for WebApplication
func (r *WebApplicationRequest) Get(ctx context.Context) (resObj *WebApplication, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebApplication
func (r *WebApplicationRequest) Update(ctx context.Context, reqObj *WebApplication) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebApplication
func (r *WebApplicationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebApplicationSegmentRequestBuilder is request builder for WebApplicationSegment
type WebApplicationSegmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebApplicationSegmentRequest
func (b *WebApplicationSegmentRequestBuilder) Request() *WebApplicationSegmentRequest {
	return &WebApplicationSegmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebApplicationSegmentRequest is request for WebApplicationSegment
type WebApplicationSegmentRequest struct{ BaseRequest }

// Get performs GET request for WebApplicationSegment
func (r *WebApplicationSegmentRequest) Get(ctx context.Context) (resObj *WebApplicationSegment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebApplicationSegment
func (r *WebApplicationSegmentRequest) Update(ctx context.Context, reqObj *WebApplicationSegment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebApplicationSegment
func (r *WebApplicationSegmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebPartRequestBuilder is request builder for WebPart
type WebPartRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebPartRequest
func (b *WebPartRequestBuilder) Request() *WebPartRequest {
	return &WebPartRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebPartRequest is request for WebPart
type WebPartRequest struct{ BaseRequest }

// Get performs GET request for WebPart
func (r *WebPartRequest) Get(ctx context.Context) (resObj *WebPart, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebPart
func (r *WebPartRequest) Update(ctx context.Context, reqObj *WebPart) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebPart
func (r *WebPartRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebPartDataRequestBuilder is request builder for WebPartData
type WebPartDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebPartDataRequest
func (b *WebPartDataRequestBuilder) Request() *WebPartDataRequest {
	return &WebPartDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebPartDataRequest is request for WebPartData
type WebPartDataRequest struct{ BaseRequest }

// Get performs GET request for WebPartData
func (r *WebPartDataRequest) Get(ctx context.Context) (resObj *WebPartData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebPartData
func (r *WebPartDataRequest) Update(ctx context.Context, reqObj *WebPartData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebPartData
func (r *WebPartDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebPartPositionRequestBuilder is request builder for WebPartPosition
type WebPartPositionRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebPartPositionRequest
func (b *WebPartPositionRequestBuilder) Request() *WebPartPositionRequest {
	return &WebPartPositionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebPartPositionRequest is request for WebPartPosition
type WebPartPositionRequest struct{ BaseRequest }

// Get performs GET request for WebPartPosition
func (r *WebPartPositionRequest) Get(ctx context.Context) (resObj *WebPartPosition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebPartPosition
func (r *WebPartPositionRequest) Update(ctx context.Context, reqObj *WebPartPosition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebPartPosition
func (r *WebPartPositionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// WebSegmentConfigurationRequestBuilder is request builder for WebSegmentConfiguration
type WebSegmentConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns WebSegmentConfigurationRequest
func (b *WebSegmentConfigurationRequestBuilder) Request() *WebSegmentConfigurationRequest {
	return &WebSegmentConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WebSegmentConfigurationRequest is request for WebSegmentConfiguration
type WebSegmentConfigurationRequest struct{ BaseRequest }

// Get performs GET request for WebSegmentConfiguration
func (r *WebSegmentConfigurationRequest) Get(ctx context.Context) (resObj *WebSegmentConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WebSegmentConfiguration
func (r *WebSegmentConfigurationRequest) Update(ctx context.Context, reqObj *WebSegmentConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WebSegmentConfiguration
func (r *WebSegmentConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type WebPartGetPositionOfWebPartRequestBuilder struct{ BaseRequestBuilder }

// GetPositionOfWebPart action undocumentedras
func (b *WebPartRequestBuilder) GetPositionOfWebPart(reqObj *WebPartGetPositionOfWebPartRequestParameter) *WebPartGetPositionOfWebPartRequestBuilder {
	bb := &WebPartGetPositionOfWebPartRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetPositionOfWebPart"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type WebPartGetPositionOfWebPartRequest struct{ BaseRequest }

func (b *WebPartGetPositionOfWebPartRequestBuilder) Request() *WebPartGetPositionOfWebPartRequest {
	return &WebPartGetPositionOfWebPartRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *WebPartGetPositionOfWebPartRequest) Post(ctx context.Context) (resObj *WebPartPosition, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
