// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// SignInRequestBuilder is request builder for SignIn
type SignInRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInRequest
func (b *SignInRequestBuilder) Request() *SignInRequest {
	return &SignInRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInRequest is request for SignIn
type SignInRequest struct{ BaseRequest }

// Get performs GET request for SignIn
func (r *SignInRequest) Get(ctx context.Context) (resObj *SignIn, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignIn
func (r *SignInRequest) Update(ctx context.Context, reqObj *SignIn) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignIn
func (r *SignInRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SignInActivityRequestBuilder is request builder for SignInActivity
type SignInActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInActivityRequest
func (b *SignInActivityRequestBuilder) Request() *SignInActivityRequest {
	return &SignInActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInActivityRequest is request for SignInActivity
type SignInActivityRequest struct{ BaseRequest }

// Get performs GET request for SignInActivity
func (r *SignInActivityRequest) Get(ctx context.Context) (resObj *SignInActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignInActivity
func (r *SignInActivityRequest) Update(ctx context.Context, reqObj *SignInActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignInActivity
func (r *SignInActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SignInFrequencySessionControlRequestBuilder is request builder for SignInFrequencySessionControl
type SignInFrequencySessionControlRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInFrequencySessionControlRequest
func (b *SignInFrequencySessionControlRequestBuilder) Request() *SignInFrequencySessionControlRequest {
	return &SignInFrequencySessionControlRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInFrequencySessionControlRequest is request for SignInFrequencySessionControl
type SignInFrequencySessionControlRequest struct{ BaseRequest }

// Get performs GET request for SignInFrequencySessionControl
func (r *SignInFrequencySessionControlRequest) Get(ctx context.Context) (resObj *SignInFrequencySessionControl, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignInFrequencySessionControl
func (r *SignInFrequencySessionControlRequest) Update(ctx context.Context, reqObj *SignInFrequencySessionControl) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignInFrequencySessionControl
func (r *SignInFrequencySessionControlRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SignInLocationRequestBuilder is request builder for SignInLocation
type SignInLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInLocationRequest
func (b *SignInLocationRequestBuilder) Request() *SignInLocationRequest {
	return &SignInLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInLocationRequest is request for SignInLocation
type SignInLocationRequest struct{ BaseRequest }

// Get performs GET request for SignInLocation
func (r *SignInLocationRequest) Get(ctx context.Context) (resObj *SignInLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignInLocation
func (r *SignInLocationRequest) Update(ctx context.Context, reqObj *SignInLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignInLocation
func (r *SignInLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SignInPreferencesRequestBuilder is request builder for SignInPreferences
type SignInPreferencesRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInPreferencesRequest
func (b *SignInPreferencesRequestBuilder) Request() *SignInPreferencesRequest {
	return &SignInPreferencesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInPreferencesRequest is request for SignInPreferences
type SignInPreferencesRequest struct{ BaseRequest }

// Get performs GET request for SignInPreferences
func (r *SignInPreferencesRequest) Get(ctx context.Context) (resObj *SignInPreferences, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignInPreferences
func (r *SignInPreferencesRequest) Update(ctx context.Context, reqObj *SignInPreferences) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignInPreferences
func (r *SignInPreferencesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SignInStatusRequestBuilder is request builder for SignInStatus
type SignInStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns SignInStatusRequest
func (b *SignInStatusRequestBuilder) Request() *SignInStatusRequest {
	return &SignInStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SignInStatusRequest is request for SignInStatus
type SignInStatusRequest struct{ BaseRequest }

// Get performs GET request for SignInStatus
func (r *SignInStatusRequest) Get(ctx context.Context) (resObj *SignInStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SignInStatus
func (r *SignInStatusRequest) Update(ctx context.Context, reqObj *SignInStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SignInStatus
func (r *SignInStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type SignInCollectionConfirmCompromisedRequestBuilder struct{ BaseRequestBuilder }

// ConfirmCompromised action undocumentedrav
func (b *AuditLogRootSignInsCollectionRequestBuilder) ConfirmCompromised(reqObj *SignInCollectionConfirmCompromisedRequestParameter) *SignInCollectionConfirmCompromisedRequestBuilder {
	bb := &SignInCollectionConfirmCompromisedRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ConfirmCompromised"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SignInCollectionConfirmCompromisedRequest struct{ BaseRequest }

func (b *SignInCollectionConfirmCompromisedRequestBuilder) Request() *SignInCollectionConfirmCompromisedRequest {
	return &SignInCollectionConfirmCompromisedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SignInCollectionConfirmCompromisedRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SignInCollectionConfirmSafeRequestBuilder struct{ BaseRequestBuilder }

// ConfirmSafe action undocumentedrav
func (b *AuditLogRootSignInsCollectionRequestBuilder) ConfirmSafe(reqObj *SignInCollectionConfirmSafeRequestParameter) *SignInCollectionConfirmSafeRequestBuilder {
	bb := &SignInCollectionConfirmSafeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ConfirmSafe"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SignInCollectionConfirmSafeRequest struct{ BaseRequest }

func (b *SignInCollectionConfirmSafeRequestBuilder) Request() *SignInCollectionConfirmSafeRequest {
	return &SignInCollectionConfirmSafeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SignInCollectionConfirmSafeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
