// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// MobileAppRequestBuilder is request builder for MobileApp
type MobileAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppRequest
func (b *MobileAppRequestBuilder) Request() *MobileAppRequest {
	return &MobileAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppRequest is request for MobileApp
type MobileAppRequest struct{ BaseRequest }

// Get performs GET request for MobileApp
func (r *MobileAppRequest) Get(ctx context.Context) (resObj *MobileApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileApp
func (r *MobileAppRequest) Update(ctx context.Context, reqObj *MobileApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileApp
func (r *MobileAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppAssignmentRequestBuilder is request builder for MobileAppAssignment
type MobileAppAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppAssignmentRequest
func (b *MobileAppAssignmentRequestBuilder) Request() *MobileAppAssignmentRequest {
	return &MobileAppAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppAssignmentRequest is request for MobileAppAssignment
type MobileAppAssignmentRequest struct{ BaseRequest }

// Get performs GET request for MobileAppAssignment
func (r *MobileAppAssignmentRequest) Get(ctx context.Context) (resObj *MobileAppAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppAssignment
func (r *MobileAppAssignmentRequest) Update(ctx context.Context, reqObj *MobileAppAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppAssignment
func (r *MobileAppAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppAssignmentSettingsRequestBuilder is request builder for MobileAppAssignmentSettings
type MobileAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppAssignmentSettingsRequest
func (b *MobileAppAssignmentSettingsRequestBuilder) Request() *MobileAppAssignmentSettingsRequest {
	return &MobileAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppAssignmentSettingsRequest is request for MobileAppAssignmentSettings
type MobileAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for MobileAppAssignmentSettings
func (r *MobileAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *MobileAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppAssignmentSettings
func (r *MobileAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *MobileAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppAssignmentSettings
func (r *MobileAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppCategoryRequestBuilder is request builder for MobileAppCategory
type MobileAppCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppCategoryRequest
func (b *MobileAppCategoryRequestBuilder) Request() *MobileAppCategoryRequest {
	return &MobileAppCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppCategoryRequest is request for MobileAppCategory
type MobileAppCategoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppCategory
func (r *MobileAppCategoryRequest) Get(ctx context.Context) (resObj *MobileAppCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppCategory
func (r *MobileAppCategoryRequest) Update(ctx context.Context, reqObj *MobileAppCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppCategory
func (r *MobileAppCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppContentRequestBuilder is request builder for MobileAppContent
type MobileAppContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppContentRequest
func (b *MobileAppContentRequestBuilder) Request() *MobileAppContentRequest {
	return &MobileAppContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppContentRequest is request for MobileAppContent
type MobileAppContentRequest struct{ BaseRequest }

// Get performs GET request for MobileAppContent
func (r *MobileAppContentRequest) Get(ctx context.Context) (resObj *MobileAppContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppContent
func (r *MobileAppContentRequest) Update(ctx context.Context, reqObj *MobileAppContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppContent
func (r *MobileAppContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppContentFileRequestBuilder is request builder for MobileAppContentFile
type MobileAppContentFileRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppContentFileRequest
func (b *MobileAppContentFileRequestBuilder) Request() *MobileAppContentFileRequest {
	return &MobileAppContentFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppContentFileRequest is request for MobileAppContentFile
type MobileAppContentFileRequest struct{ BaseRequest }

// Get performs GET request for MobileAppContentFile
func (r *MobileAppContentFileRequest) Get(ctx context.Context) (resObj *MobileAppContentFile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppContentFile
func (r *MobileAppContentFileRequest) Update(ctx context.Context, reqObj *MobileAppContentFile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppContentFile
func (r *MobileAppContentFileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppDependencyRequestBuilder is request builder for MobileAppDependency
type MobileAppDependencyRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppDependencyRequest
func (b *MobileAppDependencyRequestBuilder) Request() *MobileAppDependencyRequest {
	return &MobileAppDependencyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppDependencyRequest is request for MobileAppDependency
type MobileAppDependencyRequest struct{ BaseRequest }

// Get performs GET request for MobileAppDependency
func (r *MobileAppDependencyRequest) Get(ctx context.Context) (resObj *MobileAppDependency, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppDependency
func (r *MobileAppDependencyRequest) Update(ctx context.Context, reqObj *MobileAppDependency) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppDependency
func (r *MobileAppDependencyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppIdentifierRequestBuilder is request builder for MobileAppIdentifier
type MobileAppIdentifierRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppIdentifierRequest
func (b *MobileAppIdentifierRequestBuilder) Request() *MobileAppIdentifierRequest {
	return &MobileAppIdentifierRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppIdentifierRequest is request for MobileAppIdentifier
type MobileAppIdentifierRequest struct{ BaseRequest }

// Get performs GET request for MobileAppIdentifier
func (r *MobileAppIdentifierRequest) Get(ctx context.Context) (resObj *MobileAppIdentifier, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppIdentifier
func (r *MobileAppIdentifierRequest) Update(ctx context.Context, reqObj *MobileAppIdentifier) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppIdentifier
func (r *MobileAppIdentifierRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppInstallStatusRequestBuilder is request builder for MobileAppInstallStatus
type MobileAppInstallStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppInstallStatusRequest
func (b *MobileAppInstallStatusRequestBuilder) Request() *MobileAppInstallStatusRequest {
	return &MobileAppInstallStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppInstallStatusRequest is request for MobileAppInstallStatus
type MobileAppInstallStatusRequest struct{ BaseRequest }

// Get performs GET request for MobileAppInstallStatus
func (r *MobileAppInstallStatusRequest) Get(ctx context.Context) (resObj *MobileAppInstallStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppInstallStatus
func (r *MobileAppInstallStatusRequest) Update(ctx context.Context, reqObj *MobileAppInstallStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppInstallStatus
func (r *MobileAppInstallStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppInstallSummaryRequestBuilder is request builder for MobileAppInstallSummary
type MobileAppInstallSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppInstallSummaryRequest
func (b *MobileAppInstallSummaryRequestBuilder) Request() *MobileAppInstallSummaryRequest {
	return &MobileAppInstallSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppInstallSummaryRequest is request for MobileAppInstallSummary
type MobileAppInstallSummaryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppInstallSummary
func (r *MobileAppInstallSummaryRequest) Get(ctx context.Context) (resObj *MobileAppInstallSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppInstallSummary
func (r *MobileAppInstallSummaryRequest) Update(ctx context.Context, reqObj *MobileAppInstallSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppInstallSummary
func (r *MobileAppInstallSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppInstallTimeSettingsRequestBuilder is request builder for MobileAppInstallTimeSettings
type MobileAppInstallTimeSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppInstallTimeSettingsRequest
func (b *MobileAppInstallTimeSettingsRequestBuilder) Request() *MobileAppInstallTimeSettingsRequest {
	return &MobileAppInstallTimeSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppInstallTimeSettingsRequest is request for MobileAppInstallTimeSettings
type MobileAppInstallTimeSettingsRequest struct{ BaseRequest }

// Get performs GET request for MobileAppInstallTimeSettings
func (r *MobileAppInstallTimeSettingsRequest) Get(ctx context.Context) (resObj *MobileAppInstallTimeSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppInstallTimeSettings
func (r *MobileAppInstallTimeSettingsRequest) Update(ctx context.Context, reqObj *MobileAppInstallTimeSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppInstallTimeSettings
func (r *MobileAppInstallTimeSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppIntentAndStateRequestBuilder is request builder for MobileAppIntentAndState
type MobileAppIntentAndStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppIntentAndStateRequest
func (b *MobileAppIntentAndStateRequestBuilder) Request() *MobileAppIntentAndStateRequest {
	return &MobileAppIntentAndStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppIntentAndStateRequest is request for MobileAppIntentAndState
type MobileAppIntentAndStateRequest struct{ BaseRequest }

// Get performs GET request for MobileAppIntentAndState
func (r *MobileAppIntentAndStateRequest) Get(ctx context.Context) (resObj *MobileAppIntentAndState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppIntentAndState
func (r *MobileAppIntentAndStateRequest) Update(ctx context.Context, reqObj *MobileAppIntentAndState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppIntentAndState
func (r *MobileAppIntentAndStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppIntentAndStateDetailRequestBuilder is request builder for MobileAppIntentAndStateDetail
type MobileAppIntentAndStateDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppIntentAndStateDetailRequest
func (b *MobileAppIntentAndStateDetailRequestBuilder) Request() *MobileAppIntentAndStateDetailRequest {
	return &MobileAppIntentAndStateDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppIntentAndStateDetailRequest is request for MobileAppIntentAndStateDetail
type MobileAppIntentAndStateDetailRequest struct{ BaseRequest }

// Get performs GET request for MobileAppIntentAndStateDetail
func (r *MobileAppIntentAndStateDetailRequest) Get(ctx context.Context) (resObj *MobileAppIntentAndStateDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppIntentAndStateDetail
func (r *MobileAppIntentAndStateDetailRequest) Update(ctx context.Context, reqObj *MobileAppIntentAndStateDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppIntentAndStateDetail
func (r *MobileAppIntentAndStateDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppPolicySetItemRequestBuilder is request builder for MobileAppPolicySetItem
type MobileAppPolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppPolicySetItemRequest
func (b *MobileAppPolicySetItemRequestBuilder) Request() *MobileAppPolicySetItemRequest {
	return &MobileAppPolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppPolicySetItemRequest is request for MobileAppPolicySetItem
type MobileAppPolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for MobileAppPolicySetItem
func (r *MobileAppPolicySetItemRequest) Get(ctx context.Context) (resObj *MobileAppPolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppPolicySetItem
func (r *MobileAppPolicySetItemRequest) Update(ctx context.Context, reqObj *MobileAppPolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppPolicySetItem
func (r *MobileAppPolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppProvisioningConfigGroupAssignmentRequestBuilder is request builder for MobileAppProvisioningConfigGroupAssignment
type MobileAppProvisioningConfigGroupAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppProvisioningConfigGroupAssignmentRequest
func (b *MobileAppProvisioningConfigGroupAssignmentRequestBuilder) Request() *MobileAppProvisioningConfigGroupAssignmentRequest {
	return &MobileAppProvisioningConfigGroupAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppProvisioningConfigGroupAssignmentRequest is request for MobileAppProvisioningConfigGroupAssignment
type MobileAppProvisioningConfigGroupAssignmentRequest struct{ BaseRequest }

// Get performs GET request for MobileAppProvisioningConfigGroupAssignment
func (r *MobileAppProvisioningConfigGroupAssignmentRequest) Get(ctx context.Context) (resObj *MobileAppProvisioningConfigGroupAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppProvisioningConfigGroupAssignment
func (r *MobileAppProvisioningConfigGroupAssignmentRequest) Update(ctx context.Context, reqObj *MobileAppProvisioningConfigGroupAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppProvisioningConfigGroupAssignment
func (r *MobileAppProvisioningConfigGroupAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppRelationshipRequestBuilder is request builder for MobileAppRelationship
type MobileAppRelationshipRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppRelationshipRequest
func (b *MobileAppRelationshipRequestBuilder) Request() *MobileAppRelationshipRequest {
	return &MobileAppRelationshipRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppRelationshipRequest is request for MobileAppRelationship
type MobileAppRelationshipRequest struct{ BaseRequest }

// Get performs GET request for MobileAppRelationship
func (r *MobileAppRelationshipRequest) Get(ctx context.Context) (resObj *MobileAppRelationship, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppRelationship
func (r *MobileAppRelationshipRequest) Update(ctx context.Context, reqObj *MobileAppRelationship) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppRelationship
func (r *MobileAppRelationshipRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppRelationshipStateRequestBuilder is request builder for MobileAppRelationshipState
type MobileAppRelationshipStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppRelationshipStateRequest
func (b *MobileAppRelationshipStateRequestBuilder) Request() *MobileAppRelationshipStateRequest {
	return &MobileAppRelationshipStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppRelationshipStateRequest is request for MobileAppRelationshipState
type MobileAppRelationshipStateRequest struct{ BaseRequest }

// Get performs GET request for MobileAppRelationshipState
func (r *MobileAppRelationshipStateRequest) Get(ctx context.Context) (resObj *MobileAppRelationshipState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppRelationshipState
func (r *MobileAppRelationshipStateRequest) Update(ctx context.Context, reqObj *MobileAppRelationshipState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppRelationshipState
func (r *MobileAppRelationshipStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppSupersedenceRequestBuilder is request builder for MobileAppSupersedence
type MobileAppSupersedenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppSupersedenceRequest
func (b *MobileAppSupersedenceRequestBuilder) Request() *MobileAppSupersedenceRequest {
	return &MobileAppSupersedenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppSupersedenceRequest is request for MobileAppSupersedence
type MobileAppSupersedenceRequest struct{ BaseRequest }

// Get performs GET request for MobileAppSupersedence
func (r *MobileAppSupersedenceRequest) Get(ctx context.Context) (resObj *MobileAppSupersedence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppSupersedence
func (r *MobileAppSupersedenceRequest) Update(ctx context.Context, reqObj *MobileAppSupersedence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppSupersedence
func (r *MobileAppSupersedenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppSupportedDeviceTypeRequestBuilder is request builder for MobileAppSupportedDeviceType
type MobileAppSupportedDeviceTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppSupportedDeviceTypeRequest
func (b *MobileAppSupportedDeviceTypeRequestBuilder) Request() *MobileAppSupportedDeviceTypeRequest {
	return &MobileAppSupportedDeviceTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppSupportedDeviceTypeRequest is request for MobileAppSupportedDeviceType
type MobileAppSupportedDeviceTypeRequest struct{ BaseRequest }

// Get performs GET request for MobileAppSupportedDeviceType
func (r *MobileAppSupportedDeviceTypeRequest) Get(ctx context.Context) (resObj *MobileAppSupportedDeviceType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppSupportedDeviceType
func (r *MobileAppSupportedDeviceTypeRequest) Update(ctx context.Context, reqObj *MobileAppSupportedDeviceType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppSupportedDeviceType
func (r *MobileAppSupportedDeviceTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingAppPolicyCreationHistoryRequestBuilder is request builder for MobileAppTroubleshootingAppPolicyCreationHistory
type MobileAppTroubleshootingAppPolicyCreationHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingAppPolicyCreationHistoryRequest
func (b *MobileAppTroubleshootingAppPolicyCreationHistoryRequestBuilder) Request() *MobileAppTroubleshootingAppPolicyCreationHistoryRequest {
	return &MobileAppTroubleshootingAppPolicyCreationHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingAppPolicyCreationHistoryRequest is request for MobileAppTroubleshootingAppPolicyCreationHistory
type MobileAppTroubleshootingAppPolicyCreationHistoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingAppPolicyCreationHistory
func (r *MobileAppTroubleshootingAppPolicyCreationHistoryRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingAppPolicyCreationHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingAppPolicyCreationHistory
func (r *MobileAppTroubleshootingAppPolicyCreationHistoryRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingAppPolicyCreationHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingAppPolicyCreationHistory
func (r *MobileAppTroubleshootingAppPolicyCreationHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingAppStateHistoryRequestBuilder is request builder for MobileAppTroubleshootingAppStateHistory
type MobileAppTroubleshootingAppStateHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingAppStateHistoryRequest
func (b *MobileAppTroubleshootingAppStateHistoryRequestBuilder) Request() *MobileAppTroubleshootingAppStateHistoryRequest {
	return &MobileAppTroubleshootingAppStateHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingAppStateHistoryRequest is request for MobileAppTroubleshootingAppStateHistory
type MobileAppTroubleshootingAppStateHistoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingAppStateHistory
func (r *MobileAppTroubleshootingAppStateHistoryRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingAppStateHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingAppStateHistory
func (r *MobileAppTroubleshootingAppStateHistoryRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingAppStateHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingAppStateHistory
func (r *MobileAppTroubleshootingAppStateHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingAppTargetHistoryRequestBuilder is request builder for MobileAppTroubleshootingAppTargetHistory
type MobileAppTroubleshootingAppTargetHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingAppTargetHistoryRequest
func (b *MobileAppTroubleshootingAppTargetHistoryRequestBuilder) Request() *MobileAppTroubleshootingAppTargetHistoryRequest {
	return &MobileAppTroubleshootingAppTargetHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingAppTargetHistoryRequest is request for MobileAppTroubleshootingAppTargetHistory
type MobileAppTroubleshootingAppTargetHistoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingAppTargetHistory
func (r *MobileAppTroubleshootingAppTargetHistoryRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingAppTargetHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingAppTargetHistory
func (r *MobileAppTroubleshootingAppTargetHistoryRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingAppTargetHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingAppTargetHistory
func (r *MobileAppTroubleshootingAppTargetHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingAppUpdateHistoryRequestBuilder is request builder for MobileAppTroubleshootingAppUpdateHistory
type MobileAppTroubleshootingAppUpdateHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingAppUpdateHistoryRequest
func (b *MobileAppTroubleshootingAppUpdateHistoryRequestBuilder) Request() *MobileAppTroubleshootingAppUpdateHistoryRequest {
	return &MobileAppTroubleshootingAppUpdateHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingAppUpdateHistoryRequest is request for MobileAppTroubleshootingAppUpdateHistory
type MobileAppTroubleshootingAppUpdateHistoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingAppUpdateHistory
func (r *MobileAppTroubleshootingAppUpdateHistoryRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingAppUpdateHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingAppUpdateHistory
func (r *MobileAppTroubleshootingAppUpdateHistoryRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingAppUpdateHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingAppUpdateHistory
func (r *MobileAppTroubleshootingAppUpdateHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingDeviceCheckinHistoryRequestBuilder is request builder for MobileAppTroubleshootingDeviceCheckinHistory
type MobileAppTroubleshootingDeviceCheckinHistoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingDeviceCheckinHistoryRequest
func (b *MobileAppTroubleshootingDeviceCheckinHistoryRequestBuilder) Request() *MobileAppTroubleshootingDeviceCheckinHistoryRequest {
	return &MobileAppTroubleshootingDeviceCheckinHistoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingDeviceCheckinHistoryRequest is request for MobileAppTroubleshootingDeviceCheckinHistory
type MobileAppTroubleshootingDeviceCheckinHistoryRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingDeviceCheckinHistory
func (r *MobileAppTroubleshootingDeviceCheckinHistoryRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingDeviceCheckinHistory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingDeviceCheckinHistory
func (r *MobileAppTroubleshootingDeviceCheckinHistoryRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingDeviceCheckinHistory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingDeviceCheckinHistory
func (r *MobileAppTroubleshootingDeviceCheckinHistoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingEventRequestBuilder is request builder for MobileAppTroubleshootingEvent
type MobileAppTroubleshootingEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingEventRequest
func (b *MobileAppTroubleshootingEventRequestBuilder) Request() *MobileAppTroubleshootingEventRequest {
	return &MobileAppTroubleshootingEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingEventRequest is request for MobileAppTroubleshootingEvent
type MobileAppTroubleshootingEventRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingEvent
func (r *MobileAppTroubleshootingEventRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingEvent
func (r *MobileAppTroubleshootingEventRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingEvent
func (r *MobileAppTroubleshootingEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileAppTroubleshootingHistoryItemRequestBuilder is request builder for MobileAppTroubleshootingHistoryItem
type MobileAppTroubleshootingHistoryItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileAppTroubleshootingHistoryItemRequest
func (b *MobileAppTroubleshootingHistoryItemRequestBuilder) Request() *MobileAppTroubleshootingHistoryItemRequest {
	return &MobileAppTroubleshootingHistoryItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileAppTroubleshootingHistoryItemRequest is request for MobileAppTroubleshootingHistoryItem
type MobileAppTroubleshootingHistoryItemRequest struct{ BaseRequest }

// Get performs GET request for MobileAppTroubleshootingHistoryItem
func (r *MobileAppTroubleshootingHistoryItemRequest) Get(ctx context.Context) (resObj *MobileAppTroubleshootingHistoryItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileAppTroubleshootingHistoryItem
func (r *MobileAppTroubleshootingHistoryItemRequest) Update(ctx context.Context, reqObj *MobileAppTroubleshootingHistoryItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileAppTroubleshootingHistoryItem
func (r *MobileAppTroubleshootingHistoryItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileContainedAppRequestBuilder is request builder for MobileContainedApp
type MobileContainedAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileContainedAppRequest
func (b *MobileContainedAppRequestBuilder) Request() *MobileContainedAppRequest {
	return &MobileContainedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileContainedAppRequest is request for MobileContainedApp
type MobileContainedAppRequest struct{ BaseRequest }

// Get performs GET request for MobileContainedApp
func (r *MobileContainedAppRequest) Get(ctx context.Context) (resObj *MobileContainedApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileContainedApp
func (r *MobileContainedAppRequest) Update(ctx context.Context, reqObj *MobileContainedApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileContainedApp
func (r *MobileContainedAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileLobAppRequestBuilder is request builder for MobileLobApp
type MobileLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileLobAppRequest
func (b *MobileLobAppRequestBuilder) Request() *MobileLobAppRequest {
	return &MobileLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileLobAppRequest is request for MobileLobApp
type MobileLobAppRequest struct{ BaseRequest }

// Get performs GET request for MobileLobApp
func (r *MobileLobAppRequest) Get(ctx context.Context) (resObj *MobileLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileLobApp
func (r *MobileLobAppRequest) Update(ctx context.Context, reqObj *MobileLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileLobApp
func (r *MobileLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MobileThreatDefenseConnectorRequestBuilder is request builder for MobileThreatDefenseConnector
type MobileThreatDefenseConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns MobileThreatDefenseConnectorRequest
func (b *MobileThreatDefenseConnectorRequestBuilder) Request() *MobileThreatDefenseConnectorRequest {
	return &MobileThreatDefenseConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MobileThreatDefenseConnectorRequest is request for MobileThreatDefenseConnector
type MobileThreatDefenseConnectorRequest struct{ BaseRequest }

// Get performs GET request for MobileThreatDefenseConnector
func (r *MobileThreatDefenseConnectorRequest) Get(ctx context.Context) (resObj *MobileThreatDefenseConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MobileThreatDefenseConnector
func (r *MobileThreatDefenseConnectorRequest) Update(ctx context.Context, reqObj *MobileThreatDefenseConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MobileThreatDefenseConnector
func (r *MobileThreatDefenseConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type MobileAppCollectionValidateXMLRequestBuilder struct{ BaseRequestBuilder }

// ValidateXML action undocumentedras
func (b *DeviceAppManagementMobileAppsCollectionRequestBuilder) ValidateXML(reqObj *MobileAppCollectionValidateXMLRequestParameter) *MobileAppCollectionValidateXMLRequestBuilder {
	bb := &MobileAppCollectionValidateXMLRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateXml"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppCollectionValidateXMLRequest struct{ BaseRequest }

func (b *MobileAppCollectionValidateXMLRequestBuilder) Request() *MobileAppCollectionValidateXMLRequest {
	return &MobileAppCollectionValidateXMLRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppCollectionValidateXMLRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type MobileAppCollectionHasPayloadLinksRequestBuilder struct{ BaseRequestBuilder }

// HasPayloadLinks action undocumentedrac
func (b *DeviceAppManagementMobileAppsCollectionRequestBuilder) HasPayloadLinks(reqObj *MobileAppCollectionHasPayloadLinksRequestParameter) *MobileAppCollectionHasPayloadLinksRequestBuilder {
	bb := &MobileAppCollectionHasPayloadLinksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/HasPayloadLinks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppCollectionHasPayloadLinksRequest struct{ BaseRequest }

func (b *MobileAppCollectionHasPayloadLinksRequestBuilder) Request() *MobileAppCollectionHasPayloadLinksRequest {
	return &MobileAppCollectionHasPayloadLinksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppCollectionHasPayloadLinksRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]HasPayloadLinkResultItem, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []HasPayloadLinkResultItem
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []HasPayloadLinkResultItem
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *MobileAppCollectionHasPayloadLinksRequest) PostN(ctx context.Context, n int) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *MobileAppCollectionHasPayloadLinksRequest) Post(ctx context.Context) ([]HasPayloadLinkResultItem, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type MobileAppAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumentedrav
func (b *MobileAppRequestBuilder) Assign(reqObj *MobileAppAssignRequestParameter) *MobileAppAssignRequestBuilder {
	bb := &MobileAppAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppAssignRequest struct{ BaseRequest }

func (b *MobileAppAssignRequestBuilder) Request() *MobileAppAssignRequest {
	return &MobileAppAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type MobileAppUpdateRelationshipsRequestBuilder struct{ BaseRequestBuilder }

// UpdateRelationships action undocumentedrav
func (b *MobileAppRequestBuilder) UpdateRelationships(reqObj *MobileAppUpdateRelationshipsRequestParameter) *MobileAppUpdateRelationshipsRequestBuilder {
	bb := &MobileAppUpdateRelationshipsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UpdateRelationships"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppUpdateRelationshipsRequest struct{ BaseRequest }

func (b *MobileAppUpdateRelationshipsRequestBuilder) Request() *MobileAppUpdateRelationshipsRequest {
	return &MobileAppUpdateRelationshipsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppUpdateRelationshipsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type MobileAppContentFileCommitRequestBuilder struct{ BaseRequestBuilder }

// Commit action undocumentedrav
func (b *MobileAppContentFileRequestBuilder) Commit(reqObj *MobileAppContentFileCommitRequestParameter) *MobileAppContentFileCommitRequestBuilder {
	bb := &MobileAppContentFileCommitRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Commit"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppContentFileCommitRequest struct{ BaseRequest }

func (b *MobileAppContentFileCommitRequestBuilder) Request() *MobileAppContentFileCommitRequest {
	return &MobileAppContentFileCommitRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppContentFileCommitRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type MobileAppContentFileRenewUploadRequestBuilder struct{ BaseRequestBuilder }

// RenewUpload action undocumentedrav
func (b *MobileAppContentFileRequestBuilder) RenewUpload(reqObj *MobileAppContentFileRenewUploadRequestParameter) *MobileAppContentFileRenewUploadRequestBuilder {
	bb := &MobileAppContentFileRenewUploadRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/RenewUpload"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type MobileAppContentFileRenewUploadRequest struct{ BaseRequest }

func (b *MobileAppContentFileRenewUploadRequestBuilder) Request() *MobileAppContentFileRenewUploadRequest {
	return &MobileAppContentFileRenewUploadRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *MobileAppContentFileRenewUploadRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
