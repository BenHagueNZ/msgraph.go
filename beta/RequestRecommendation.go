// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// RecommendationRequestBuilder is request builder for Recommendation
type RecommendationRequestBuilder struct{ BaseRequestBuilder }

// Request returns RecommendationRequest
func (b *RecommendationRequestBuilder) Request() *RecommendationRequest {
	return &RecommendationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RecommendationRequest is request for Recommendation
type RecommendationRequest struct{ BaseRequest }

// Get performs GET request for Recommendation
func (r *RecommendationRequest) Get(ctx context.Context) (resObj *Recommendation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Recommendation
func (r *RecommendationRequest) Update(ctx context.Context, reqObj *Recommendation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Recommendation
func (r *RecommendationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// RecommendationBaseRequestBuilder is request builder for RecommendationBase
type RecommendationBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns RecommendationBaseRequest
func (b *RecommendationBaseRequestBuilder) Request() *RecommendationBaseRequest {
	return &RecommendationBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RecommendationBaseRequest is request for RecommendationBase
type RecommendationBaseRequest struct{ BaseRequest }

// Get performs GET request for RecommendationBase
func (r *RecommendationBaseRequest) Get(ctx context.Context) (resObj *RecommendationBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RecommendationBase
func (r *RecommendationBaseRequest) Update(ctx context.Context, reqObj *RecommendationBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RecommendationBase
func (r *RecommendationBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type RecommendationCompleteRequestBuilder struct{ BaseRequestBuilder }

// Complete action undocumentedras
func (b *RecommendationRequestBuilder) Complete(reqObj *RecommendationCompleteRequestParameter) *RecommendationCompleteRequestBuilder {
	bb := &RecommendationCompleteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Complete"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type RecommendationCompleteRequest struct{ BaseRequest }

func (b *RecommendationCompleteRequestBuilder) Request() *RecommendationCompleteRequest {
	return &RecommendationCompleteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *RecommendationCompleteRequest) Post(ctx context.Context) (resObj *Recommendation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type RecommendationDismissRequestBuilder struct{ BaseRequestBuilder }

// Dismiss action undocumentedras
func (b *RecommendationRequestBuilder) Dismiss(reqObj *RecommendationDismissRequestParameter) *RecommendationDismissRequestBuilder {
	bb := &RecommendationDismissRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Dismiss"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type RecommendationDismissRequest struct{ BaseRequest }

func (b *RecommendationDismissRequestBuilder) Request() *RecommendationDismissRequest {
	return &RecommendationDismissRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *RecommendationDismissRequest) Post(ctx context.Context) (resObj *Recommendation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type RecommendationPostponeRequestBuilder struct{ BaseRequestBuilder }

// Postpone action undocumentedras
func (b *RecommendationRequestBuilder) Postpone(reqObj *RecommendationPostponeRequestParameter) *RecommendationPostponeRequestBuilder {
	bb := &RecommendationPostponeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Postpone"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type RecommendationPostponeRequest struct{ BaseRequest }

func (b *RecommendationPostponeRequestBuilder) Request() *RecommendationPostponeRequest {
	return &RecommendationPostponeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *RecommendationPostponeRequest) Post(ctx context.Context) (resObj *Recommendation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type RecommendationReactivateRequestBuilder struct{ BaseRequestBuilder }

// Reactivate action undocumentedras
func (b *RecommendationRequestBuilder) Reactivate(reqObj *RecommendationReactivateRequestParameter) *RecommendationReactivateRequestBuilder {
	bb := &RecommendationReactivateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Reactivate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type RecommendationReactivateRequest struct{ BaseRequest }

func (b *RecommendationReactivateRequestBuilder) Request() *RecommendationReactivateRequest {
	return &RecommendationReactivateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *RecommendationReactivateRequest) Post(ctx context.Context) (resObj *Recommendation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
