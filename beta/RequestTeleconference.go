// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// TeleconferenceDeviceAudioQualityRequestBuilder is request builder for TeleconferenceDeviceAudioQuality
type TeleconferenceDeviceAudioQualityRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeleconferenceDeviceAudioQualityRequest
func (b *TeleconferenceDeviceAudioQualityRequestBuilder) Request() *TeleconferenceDeviceAudioQualityRequest {
	return &TeleconferenceDeviceAudioQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeleconferenceDeviceAudioQualityRequest is request for TeleconferenceDeviceAudioQuality
type TeleconferenceDeviceAudioQualityRequest struct{ BaseRequest }

// Get performs GET request for TeleconferenceDeviceAudioQuality
func (r *TeleconferenceDeviceAudioQualityRequest) Get(ctx context.Context) (resObj *TeleconferenceDeviceAudioQuality, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeleconferenceDeviceAudioQuality
func (r *TeleconferenceDeviceAudioQualityRequest) Update(ctx context.Context, reqObj *TeleconferenceDeviceAudioQuality) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeleconferenceDeviceAudioQuality
func (r *TeleconferenceDeviceAudioQualityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TeleconferenceDeviceMediaQualityRequestBuilder is request builder for TeleconferenceDeviceMediaQuality
type TeleconferenceDeviceMediaQualityRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeleconferenceDeviceMediaQualityRequest
func (b *TeleconferenceDeviceMediaQualityRequestBuilder) Request() *TeleconferenceDeviceMediaQualityRequest {
	return &TeleconferenceDeviceMediaQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeleconferenceDeviceMediaQualityRequest is request for TeleconferenceDeviceMediaQuality
type TeleconferenceDeviceMediaQualityRequest struct{ BaseRequest }

// Get performs GET request for TeleconferenceDeviceMediaQuality
func (r *TeleconferenceDeviceMediaQualityRequest) Get(ctx context.Context) (resObj *TeleconferenceDeviceMediaQuality, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeleconferenceDeviceMediaQuality
func (r *TeleconferenceDeviceMediaQualityRequest) Update(ctx context.Context, reqObj *TeleconferenceDeviceMediaQuality) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeleconferenceDeviceMediaQuality
func (r *TeleconferenceDeviceMediaQualityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TeleconferenceDeviceQualityRequestBuilder is request builder for TeleconferenceDeviceQuality
type TeleconferenceDeviceQualityRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeleconferenceDeviceQualityRequest
func (b *TeleconferenceDeviceQualityRequestBuilder) Request() *TeleconferenceDeviceQualityRequest {
	return &TeleconferenceDeviceQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeleconferenceDeviceQualityRequest is request for TeleconferenceDeviceQuality
type TeleconferenceDeviceQualityRequest struct{ BaseRequest }

// Get performs GET request for TeleconferenceDeviceQuality
func (r *TeleconferenceDeviceQualityRequest) Get(ctx context.Context) (resObj *TeleconferenceDeviceQuality, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeleconferenceDeviceQuality
func (r *TeleconferenceDeviceQualityRequest) Update(ctx context.Context, reqObj *TeleconferenceDeviceQuality) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeleconferenceDeviceQuality
func (r *TeleconferenceDeviceQualityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TeleconferenceDeviceScreenSharingQualityRequestBuilder is request builder for TeleconferenceDeviceScreenSharingQuality
type TeleconferenceDeviceScreenSharingQualityRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeleconferenceDeviceScreenSharingQualityRequest
func (b *TeleconferenceDeviceScreenSharingQualityRequestBuilder) Request() *TeleconferenceDeviceScreenSharingQualityRequest {
	return &TeleconferenceDeviceScreenSharingQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeleconferenceDeviceScreenSharingQualityRequest is request for TeleconferenceDeviceScreenSharingQuality
type TeleconferenceDeviceScreenSharingQualityRequest struct{ BaseRequest }

// Get performs GET request for TeleconferenceDeviceScreenSharingQuality
func (r *TeleconferenceDeviceScreenSharingQualityRequest) Get(ctx context.Context) (resObj *TeleconferenceDeviceScreenSharingQuality, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeleconferenceDeviceScreenSharingQuality
func (r *TeleconferenceDeviceScreenSharingQualityRequest) Update(ctx context.Context, reqObj *TeleconferenceDeviceScreenSharingQuality) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeleconferenceDeviceScreenSharingQuality
func (r *TeleconferenceDeviceScreenSharingQualityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TeleconferenceDeviceVideoQualityRequestBuilder is request builder for TeleconferenceDeviceVideoQuality
type TeleconferenceDeviceVideoQualityRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeleconferenceDeviceVideoQualityRequest
func (b *TeleconferenceDeviceVideoQualityRequestBuilder) Request() *TeleconferenceDeviceVideoQualityRequest {
	return &TeleconferenceDeviceVideoQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeleconferenceDeviceVideoQualityRequest is request for TeleconferenceDeviceVideoQuality
type TeleconferenceDeviceVideoQualityRequest struct{ BaseRequest }

// Get performs GET request for TeleconferenceDeviceVideoQuality
func (r *TeleconferenceDeviceVideoQualityRequest) Get(ctx context.Context) (resObj *TeleconferenceDeviceVideoQuality, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeleconferenceDeviceVideoQuality
func (r *TeleconferenceDeviceVideoQualityRequest) Update(ctx context.Context, reqObj *TeleconferenceDeviceVideoQuality) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeleconferenceDeviceVideoQuality
func (r *TeleconferenceDeviceVideoQualityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
