// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// AddContentFooterActionRequestBuilder is request builder for AddContentFooterAction
type AddContentFooterActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddContentFooterActionRequest
func (b *AddContentFooterActionRequestBuilder) Request() *AddContentFooterActionRequest {
	return &AddContentFooterActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddContentFooterActionRequest is request for AddContentFooterAction
type AddContentFooterActionRequest struct{ BaseRequest }

// Get performs GET request for AddContentFooterAction
func (r *AddContentFooterActionRequest) Get(ctx context.Context) (resObj *AddContentFooterAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddContentFooterAction
func (r *AddContentFooterActionRequest) Update(ctx context.Context, reqObj *AddContentFooterAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddContentFooterAction
func (r *AddContentFooterActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddContentHeaderActionRequestBuilder is request builder for AddContentHeaderAction
type AddContentHeaderActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddContentHeaderActionRequest
func (b *AddContentHeaderActionRequestBuilder) Request() *AddContentHeaderActionRequest {
	return &AddContentHeaderActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddContentHeaderActionRequest is request for AddContentHeaderAction
type AddContentHeaderActionRequest struct{ BaseRequest }

// Get performs GET request for AddContentHeaderAction
func (r *AddContentHeaderActionRequest) Get(ctx context.Context) (resObj *AddContentHeaderAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddContentHeaderAction
func (r *AddContentHeaderActionRequest) Update(ctx context.Context, reqObj *AddContentHeaderAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddContentHeaderAction
func (r *AddContentHeaderActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddFooterRequestBuilder is request builder for AddFooter
type AddFooterRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddFooterRequest
func (b *AddFooterRequestBuilder) Request() *AddFooterRequest {
	return &AddFooterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddFooterRequest is request for AddFooter
type AddFooterRequest struct{ BaseRequest }

// Get performs GET request for AddFooter
func (r *AddFooterRequest) Get(ctx context.Context) (resObj *AddFooter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddFooter
func (r *AddFooterRequest) Update(ctx context.Context, reqObj *AddFooter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddFooter
func (r *AddFooterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddHeaderRequestBuilder is request builder for AddHeader
type AddHeaderRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddHeaderRequest
func (b *AddHeaderRequestBuilder) Request() *AddHeaderRequest {
	return &AddHeaderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddHeaderRequest is request for AddHeader
type AddHeaderRequest struct{ BaseRequest }

// Get performs GET request for AddHeader
func (r *AddHeaderRequest) Get(ctx context.Context) (resObj *AddHeader, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddHeader
func (r *AddHeaderRequest) Update(ctx context.Context, reqObj *AddHeader) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddHeader
func (r *AddHeaderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddInRequestBuilder is request builder for AddIn
type AddInRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddInRequest
func (b *AddInRequestBuilder) Request() *AddInRequest {
	return &AddInRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddInRequest is request for AddIn
type AddInRequest struct{ BaseRequest }

// Get performs GET request for AddIn
func (r *AddInRequest) Get(ctx context.Context) (resObj *AddIn, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddIn
func (r *AddInRequest) Update(ctx context.Context, reqObj *AddIn) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddIn
func (r *AddInRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddLargeGalleryViewOperationRequestBuilder is request builder for AddLargeGalleryViewOperation
type AddLargeGalleryViewOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddLargeGalleryViewOperationRequest
func (b *AddLargeGalleryViewOperationRequestBuilder) Request() *AddLargeGalleryViewOperationRequest {
	return &AddLargeGalleryViewOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddLargeGalleryViewOperationRequest is request for AddLargeGalleryViewOperation
type AddLargeGalleryViewOperationRequest struct{ BaseRequest }

// Get performs GET request for AddLargeGalleryViewOperation
func (r *AddLargeGalleryViewOperationRequest) Get(ctx context.Context) (resObj *AddLargeGalleryViewOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddLargeGalleryViewOperation
func (r *AddLargeGalleryViewOperationRequest) Update(ctx context.Context, reqObj *AddLargeGalleryViewOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddLargeGalleryViewOperation
func (r *AddLargeGalleryViewOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddWatermarkRequestBuilder is request builder for AddWatermark
type AddWatermarkRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddWatermarkRequest
func (b *AddWatermarkRequestBuilder) Request() *AddWatermarkRequest {
	return &AddWatermarkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddWatermarkRequest is request for AddWatermark
type AddWatermarkRequest struct{ BaseRequest }

// Get performs GET request for AddWatermark
func (r *AddWatermarkRequest) Get(ctx context.Context) (resObj *AddWatermark, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddWatermark
func (r *AddWatermarkRequest) Update(ctx context.Context, reqObj *AddWatermark) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddWatermark
func (r *AddWatermarkRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AddWatermarkActionRequestBuilder is request builder for AddWatermarkAction
type AddWatermarkActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns AddWatermarkActionRequest
func (b *AddWatermarkActionRequestBuilder) Request() *AddWatermarkActionRequest {
	return &AddWatermarkActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AddWatermarkActionRequest is request for AddWatermarkAction
type AddWatermarkActionRequest struct{ BaseRequest }

// Get performs GET request for AddWatermarkAction
func (r *AddWatermarkActionRequest) Get(ctx context.Context) (resObj *AddWatermarkAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AddWatermarkAction
func (r *AddWatermarkActionRequest) Update(ctx context.Context, reqObj *AddWatermarkAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AddWatermarkAction
func (r *AddWatermarkActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
