// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// DetectedAppRequestBuilder is request builder for DetectedApp
type DetectedAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns DetectedAppRequest
func (b *DetectedAppRequestBuilder) Request() *DetectedAppRequest {
	return &DetectedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DetectedAppRequest is request for DetectedApp
type DetectedAppRequest struct{ BaseRequest }

// Get performs GET request for DetectedApp
func (r *DetectedAppRequest) Get(ctx context.Context) (resObj *DetectedApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DetectedApp
func (r *DetectedAppRequest) Update(ctx context.Context, reqObj *DetectedApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DetectedApp
func (r *DetectedAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DetectedSensitiveContentRequestBuilder is request builder for DetectedSensitiveContent
type DetectedSensitiveContentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DetectedSensitiveContentRequest
func (b *DetectedSensitiveContentRequestBuilder) Request() *DetectedSensitiveContentRequest {
	return &DetectedSensitiveContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DetectedSensitiveContentRequest is request for DetectedSensitiveContent
type DetectedSensitiveContentRequest struct{ BaseRequest }

// Get performs GET request for DetectedSensitiveContent
func (r *DetectedSensitiveContentRequest) Get(ctx context.Context) (resObj *DetectedSensitiveContent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DetectedSensitiveContent
func (r *DetectedSensitiveContentRequest) Update(ctx context.Context, reqObj *DetectedSensitiveContent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DetectedSensitiveContent
func (r *DetectedSensitiveContentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DetectedSensitiveContentBaseRequestBuilder is request builder for DetectedSensitiveContentBase
type DetectedSensitiveContentBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns DetectedSensitiveContentBaseRequest
func (b *DetectedSensitiveContentBaseRequestBuilder) Request() *DetectedSensitiveContentBaseRequest {
	return &DetectedSensitiveContentBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DetectedSensitiveContentBaseRequest is request for DetectedSensitiveContentBase
type DetectedSensitiveContentBaseRequest struct{ BaseRequest }

// Get performs GET request for DetectedSensitiveContentBase
func (r *DetectedSensitiveContentBaseRequest) Get(ctx context.Context) (resObj *DetectedSensitiveContentBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DetectedSensitiveContentBase
func (r *DetectedSensitiveContentBaseRequest) Update(ctx context.Context, reqObj *DetectedSensitiveContentBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DetectedSensitiveContentBase
func (r *DetectedSensitiveContentBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DetectedSensitiveContentWrapperRequestBuilder is request builder for DetectedSensitiveContentWrapper
type DetectedSensitiveContentWrapperRequestBuilder struct{ BaseRequestBuilder }

// Request returns DetectedSensitiveContentWrapperRequest
func (b *DetectedSensitiveContentWrapperRequestBuilder) Request() *DetectedSensitiveContentWrapperRequest {
	return &DetectedSensitiveContentWrapperRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DetectedSensitiveContentWrapperRequest is request for DetectedSensitiveContentWrapper
type DetectedSensitiveContentWrapperRequest struct{ BaseRequest }

// Get performs GET request for DetectedSensitiveContentWrapper
func (r *DetectedSensitiveContentWrapperRequest) Get(ctx context.Context) (resObj *DetectedSensitiveContentWrapper, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DetectedSensitiveContentWrapper
func (r *DetectedSensitiveContentWrapperRequest) Update(ctx context.Context, reqObj *DetectedSensitiveContentWrapper) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DetectedSensitiveContentWrapper
func (r *DetectedSensitiveContentWrapperRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
