// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// TranslationLanguageOverrideRequestBuilder is request builder for TranslationLanguageOverride
type TranslationLanguageOverrideRequestBuilder struct{ BaseRequestBuilder }

// Request returns TranslationLanguageOverrideRequest
func (b *TranslationLanguageOverrideRequestBuilder) Request() *TranslationLanguageOverrideRequest {
	return &TranslationLanguageOverrideRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TranslationLanguageOverrideRequest is request for TranslationLanguageOverride
type TranslationLanguageOverrideRequest struct{ BaseRequest }

// Get performs GET request for TranslationLanguageOverride
func (r *TranslationLanguageOverrideRequest) Get(ctx context.Context) (resObj *TranslationLanguageOverride, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TranslationLanguageOverride
func (r *TranslationLanguageOverrideRequest) Update(ctx context.Context, reqObj *TranslationLanguageOverride) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TranslationLanguageOverride
func (r *TranslationLanguageOverrideRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TranslationPreferencesRequestBuilder is request builder for TranslationPreferences
type TranslationPreferencesRequestBuilder struct{ BaseRequestBuilder }

// Request returns TranslationPreferencesRequest
func (b *TranslationPreferencesRequestBuilder) Request() *TranslationPreferencesRequest {
	return &TranslationPreferencesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TranslationPreferencesRequest is request for TranslationPreferences
type TranslationPreferencesRequest struct{ BaseRequest }

// Get performs GET request for TranslationPreferences
func (r *TranslationPreferencesRequest) Get(ctx context.Context) (resObj *TranslationPreferences, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TranslationPreferences
func (r *TranslationPreferencesRequest) Update(ctx context.Context, reqObj *TranslationPreferences) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TranslationPreferences
func (r *TranslationPreferencesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
