// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// OutOfBoxExperienceSettingsRequestBuilder is request builder for OutOfBoxExperienceSettings
type OutOfBoxExperienceSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns OutOfBoxExperienceSettingsRequest
func (b *OutOfBoxExperienceSettingsRequestBuilder) Request() *OutOfBoxExperienceSettingsRequest {
	return &OutOfBoxExperienceSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OutOfBoxExperienceSettingsRequest is request for OutOfBoxExperienceSettings
type OutOfBoxExperienceSettingsRequest struct{ BaseRequest }

// Get performs GET request for OutOfBoxExperienceSettings
func (r *OutOfBoxExperienceSettingsRequest) Get(ctx context.Context) (resObj *OutOfBoxExperienceSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OutOfBoxExperienceSettings
func (r *OutOfBoxExperienceSettingsRequest) Update(ctx context.Context, reqObj *OutOfBoxExperienceSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OutOfBoxExperienceSettings
func (r *OutOfBoxExperienceSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// OutOfOfficeSettingsRequestBuilder is request builder for OutOfOfficeSettings
type OutOfOfficeSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns OutOfOfficeSettingsRequest
func (b *OutOfOfficeSettingsRequestBuilder) Request() *OutOfOfficeSettingsRequest {
	return &OutOfOfficeSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OutOfOfficeSettingsRequest is request for OutOfOfficeSettings
type OutOfOfficeSettingsRequest struct{ BaseRequest }

// Get performs GET request for OutOfOfficeSettings
func (r *OutOfOfficeSettingsRequest) Get(ctx context.Context) (resObj *OutOfOfficeSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OutOfOfficeSettings
func (r *OutOfOfficeSettingsRequest) Update(ctx context.Context, reqObj *OutOfOfficeSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OutOfOfficeSettings
func (r *OutOfOfficeSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
