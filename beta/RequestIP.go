// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IPApplicationSegmentRequestBuilder is request builder for IPApplicationSegment
type IPApplicationSegmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPApplicationSegmentRequest
func (b *IPApplicationSegmentRequestBuilder) Request() *IPApplicationSegmentRequest {
	return &IPApplicationSegmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPApplicationSegmentRequest is request for IPApplicationSegment
type IPApplicationSegmentRequest struct{ BaseRequest }

// Get performs GET request for IPApplicationSegment
func (r *IPApplicationSegmentRequest) Get(ctx context.Context) (resObj *IPApplicationSegment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPApplicationSegment
func (r *IPApplicationSegmentRequest) Update(ctx context.Context, reqObj *IPApplicationSegment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPApplicationSegment
func (r *IPApplicationSegmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPCategoryRequestBuilder is request builder for IPCategory
type IPCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPCategoryRequest
func (b *IPCategoryRequestBuilder) Request() *IPCategoryRequest {
	return &IPCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPCategoryRequest is request for IPCategory
type IPCategoryRequest struct{ BaseRequest }

// Get performs GET request for IPCategory
func (r *IPCategoryRequest) Get(ctx context.Context) (resObj *IPCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPCategory
func (r *IPCategoryRequest) Update(ctx context.Context, reqObj *IPCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPCategory
func (r *IPCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPNamedLocationRequestBuilder is request builder for IPNamedLocation
type IPNamedLocationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPNamedLocationRequest
func (b *IPNamedLocationRequestBuilder) Request() *IPNamedLocationRequest {
	return &IPNamedLocationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPNamedLocationRequest is request for IPNamedLocation
type IPNamedLocationRequest struct{ BaseRequest }

// Get performs GET request for IPNamedLocation
func (r *IPNamedLocationRequest) Get(ctx context.Context) (resObj *IPNamedLocation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPNamedLocation
func (r *IPNamedLocationRequest) Update(ctx context.Context, reqObj *IPNamedLocation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPNamedLocation
func (r *IPNamedLocationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPRangeRequestBuilder is request builder for IPRange
type IPRangeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPRangeRequest
func (b *IPRangeRequestBuilder) Request() *IPRangeRequest {
	return &IPRangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPRangeRequest is request for IPRange
type IPRangeRequest struct{ BaseRequest }

// Get performs GET request for IPRange
func (r *IPRangeRequest) Get(ctx context.Context) (resObj *IPRange, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPRange
func (r *IPRangeRequest) Update(ctx context.Context, reqObj *IPRange) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPRange
func (r *IPRangeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPReferenceDataRequestBuilder is request builder for IPReferenceData
type IPReferenceDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPReferenceDataRequest
func (b *IPReferenceDataRequestBuilder) Request() *IPReferenceDataRequest {
	return &IPReferenceDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPReferenceDataRequest is request for IPReferenceData
type IPReferenceDataRequest struct{ BaseRequest }

// Get performs GET request for IPReferenceData
func (r *IPReferenceDataRequest) Get(ctx context.Context) (resObj *IPReferenceData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPReferenceData
func (r *IPReferenceDataRequest) Update(ctx context.Context, reqObj *IPReferenceData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPReferenceData
func (r *IPReferenceDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPSecurityProfileRequestBuilder is request builder for IPSecurityProfile
type IPSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPSecurityProfileRequest
func (b *IPSecurityProfileRequestBuilder) Request() *IPSecurityProfileRequest {
	return &IPSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPSecurityProfileRequest is request for IPSecurityProfile
type IPSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Get(ctx context.Context) (resObj *IPSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Update(ctx context.Context, reqObj *IPSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IPSegmentConfigurationRequestBuilder is request builder for IPSegmentConfiguration
type IPSegmentConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPSegmentConfigurationRequest
func (b *IPSegmentConfigurationRequestBuilder) Request() *IPSegmentConfigurationRequest {
	return &IPSegmentConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPSegmentConfigurationRequest is request for IPSegmentConfiguration
type IPSegmentConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IPSegmentConfiguration
func (r *IPSegmentConfigurationRequest) Get(ctx context.Context) (resObj *IPSegmentConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPSegmentConfiguration
func (r *IPSegmentConfigurationRequest) Update(ctx context.Context, reqObj *IPSegmentConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPSegmentConfiguration
func (r *IPSegmentConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
