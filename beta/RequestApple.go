// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// AppleAppListItemRequestBuilder is request builder for AppleAppListItem
type AppleAppListItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleAppListItemRequest
func (b *AppleAppListItemRequestBuilder) Request() *AppleAppListItemRequest {
	return &AppleAppListItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleAppListItemRequest is request for AppleAppListItem
type AppleAppListItemRequest struct{ BaseRequest }

// Get performs GET request for AppleAppListItem
func (r *AppleAppListItemRequest) Get(ctx context.Context) (resObj *AppleAppListItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleAppListItem
func (r *AppleAppListItemRequest) Update(ctx context.Context, reqObj *AppleAppListItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleAppListItem
func (r *AppleAppListItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleDeviceFeaturesConfigurationBaseRequestBuilder is request builder for AppleDeviceFeaturesConfigurationBase
type AppleDeviceFeaturesConfigurationBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleDeviceFeaturesConfigurationBaseRequest
func (b *AppleDeviceFeaturesConfigurationBaseRequestBuilder) Request() *AppleDeviceFeaturesConfigurationBaseRequest {
	return &AppleDeviceFeaturesConfigurationBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleDeviceFeaturesConfigurationBaseRequest is request for AppleDeviceFeaturesConfigurationBase
type AppleDeviceFeaturesConfigurationBaseRequest struct{ BaseRequest }

// Get performs GET request for AppleDeviceFeaturesConfigurationBase
func (r *AppleDeviceFeaturesConfigurationBaseRequest) Get(ctx context.Context) (resObj *AppleDeviceFeaturesConfigurationBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleDeviceFeaturesConfigurationBase
func (r *AppleDeviceFeaturesConfigurationBaseRequest) Update(ctx context.Context, reqObj *AppleDeviceFeaturesConfigurationBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleDeviceFeaturesConfigurationBase
func (r *AppleDeviceFeaturesConfigurationBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleEnrollmentProfileAssignmentRequestBuilder is request builder for AppleEnrollmentProfileAssignment
type AppleEnrollmentProfileAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleEnrollmentProfileAssignmentRequest
func (b *AppleEnrollmentProfileAssignmentRequestBuilder) Request() *AppleEnrollmentProfileAssignmentRequest {
	return &AppleEnrollmentProfileAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleEnrollmentProfileAssignmentRequest is request for AppleEnrollmentProfileAssignment
type AppleEnrollmentProfileAssignmentRequest struct{ BaseRequest }

// Get performs GET request for AppleEnrollmentProfileAssignment
func (r *AppleEnrollmentProfileAssignmentRequest) Get(ctx context.Context) (resObj *AppleEnrollmentProfileAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleEnrollmentProfileAssignment
func (r *AppleEnrollmentProfileAssignmentRequest) Update(ctx context.Context, reqObj *AppleEnrollmentProfileAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleEnrollmentProfileAssignment
func (r *AppleEnrollmentProfileAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleExpeditedCheckinConfigurationBaseRequestBuilder is request builder for AppleExpeditedCheckinConfigurationBase
type AppleExpeditedCheckinConfigurationBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleExpeditedCheckinConfigurationBaseRequest
func (b *AppleExpeditedCheckinConfigurationBaseRequestBuilder) Request() *AppleExpeditedCheckinConfigurationBaseRequest {
	return &AppleExpeditedCheckinConfigurationBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleExpeditedCheckinConfigurationBaseRequest is request for AppleExpeditedCheckinConfigurationBase
type AppleExpeditedCheckinConfigurationBaseRequest struct{ BaseRequest }

// Get performs GET request for AppleExpeditedCheckinConfigurationBase
func (r *AppleExpeditedCheckinConfigurationBaseRequest) Get(ctx context.Context) (resObj *AppleExpeditedCheckinConfigurationBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleExpeditedCheckinConfigurationBase
func (r *AppleExpeditedCheckinConfigurationBaseRequest) Update(ctx context.Context, reqObj *AppleExpeditedCheckinConfigurationBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleExpeditedCheckinConfigurationBase
func (r *AppleExpeditedCheckinConfigurationBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleManagedIdentityProviderRequestBuilder is request builder for AppleManagedIdentityProvider
type AppleManagedIdentityProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleManagedIdentityProviderRequest
func (b *AppleManagedIdentityProviderRequestBuilder) Request() *AppleManagedIdentityProviderRequest {
	return &AppleManagedIdentityProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleManagedIdentityProviderRequest is request for AppleManagedIdentityProvider
type AppleManagedIdentityProviderRequest struct{ BaseRequest }

// Get performs GET request for AppleManagedIdentityProvider
func (r *AppleManagedIdentityProviderRequest) Get(ctx context.Context) (resObj *AppleManagedIdentityProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleManagedIdentityProvider
func (r *AppleManagedIdentityProviderRequest) Update(ctx context.Context, reqObj *AppleManagedIdentityProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleManagedIdentityProvider
func (r *AppleManagedIdentityProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleOwnerTypeEnrollmentTypeRequestBuilder is request builder for AppleOwnerTypeEnrollmentType
type AppleOwnerTypeEnrollmentTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleOwnerTypeEnrollmentTypeRequest
func (b *AppleOwnerTypeEnrollmentTypeRequestBuilder) Request() *AppleOwnerTypeEnrollmentTypeRequest {
	return &AppleOwnerTypeEnrollmentTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleOwnerTypeEnrollmentTypeRequest is request for AppleOwnerTypeEnrollmentType
type AppleOwnerTypeEnrollmentTypeRequest struct{ BaseRequest }

// Get performs GET request for AppleOwnerTypeEnrollmentType
func (r *AppleOwnerTypeEnrollmentTypeRequest) Get(ctx context.Context) (resObj *AppleOwnerTypeEnrollmentType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleOwnerTypeEnrollmentType
func (r *AppleOwnerTypeEnrollmentTypeRequest) Update(ctx context.Context, reqObj *AppleOwnerTypeEnrollmentType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleOwnerTypeEnrollmentType
func (r *AppleOwnerTypeEnrollmentTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ApplePushNotificationCertificateRequestBuilder is request builder for ApplePushNotificationCertificate
type ApplePushNotificationCertificateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ApplePushNotificationCertificateRequest
func (b *ApplePushNotificationCertificateRequestBuilder) Request() *ApplePushNotificationCertificateRequest {
	return &ApplePushNotificationCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ApplePushNotificationCertificateRequest is request for ApplePushNotificationCertificate
type ApplePushNotificationCertificateRequest struct{ BaseRequest }

// Get performs GET request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Get(ctx context.Context) (resObj *ApplePushNotificationCertificate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Update(ctx context.Context, reqObj *ApplePushNotificationCertificate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleUserInitiatedEnrollmentProfileRequestBuilder is request builder for AppleUserInitiatedEnrollmentProfile
type AppleUserInitiatedEnrollmentProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleUserInitiatedEnrollmentProfileRequest
func (b *AppleUserInitiatedEnrollmentProfileRequestBuilder) Request() *AppleUserInitiatedEnrollmentProfileRequest {
	return &AppleUserInitiatedEnrollmentProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleUserInitiatedEnrollmentProfileRequest is request for AppleUserInitiatedEnrollmentProfile
type AppleUserInitiatedEnrollmentProfileRequest struct{ BaseRequest }

// Get performs GET request for AppleUserInitiatedEnrollmentProfile
func (r *AppleUserInitiatedEnrollmentProfileRequest) Get(ctx context.Context) (resObj *AppleUserInitiatedEnrollmentProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleUserInitiatedEnrollmentProfile
func (r *AppleUserInitiatedEnrollmentProfileRequest) Update(ctx context.Context, reqObj *AppleUserInitiatedEnrollmentProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleUserInitiatedEnrollmentProfile
func (r *AppleUserInitiatedEnrollmentProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleVPNAlwaysOnConfigurationRequestBuilder is request builder for AppleVPNAlwaysOnConfiguration
type AppleVPNAlwaysOnConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleVPNAlwaysOnConfigurationRequest
func (b *AppleVPNAlwaysOnConfigurationRequestBuilder) Request() *AppleVPNAlwaysOnConfigurationRequest {
	return &AppleVPNAlwaysOnConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleVPNAlwaysOnConfigurationRequest is request for AppleVPNAlwaysOnConfiguration
type AppleVPNAlwaysOnConfigurationRequest struct{ BaseRequest }

// Get performs GET request for AppleVPNAlwaysOnConfiguration
func (r *AppleVPNAlwaysOnConfigurationRequest) Get(ctx context.Context) (resObj *AppleVPNAlwaysOnConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleVPNAlwaysOnConfiguration
func (r *AppleVPNAlwaysOnConfigurationRequest) Update(ctx context.Context, reqObj *AppleVPNAlwaysOnConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleVPNAlwaysOnConfiguration
func (r *AppleVPNAlwaysOnConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleVPNConfigurationRequestBuilder is request builder for AppleVPNConfiguration
type AppleVPNConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleVPNConfigurationRequest
func (b *AppleVPNConfigurationRequestBuilder) Request() *AppleVPNConfigurationRequest {
	return &AppleVPNConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleVPNConfigurationRequest is request for AppleVPNConfiguration
type AppleVPNConfigurationRequest struct{ BaseRequest }

// Get performs GET request for AppleVPNConfiguration
func (r *AppleVPNConfigurationRequest) Get(ctx context.Context) (resObj *AppleVPNConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleVPNConfiguration
func (r *AppleVPNConfigurationRequest) Update(ctx context.Context, reqObj *AppleVPNConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleVPNConfiguration
func (r *AppleVPNConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AppleVPPTokenTroubleshootingEventRequestBuilder is request builder for AppleVPPTokenTroubleshootingEvent
type AppleVPPTokenTroubleshootingEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns AppleVPPTokenTroubleshootingEventRequest
func (b *AppleVPPTokenTroubleshootingEventRequestBuilder) Request() *AppleVPPTokenTroubleshootingEventRequest {
	return &AppleVPPTokenTroubleshootingEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AppleVPPTokenTroubleshootingEventRequest is request for AppleVPPTokenTroubleshootingEvent
type AppleVPPTokenTroubleshootingEventRequest struct{ BaseRequest }

// Get performs GET request for AppleVPPTokenTroubleshootingEvent
func (r *AppleVPPTokenTroubleshootingEventRequest) Get(ctx context.Context) (resObj *AppleVPPTokenTroubleshootingEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AppleVPPTokenTroubleshootingEvent
func (r *AppleVPPTokenTroubleshootingEventRequest) Update(ctx context.Context, reqObj *AppleVPPTokenTroubleshootingEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AppleVPPTokenTroubleshootingEvent
func (r *AppleVPPTokenTroubleshootingEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequestBuilder struct{ BaseRequestBuilder }

// GenerateApplePushNotificationCertificateSigningRequestAction action undocumentedras
func (b *ApplePushNotificationCertificateRequestBuilder) GenerateApplePushNotificationCertificateSigningRequestAction(reqObj *ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequestParameter) *ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequestBuilder {
	bb := &ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GenerateApplePushNotificationCertificateSigningRequest"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequest struct{ BaseRequest }

func (b *ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequestBuilder) Request() *ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequest {
	return &ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *ApplePushNotificationCertificateGenerateApplePushNotificationCertificateSigningRequestActionRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type AppleUserInitiatedEnrollmentProfileSetPriorityRequestBuilder struct{ BaseRequestBuilder }

// SetPriority action undocumentedrav
func (b *AppleUserInitiatedEnrollmentProfileRequestBuilder) SetPriority(reqObj *AppleUserInitiatedEnrollmentProfileSetPriorityRequestParameter) *AppleUserInitiatedEnrollmentProfileSetPriorityRequestBuilder {
	bb := &AppleUserInitiatedEnrollmentProfileSetPriorityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetPriority"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type AppleUserInitiatedEnrollmentProfileSetPriorityRequest struct{ BaseRequest }

func (b *AppleUserInitiatedEnrollmentProfileSetPriorityRequestBuilder) Request() *AppleUserInitiatedEnrollmentProfileSetPriorityRequest {
	return &AppleUserInitiatedEnrollmentProfileSetPriorityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *AppleUserInitiatedEnrollmentProfileSetPriorityRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
