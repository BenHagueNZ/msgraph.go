// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// KeyBooleanValuePairRequestBuilder is request builder for KeyBooleanValuePair
type KeyBooleanValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyBooleanValuePairRequest
func (b *KeyBooleanValuePairRequestBuilder) Request() *KeyBooleanValuePairRequest {
	return &KeyBooleanValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyBooleanValuePairRequest is request for KeyBooleanValuePair
type KeyBooleanValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyBooleanValuePair
func (r *KeyBooleanValuePairRequest) Get(ctx context.Context) (resObj *KeyBooleanValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyBooleanValuePair
func (r *KeyBooleanValuePairRequest) Update(ctx context.Context, reqObj *KeyBooleanValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyBooleanValuePair
func (r *KeyBooleanValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyCredentialRequestBuilder is request builder for KeyCredential
type KeyCredentialRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyCredentialRequest
func (b *KeyCredentialRequestBuilder) Request() *KeyCredentialRequest {
	return &KeyCredentialRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyCredentialRequest is request for KeyCredential
type KeyCredentialRequest struct{ BaseRequest }

// Get performs GET request for KeyCredential
func (r *KeyCredentialRequest) Get(ctx context.Context) (resObj *KeyCredential, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyCredential
func (r *KeyCredentialRequest) Update(ctx context.Context, reqObj *KeyCredential) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyCredential
func (r *KeyCredentialRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyCredentialConfigurationRequestBuilder is request builder for KeyCredentialConfiguration
type KeyCredentialConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyCredentialConfigurationRequest
func (b *KeyCredentialConfigurationRequestBuilder) Request() *KeyCredentialConfigurationRequest {
	return &KeyCredentialConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyCredentialConfigurationRequest is request for KeyCredentialConfiguration
type KeyCredentialConfigurationRequest struct{ BaseRequest }

// Get performs GET request for KeyCredentialConfiguration
func (r *KeyCredentialConfigurationRequest) Get(ctx context.Context) (resObj *KeyCredentialConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyCredentialConfiguration
func (r *KeyCredentialConfigurationRequest) Update(ctx context.Context, reqObj *KeyCredentialConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyCredentialConfiguration
func (r *KeyCredentialConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyIntegerValuePairRequestBuilder is request builder for KeyIntegerValuePair
type KeyIntegerValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyIntegerValuePairRequest
func (b *KeyIntegerValuePairRequestBuilder) Request() *KeyIntegerValuePairRequest {
	return &KeyIntegerValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyIntegerValuePairRequest is request for KeyIntegerValuePair
type KeyIntegerValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyIntegerValuePair
func (r *KeyIntegerValuePairRequest) Get(ctx context.Context) (resObj *KeyIntegerValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyIntegerValuePair
func (r *KeyIntegerValuePairRequest) Update(ctx context.Context, reqObj *KeyIntegerValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyIntegerValuePair
func (r *KeyIntegerValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyLongValuePairRequestBuilder is request builder for KeyLongValuePair
type KeyLongValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyLongValuePairRequest
func (b *KeyLongValuePairRequestBuilder) Request() *KeyLongValuePairRequest {
	return &KeyLongValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyLongValuePairRequest is request for KeyLongValuePair
type KeyLongValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyLongValuePair
func (r *KeyLongValuePairRequest) Get(ctx context.Context) (resObj *KeyLongValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyLongValuePair
func (r *KeyLongValuePairRequest) Update(ctx context.Context, reqObj *KeyLongValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyLongValuePair
func (r *KeyLongValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyRealValuePairRequestBuilder is request builder for KeyRealValuePair
type KeyRealValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyRealValuePairRequest
func (b *KeyRealValuePairRequestBuilder) Request() *KeyRealValuePairRequest {
	return &KeyRealValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyRealValuePairRequest is request for KeyRealValuePair
type KeyRealValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyRealValuePair
func (r *KeyRealValuePairRequest) Get(ctx context.Context) (resObj *KeyRealValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyRealValuePair
func (r *KeyRealValuePairRequest) Update(ctx context.Context, reqObj *KeyRealValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyRealValuePair
func (r *KeyRealValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyStringValuePairRequestBuilder is request builder for KeyStringValuePair
type KeyStringValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyStringValuePairRequest
func (b *KeyStringValuePairRequestBuilder) Request() *KeyStringValuePairRequest {
	return &KeyStringValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyStringValuePairRequest is request for KeyStringValuePair
type KeyStringValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyStringValuePair
func (r *KeyStringValuePairRequest) Get(ctx context.Context) (resObj *KeyStringValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyStringValuePair
func (r *KeyStringValuePairRequest) Update(ctx context.Context, reqObj *KeyStringValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyStringValuePair
func (r *KeyStringValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyTypedValuePairRequestBuilder is request builder for KeyTypedValuePair
type KeyTypedValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyTypedValuePairRequest
func (b *KeyTypedValuePairRequestBuilder) Request() *KeyTypedValuePairRequest {
	return &KeyTypedValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyTypedValuePairRequest is request for KeyTypedValuePair
type KeyTypedValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyTypedValuePair
func (r *KeyTypedValuePairRequest) Get(ctx context.Context) (resObj *KeyTypedValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyTypedValuePair
func (r *KeyTypedValuePairRequest) Update(ctx context.Context, reqObj *KeyTypedValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyTypedValuePair
func (r *KeyTypedValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyValueRequestBuilder is request builder for KeyValue
type KeyValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyValueRequest
func (b *KeyValueRequestBuilder) Request() *KeyValueRequest {
	return &KeyValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyValueRequest is request for KeyValue
type KeyValueRequest struct{ BaseRequest }

// Get performs GET request for KeyValue
func (r *KeyValueRequest) Get(ctx context.Context) (resObj *KeyValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyValue
func (r *KeyValueRequest) Update(ctx context.Context, reqObj *KeyValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyValue
func (r *KeyValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// KeyValuePairRequestBuilder is request builder for KeyValuePair
type KeyValuePairRequestBuilder struct{ BaseRequestBuilder }

// Request returns KeyValuePairRequest
func (b *KeyValuePairRequestBuilder) Request() *KeyValuePairRequest {
	return &KeyValuePairRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// KeyValuePairRequest is request for KeyValuePair
type KeyValuePairRequest struct{ BaseRequest }

// Get performs GET request for KeyValuePair
func (r *KeyValuePairRequest) Get(ctx context.Context) (resObj *KeyValuePair, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for KeyValuePair
func (r *KeyValuePairRequest) Update(ctx context.Context, reqObj *KeyValuePair) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for KeyValuePair
func (r *KeyValuePairRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
