// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// MetadataActionRequestBuilder is request builder for MetadataAction
type MetadataActionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MetadataActionRequest
func (b *MetadataActionRequestBuilder) Request() *MetadataActionRequest {
	return &MetadataActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MetadataActionRequest is request for MetadataAction
type MetadataActionRequest struct{ BaseRequest }

// Get performs GET request for MetadataAction
func (r *MetadataActionRequest) Get(ctx context.Context) (resObj *MetadataAction, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MetadataAction
func (r *MetadataActionRequest) Update(ctx context.Context, reqObj *MetadataAction) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MetadataAction
func (r *MetadataActionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MetadataEntryRequestBuilder is request builder for MetadataEntry
type MetadataEntryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MetadataEntryRequest
func (b *MetadataEntryRequestBuilder) Request() *MetadataEntryRequest {
	return &MetadataEntryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MetadataEntryRequest is request for MetadataEntry
type MetadataEntryRequest struct{ BaseRequest }

// Get performs GET request for MetadataEntry
func (r *MetadataEntryRequest) Get(ctx context.Context) (resObj *MetadataEntry, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MetadataEntry
func (r *MetadataEntryRequest) Update(ctx context.Context, reqObj *MetadataEntry) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MetadataEntry
func (r *MetadataEntryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
