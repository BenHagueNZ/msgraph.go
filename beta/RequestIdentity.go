// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IdentityGovernanceCustomTaskExtensionRequestBuilder is request builder for IdentityGovernanceCustomTaskExtension
type IdentityGovernanceCustomTaskExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionRequest
func (b *IdentityGovernanceCustomTaskExtensionRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionRequest {
	return &IdentityGovernanceCustomTaskExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceCustomTaskExtensionRequest is request for IdentityGovernanceCustomTaskExtension
type IdentityGovernanceCustomTaskExtensionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
type IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest
func (b *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest {
	return &IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest is request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
type IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCallbackConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCallbackConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCallbackData
type IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCallbackDataRequest
func (b *IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCallbackDataRequest {
	return &IdentityGovernanceCustomTaskExtensionCallbackDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceCustomTaskExtensionCallbackDataRequest is request for IdentityGovernanceCustomTaskExtensionCallbackData
type IdentityGovernanceCustomTaskExtensionCallbackDataRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCallbackData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCallbackData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCalloutData
type IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCalloutDataRequest
func (b *IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCalloutDataRequest {
	return &IdentityGovernanceCustomTaskExtensionCalloutDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceCustomTaskExtensionCalloutDataRequest is request for IdentityGovernanceCustomTaskExtensionCalloutData
type IdentityGovernanceCustomTaskExtensionCalloutDataRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCalloutData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCalloutData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceLifecycleManagementSettingsRequestBuilder is request builder for IdentityGovernanceLifecycleManagementSettings
type IdentityGovernanceLifecycleManagementSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceLifecycleManagementSettingsRequest
func (b *IdentityGovernanceLifecycleManagementSettingsRequestBuilder) Request() *IdentityGovernanceLifecycleManagementSettingsRequest {
	return &IdentityGovernanceLifecycleManagementSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceLifecycleManagementSettingsRequest is request for IdentityGovernanceLifecycleManagementSettings
type IdentityGovernanceLifecycleManagementSettingsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceLifecycleManagementSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceLifecycleManagementSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder is request builder for IdentityGovernanceLifecycleWorkflowsContainer
type IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceLifecycleWorkflowsContainerRequest
func (b *IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder) Request() *IdentityGovernanceLifecycleWorkflowsContainerRequest {
	return &IdentityGovernanceLifecycleWorkflowsContainerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceLifecycleWorkflowsContainerRequest is request for IdentityGovernanceLifecycleWorkflowsContainer
type IdentityGovernanceLifecycleWorkflowsContainerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceLifecycleWorkflowsContainer, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceLifecycleWorkflowsContainer) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceOnDemandExecutionOnlyRequestBuilder is request builder for IdentityGovernanceOnDemandExecutionOnly
type IdentityGovernanceOnDemandExecutionOnlyRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceOnDemandExecutionOnlyRequest
func (b *IdentityGovernanceOnDemandExecutionOnlyRequestBuilder) Request() *IdentityGovernanceOnDemandExecutionOnlyRequest {
	return &IdentityGovernanceOnDemandExecutionOnlyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceOnDemandExecutionOnlyRequest is request for IdentityGovernanceOnDemandExecutionOnly
type IdentityGovernanceOnDemandExecutionOnlyRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Get(ctx context.Context) (resObj *IdentityGovernanceOnDemandExecutionOnly, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Update(ctx context.Context, reqObj *IdentityGovernanceOnDemandExecutionOnly) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceParameterRequestBuilder is request builder for IdentityGovernanceParameter
type IdentityGovernanceParameterRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceParameterRequest
func (b *IdentityGovernanceParameterRequestBuilder) Request() *IdentityGovernanceParameterRequest {
	return &IdentityGovernanceParameterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceParameterRequest is request for IdentityGovernanceParameter
type IdentityGovernanceParameterRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Get(ctx context.Context) (resObj *IdentityGovernanceParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Update(ctx context.Context, reqObj *IdentityGovernanceParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceRuleBasedSubjectSetRequestBuilder is request builder for IdentityGovernanceRuleBasedSubjectSet
type IdentityGovernanceRuleBasedSubjectSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceRuleBasedSubjectSetRequest
func (b *IdentityGovernanceRuleBasedSubjectSetRequestBuilder) Request() *IdentityGovernanceRuleBasedSubjectSetRequest {
	return &IdentityGovernanceRuleBasedSubjectSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceRuleBasedSubjectSetRequest is request for IdentityGovernanceRuleBasedSubjectSet
type IdentityGovernanceRuleBasedSubjectSetRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRuleBasedSubjectSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRuleBasedSubjectSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceRunRequestBuilder is request builder for IdentityGovernanceRun
type IdentityGovernanceRunRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceRunRequest
func (b *IdentityGovernanceRunRequestBuilder) Request() *IdentityGovernanceRunRequest {
	return &IdentityGovernanceRunRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceRunRequest is request for IdentityGovernanceRun
type IdentityGovernanceRunRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRun, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRun) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceRunSummaryRequestBuilder is request builder for IdentityGovernanceRunSummary
type IdentityGovernanceRunSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceRunSummaryRequest
func (b *IdentityGovernanceRunSummaryRequestBuilder) Request() *IdentityGovernanceRunSummaryRequest {
	return &IdentityGovernanceRunSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceRunSummaryRequest is request for IdentityGovernanceRunSummary
type IdentityGovernanceRunSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRunSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRunSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTaskRequestBuilder is request builder for IdentityGovernanceTask
type IdentityGovernanceTaskRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTaskRequest
func (b *IdentityGovernanceTaskRequestBuilder) Request() *IdentityGovernanceTaskRequest {
	return &IdentityGovernanceTaskRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTaskRequest is request for IdentityGovernanceTask
type IdentityGovernanceTaskRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTask, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTask) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTaskDefinitionRequestBuilder is request builder for IdentityGovernanceTaskDefinition
type IdentityGovernanceTaskDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTaskDefinitionRequest
func (b *IdentityGovernanceTaskDefinitionRequestBuilder) Request() *IdentityGovernanceTaskDefinitionRequest {
	return &IdentityGovernanceTaskDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTaskDefinitionRequest is request for IdentityGovernanceTaskDefinition
type IdentityGovernanceTaskDefinitionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTaskProcessingResultRequestBuilder is request builder for IdentityGovernanceTaskProcessingResult
type IdentityGovernanceTaskProcessingResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTaskProcessingResultRequest
func (b *IdentityGovernanceTaskProcessingResultRequestBuilder) Request() *IdentityGovernanceTaskProcessingResultRequest {
	return &IdentityGovernanceTaskProcessingResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTaskProcessingResultRequest is request for IdentityGovernanceTaskProcessingResult
type IdentityGovernanceTaskProcessingResultRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskProcessingResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskProcessingResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTaskReportRequestBuilder is request builder for IdentityGovernanceTaskReport
type IdentityGovernanceTaskReportRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTaskReportRequest
func (b *IdentityGovernanceTaskReportRequestBuilder) Request() *IdentityGovernanceTaskReportRequest {
	return &IdentityGovernanceTaskReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTaskReportRequest is request for IdentityGovernanceTaskReport
type IdentityGovernanceTaskReportRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskReport, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskReport) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTaskReportSummaryRequestBuilder is request builder for IdentityGovernanceTaskReportSummary
type IdentityGovernanceTaskReportSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTaskReportSummaryRequest
func (b *IdentityGovernanceTaskReportSummaryRequestBuilder) Request() *IdentityGovernanceTaskReportSummaryRequest {
	return &IdentityGovernanceTaskReportSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTaskReportSummaryRequest is request for IdentityGovernanceTaskReportSummary
type IdentityGovernanceTaskReportSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskReportSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskReportSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder is request builder for IdentityGovernanceTimeBasedAttributeTrigger
type IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTimeBasedAttributeTriggerRequest
func (b *IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder) Request() *IdentityGovernanceTimeBasedAttributeTriggerRequest {
	return &IdentityGovernanceTimeBasedAttributeTriggerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTimeBasedAttributeTriggerRequest is request for IdentityGovernanceTimeBasedAttributeTrigger
type IdentityGovernanceTimeBasedAttributeTriggerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTimeBasedAttributeTrigger, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTimeBasedAttributeTrigger) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder is request builder for IdentityGovernanceTriggerAndScopeBasedConditions
type IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceTriggerAndScopeBasedConditionsRequest
func (b *IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder) Request() *IdentityGovernanceTriggerAndScopeBasedConditionsRequest {
	return &IdentityGovernanceTriggerAndScopeBasedConditionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceTriggerAndScopeBasedConditionsRequest is request for IdentityGovernanceTriggerAndScopeBasedConditions
type IdentityGovernanceTriggerAndScopeBasedConditionsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTriggerAndScopeBasedConditions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTriggerAndScopeBasedConditions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceUserProcessingResultRequestBuilder is request builder for IdentityGovernanceUserProcessingResult
type IdentityGovernanceUserProcessingResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceUserProcessingResultRequest
func (b *IdentityGovernanceUserProcessingResultRequestBuilder) Request() *IdentityGovernanceUserProcessingResultRequest {
	return &IdentityGovernanceUserProcessingResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceUserProcessingResultRequest is request for IdentityGovernanceUserProcessingResult
type IdentityGovernanceUserProcessingResultRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUserProcessingResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUserProcessingResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceUserSummaryRequestBuilder is request builder for IdentityGovernanceUserSummary
type IdentityGovernanceUserSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceUserSummaryRequest
func (b *IdentityGovernanceUserSummaryRequestBuilder) Request() *IdentityGovernanceUserSummaryRequest {
	return &IdentityGovernanceUserSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceUserSummaryRequest is request for IdentityGovernanceUserSummary
type IdentityGovernanceUserSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUserSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUserSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceUsersProcessingSummaryRequestBuilder is request builder for IdentityGovernanceUsersProcessingSummary
type IdentityGovernanceUsersProcessingSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceUsersProcessingSummaryRequest
func (b *IdentityGovernanceUsersProcessingSummaryRequestBuilder) Request() *IdentityGovernanceUsersProcessingSummaryRequest {
	return &IdentityGovernanceUsersProcessingSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceUsersProcessingSummaryRequest is request for IdentityGovernanceUsersProcessingSummary
type IdentityGovernanceUsersProcessingSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUsersProcessingSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUsersProcessingSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowRequestBuilder is request builder for IdentityGovernanceWorkflow
type IdentityGovernanceWorkflowRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowRequest
func (b *IdentityGovernanceWorkflowRequestBuilder) Request() *IdentityGovernanceWorkflowRequest {
	return &IdentityGovernanceWorkflowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowRequest is request for IdentityGovernanceWorkflow
type IdentityGovernanceWorkflowRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowBaseRequestBuilder is request builder for IdentityGovernanceWorkflowBase
type IdentityGovernanceWorkflowBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowBaseRequest
func (b *IdentityGovernanceWorkflowBaseRequestBuilder) Request() *IdentityGovernanceWorkflowBaseRequest {
	return &IdentityGovernanceWorkflowBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowBaseRequest is request for IdentityGovernanceWorkflowBase
type IdentityGovernanceWorkflowBaseRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowExecutionConditionsRequestBuilder is request builder for IdentityGovernanceWorkflowExecutionConditions
type IdentityGovernanceWorkflowExecutionConditionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowExecutionConditionsRequest
func (b *IdentityGovernanceWorkflowExecutionConditionsRequestBuilder) Request() *IdentityGovernanceWorkflowExecutionConditionsRequest {
	return &IdentityGovernanceWorkflowExecutionConditionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowExecutionConditionsRequest is request for IdentityGovernanceWorkflowExecutionConditions
type IdentityGovernanceWorkflowExecutionConditionsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowExecutionConditions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowExecutionConditions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowExecutionTriggerRequestBuilder is request builder for IdentityGovernanceWorkflowExecutionTrigger
type IdentityGovernanceWorkflowExecutionTriggerRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowExecutionTriggerRequest
func (b *IdentityGovernanceWorkflowExecutionTriggerRequestBuilder) Request() *IdentityGovernanceWorkflowExecutionTriggerRequest {
	return &IdentityGovernanceWorkflowExecutionTriggerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowExecutionTriggerRequest is request for IdentityGovernanceWorkflowExecutionTrigger
type IdentityGovernanceWorkflowExecutionTriggerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowExecutionTrigger, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowExecutionTrigger) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowTemplateRequestBuilder is request builder for IdentityGovernanceWorkflowTemplate
type IdentityGovernanceWorkflowTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowTemplateRequest
func (b *IdentityGovernanceWorkflowTemplateRequestBuilder) Request() *IdentityGovernanceWorkflowTemplateRequest {
	return &IdentityGovernanceWorkflowTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowTemplateRequest is request for IdentityGovernanceWorkflowTemplate
type IdentityGovernanceWorkflowTemplateRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceWorkflowVersionRequestBuilder is request builder for IdentityGovernanceWorkflowVersion
type IdentityGovernanceWorkflowVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowVersionRequest
func (b *IdentityGovernanceWorkflowVersionRequestBuilder) Request() *IdentityGovernanceWorkflowVersionRequest {
	return &IdentityGovernanceWorkflowVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceWorkflowVersionRequest is request for IdentityGovernanceWorkflowVersion
type IdentityGovernanceWorkflowVersionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityRequestBuilder is request builder for Identity
type IdentityRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityRequest
func (b *IdentityRequestBuilder) Request() *IdentityRequest {
	return &IdentityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityRequest is request for Identity
type IdentityRequest struct{ BaseRequest }

// Get performs GET request for Identity
func (r *IdentityRequest) Get(ctx context.Context) (resObj *Identity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Identity
func (r *IdentityRequest) Update(ctx context.Context, reqObj *Identity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Identity
func (r *IdentityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityAPIConnectorRequestBuilder is request builder for IdentityAPIConnector
type IdentityAPIConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityAPIConnectorRequest
func (b *IdentityAPIConnectorRequestBuilder) Request() *IdentityAPIConnectorRequest {
	return &IdentityAPIConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityAPIConnectorRequest is request for IdentityAPIConnector
type IdentityAPIConnectorRequest struct{ BaseRequest }

// Get performs GET request for IdentityAPIConnector
func (r *IdentityAPIConnectorRequest) Get(ctx context.Context) (resObj *IdentityAPIConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityAPIConnector
func (r *IdentityAPIConnectorRequest) Update(ctx context.Context, reqObj *IdentityAPIConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityAPIConnector
func (r *IdentityAPIConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityBuiltInUserFlowAttributeRequestBuilder is request builder for IdentityBuiltInUserFlowAttribute
type IdentityBuiltInUserFlowAttributeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityBuiltInUserFlowAttributeRequest
func (b *IdentityBuiltInUserFlowAttributeRequestBuilder) Request() *IdentityBuiltInUserFlowAttributeRequest {
	return &IdentityBuiltInUserFlowAttributeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityBuiltInUserFlowAttributeRequest is request for IdentityBuiltInUserFlowAttribute
type IdentityBuiltInUserFlowAttributeRequest struct{ BaseRequest }

// Get performs GET request for IdentityBuiltInUserFlowAttribute
func (r *IdentityBuiltInUserFlowAttributeRequest) Get(ctx context.Context) (resObj *IdentityBuiltInUserFlowAttribute, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityBuiltInUserFlowAttribute
func (r *IdentityBuiltInUserFlowAttributeRequest) Update(ctx context.Context, reqObj *IdentityBuiltInUserFlowAttribute) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityBuiltInUserFlowAttribute
func (r *IdentityBuiltInUserFlowAttributeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityContainerRequestBuilder is request builder for IdentityContainer
type IdentityContainerRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityContainerRequest
func (b *IdentityContainerRequestBuilder) Request() *IdentityContainerRequest {
	return &IdentityContainerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityContainerRequest is request for IdentityContainer
type IdentityContainerRequest struct{ BaseRequest }

// Get performs GET request for IdentityContainer
func (r *IdentityContainerRequest) Get(ctx context.Context) (resObj *IdentityContainer, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityContainer
func (r *IdentityContainerRequest) Update(ctx context.Context, reqObj *IdentityContainer) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityContainer
func (r *IdentityContainerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityCustomUserFlowAttributeRequestBuilder is request builder for IdentityCustomUserFlowAttribute
type IdentityCustomUserFlowAttributeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityCustomUserFlowAttributeRequest
func (b *IdentityCustomUserFlowAttributeRequestBuilder) Request() *IdentityCustomUserFlowAttributeRequest {
	return &IdentityCustomUserFlowAttributeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityCustomUserFlowAttributeRequest is request for IdentityCustomUserFlowAttribute
type IdentityCustomUserFlowAttributeRequest struct{ BaseRequest }

// Get performs GET request for IdentityCustomUserFlowAttribute
func (r *IdentityCustomUserFlowAttributeRequest) Get(ctx context.Context) (resObj *IdentityCustomUserFlowAttribute, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityCustomUserFlowAttribute
func (r *IdentityCustomUserFlowAttributeRequest) Update(ctx context.Context, reqObj *IdentityCustomUserFlowAttribute) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityCustomUserFlowAttribute
func (r *IdentityCustomUserFlowAttributeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityGovernanceRequestBuilder is request builder for IdentityGovernance
type IdentityGovernanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityGovernanceRequest
func (b *IdentityGovernanceRequestBuilder) Request() *IdentityGovernanceRequest {
	return &IdentityGovernanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityGovernanceRequest is request for IdentityGovernance
type IdentityGovernanceRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernance
func (r *IdentityGovernanceRequest) Get(ctx context.Context) (resObj *IdentityGovernance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernance
func (r *IdentityGovernanceRequest) Update(ctx context.Context, reqObj *IdentityGovernance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernance
func (r *IdentityGovernanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityProtectionRootRequestBuilder is request builder for IdentityProtectionRoot
type IdentityProtectionRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityProtectionRootRequest
func (b *IdentityProtectionRootRequestBuilder) Request() *IdentityProtectionRootRequest {
	return &IdentityProtectionRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityProtectionRootRequest is request for IdentityProtectionRoot
type IdentityProtectionRootRequest struct{ BaseRequest }

// Get performs GET request for IdentityProtectionRoot
func (r *IdentityProtectionRootRequest) Get(ctx context.Context) (resObj *IdentityProtectionRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityProtectionRoot
func (r *IdentityProtectionRootRequest) Update(ctx context.Context, reqObj *IdentityProtectionRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityProtectionRoot
func (r *IdentityProtectionRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityProviderRequestBuilder is request builder for IdentityProvider
type IdentityProviderRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityProviderRequest
func (b *IdentityProviderRequestBuilder) Request() *IdentityProviderRequest {
	return &IdentityProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityProviderRequest is request for IdentityProvider
type IdentityProviderRequest struct{ BaseRequest }

// Get performs GET request for IdentityProvider
func (r *IdentityProviderRequest) Get(ctx context.Context) (resObj *IdentityProvider, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityProvider
func (r *IdentityProviderRequest) Update(ctx context.Context, reqObj *IdentityProvider) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityProvider
func (r *IdentityProviderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityProviderBaseRequestBuilder is request builder for IdentityProviderBase
type IdentityProviderBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityProviderBaseRequest
func (b *IdentityProviderBaseRequestBuilder) Request() *IdentityProviderBaseRequest {
	return &IdentityProviderBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityProviderBaseRequest is request for IdentityProviderBase
type IdentityProviderBaseRequest struct{ BaseRequest }

// Get performs GET request for IdentityProviderBase
func (r *IdentityProviderBaseRequest) Get(ctx context.Context) (resObj *IdentityProviderBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityProviderBase
func (r *IdentityProviderBaseRequest) Update(ctx context.Context, reqObj *IdentityProviderBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityProviderBase
func (r *IdentityProviderBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentitySecurityDefaultsEnforcementPolicyRequestBuilder is request builder for IdentitySecurityDefaultsEnforcementPolicy
type IdentitySecurityDefaultsEnforcementPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentitySecurityDefaultsEnforcementPolicyRequest
func (b *IdentitySecurityDefaultsEnforcementPolicyRequestBuilder) Request() *IdentitySecurityDefaultsEnforcementPolicyRequest {
	return &IdentitySecurityDefaultsEnforcementPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentitySecurityDefaultsEnforcementPolicyRequest is request for IdentitySecurityDefaultsEnforcementPolicy
type IdentitySecurityDefaultsEnforcementPolicyRequest struct{ BaseRequest }

// Get performs GET request for IdentitySecurityDefaultsEnforcementPolicy
func (r *IdentitySecurityDefaultsEnforcementPolicyRequest) Get(ctx context.Context) (resObj *IdentitySecurityDefaultsEnforcementPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentitySecurityDefaultsEnforcementPolicy
func (r *IdentitySecurityDefaultsEnforcementPolicyRequest) Update(ctx context.Context, reqObj *IdentitySecurityDefaultsEnforcementPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentitySecurityDefaultsEnforcementPolicy
func (r *IdentitySecurityDefaultsEnforcementPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentitySetRequestBuilder is request builder for IdentitySet
type IdentitySetRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentitySetRequest
func (b *IdentitySetRequestBuilder) Request() *IdentitySetRequest {
	return &IdentitySetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentitySetRequest is request for IdentitySet
type IdentitySetRequest struct{ BaseRequest }

// Get performs GET request for IdentitySet
func (r *IdentitySetRequest) Get(ctx context.Context) (resObj *IdentitySet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentitySet
func (r *IdentitySetRequest) Update(ctx context.Context, reqObj *IdentitySet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentitySet
func (r *IdentitySetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentitySourceRequestBuilder is request builder for IdentitySource
type IdentitySourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentitySourceRequest
func (b *IdentitySourceRequestBuilder) Request() *IdentitySourceRequest {
	return &IdentitySourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentitySourceRequest is request for IdentitySource
type IdentitySourceRequest struct{ BaseRequest }

// Get performs GET request for IdentitySource
func (r *IdentitySourceRequest) Get(ctx context.Context) (resObj *IdentitySource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentitySource
func (r *IdentitySourceRequest) Update(ctx context.Context, reqObj *IdentitySource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentitySource
func (r *IdentitySourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityUserFlowRequestBuilder is request builder for IdentityUserFlow
type IdentityUserFlowRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityUserFlowRequest
func (b *IdentityUserFlowRequestBuilder) Request() *IdentityUserFlowRequest {
	return &IdentityUserFlowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityUserFlowRequest is request for IdentityUserFlow
type IdentityUserFlowRequest struct{ BaseRequest }

// Get performs GET request for IdentityUserFlow
func (r *IdentityUserFlowRequest) Get(ctx context.Context) (resObj *IdentityUserFlow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityUserFlow
func (r *IdentityUserFlowRequest) Update(ctx context.Context, reqObj *IdentityUserFlow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityUserFlow
func (r *IdentityUserFlowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityUserFlowAttributeRequestBuilder is request builder for IdentityUserFlowAttribute
type IdentityUserFlowAttributeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityUserFlowAttributeRequest
func (b *IdentityUserFlowAttributeRequestBuilder) Request() *IdentityUserFlowAttributeRequest {
	return &IdentityUserFlowAttributeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityUserFlowAttributeRequest is request for IdentityUserFlowAttribute
type IdentityUserFlowAttributeRequest struct{ BaseRequest }

// Get performs GET request for IdentityUserFlowAttribute
func (r *IdentityUserFlowAttributeRequest) Get(ctx context.Context) (resObj *IdentityUserFlowAttribute, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityUserFlowAttribute
func (r *IdentityUserFlowAttributeRequest) Update(ctx context.Context, reqObj *IdentityUserFlowAttribute) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityUserFlowAttribute
func (r *IdentityUserFlowAttributeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityUserFlowAttributeAssignmentRequestBuilder is request builder for IdentityUserFlowAttributeAssignment
type IdentityUserFlowAttributeAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityUserFlowAttributeAssignmentRequest
func (b *IdentityUserFlowAttributeAssignmentRequestBuilder) Request() *IdentityUserFlowAttributeAssignmentRequest {
	return &IdentityUserFlowAttributeAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityUserFlowAttributeAssignmentRequest is request for IdentityUserFlowAttributeAssignment
type IdentityUserFlowAttributeAssignmentRequest struct{ BaseRequest }

// Get performs GET request for IdentityUserFlowAttributeAssignment
func (r *IdentityUserFlowAttributeAssignmentRequest) Get(ctx context.Context) (resObj *IdentityUserFlowAttributeAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityUserFlowAttributeAssignment
func (r *IdentityUserFlowAttributeAssignmentRequest) Update(ctx context.Context, reqObj *IdentityUserFlowAttributeAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityUserFlowAttributeAssignment
func (r *IdentityUserFlowAttributeAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder struct{ BaseRequestBuilder }

// SetOrder action undocumentedrav
func (b *B2cIdentityUserFlowUserAttributeAssignmentsCollectionRequestBuilder) SetOrder(reqObj *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestParameter) *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder {
	bb := &IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetOrder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SetOrder action undocumentedrav
func (b *B2xIdentityUserFlowUserAttributeAssignmentsCollectionRequestBuilder) SetOrder(reqObj *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestParameter) *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder {
	bb := &IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetOrder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IdentityUserFlowAttributeAssignmentCollectionSetOrderRequest struct{ BaseRequest }

func (b *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequestBuilder) Request() *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequest {
	return &IdentityUserFlowAttributeAssignmentCollectionSetOrderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IdentityUserFlowAttributeAssignmentCollectionSetOrderRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type IdentityAPIConnectorUploadClientCertificateRequestBuilder struct{ BaseRequestBuilder }

// UploadClientCertificate action undocumentedras
func (b *IdentityAPIConnectorRequestBuilder) UploadClientCertificate(reqObj *IdentityAPIConnectorUploadClientCertificateRequestParameter) *IdentityAPIConnectorUploadClientCertificateRequestBuilder {
	bb := &IdentityAPIConnectorUploadClientCertificateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/UploadClientCertificate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type IdentityAPIConnectorUploadClientCertificateRequest struct{ BaseRequest }

func (b *IdentityAPIConnectorUploadClientCertificateRequestBuilder) Request() *IdentityAPIConnectorUploadClientCertificateRequest {
	return &IdentityAPIConnectorUploadClientCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *IdentityAPIConnectorUploadClientCertificateRequest) Post(ctx context.Context) (resObj *IdentityAPIConnector, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
