
// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

// IdentityGovernanceCustomTaskExtensionRequestBuilder is request builder for IdentityGovernanceCustomTaskExtension
type IdentityGovernanceCustomTaskExtensionRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionRequest
func (b *IdentityGovernanceCustomTaskExtensionRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionRequest {
    return &IdentityGovernanceCustomTaskExtensionRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceCustomTaskExtensionRequest is request for IdentityGovernanceCustomTaskExtension
type IdentityGovernanceCustomTaskExtensionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtension
func (r *IdentityGovernanceCustomTaskExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
type IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest
func (b *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest {
    return &IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest is request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
type IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCallbackConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCallbackConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCallbackConfiguration
func (r *IdentityGovernanceCustomTaskExtensionCallbackConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCallbackData
type IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCallbackDataRequest
func (b *IdentityGovernanceCustomTaskExtensionCallbackDataRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCallbackDataRequest {
    return &IdentityGovernanceCustomTaskExtensionCallbackDataRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceCustomTaskExtensionCallbackDataRequest is request for IdentityGovernanceCustomTaskExtensionCallbackData
type IdentityGovernanceCustomTaskExtensionCallbackDataRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCallbackData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCallbackData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCallbackData
func (r *IdentityGovernanceCustomTaskExtensionCallbackDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder is request builder for IdentityGovernanceCustomTaskExtensionCalloutData
type IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceCustomTaskExtensionCalloutDataRequest
func (b *IdentityGovernanceCustomTaskExtensionCalloutDataRequestBuilder) Request() *IdentityGovernanceCustomTaskExtensionCalloutDataRequest {
    return &IdentityGovernanceCustomTaskExtensionCalloutDataRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceCustomTaskExtensionCalloutDataRequest is request for IdentityGovernanceCustomTaskExtensionCalloutData
type IdentityGovernanceCustomTaskExtensionCalloutDataRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Get(ctx context.Context) (resObj *IdentityGovernanceCustomTaskExtensionCalloutData, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Update(ctx context.Context, reqObj *IdentityGovernanceCustomTaskExtensionCalloutData) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceCustomTaskExtensionCalloutData
func (r *IdentityGovernanceCustomTaskExtensionCalloutDataRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceLifecycleManagementSettingsRequestBuilder is request builder for IdentityGovernanceLifecycleManagementSettings
type IdentityGovernanceLifecycleManagementSettingsRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceLifecycleManagementSettingsRequest
func (b *IdentityGovernanceLifecycleManagementSettingsRequestBuilder) Request() *IdentityGovernanceLifecycleManagementSettingsRequest {
    return &IdentityGovernanceLifecycleManagementSettingsRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceLifecycleManagementSettingsRequest is request for IdentityGovernanceLifecycleManagementSettings
type IdentityGovernanceLifecycleManagementSettingsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceLifecycleManagementSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceLifecycleManagementSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceLifecycleManagementSettings
func (r *IdentityGovernanceLifecycleManagementSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder is request builder for IdentityGovernanceLifecycleWorkflowsContainer
type IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceLifecycleWorkflowsContainerRequest
func (b *IdentityGovernanceLifecycleWorkflowsContainerRequestBuilder) Request() *IdentityGovernanceLifecycleWorkflowsContainerRequest {
    return &IdentityGovernanceLifecycleWorkflowsContainerRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceLifecycleWorkflowsContainerRequest is request for IdentityGovernanceLifecycleWorkflowsContainer
type IdentityGovernanceLifecycleWorkflowsContainerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceLifecycleWorkflowsContainer, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceLifecycleWorkflowsContainer) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceLifecycleWorkflowsContainer
func (r *IdentityGovernanceLifecycleWorkflowsContainerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceOnDemandExecutionOnlyRequestBuilder is request builder for IdentityGovernanceOnDemandExecutionOnly
type IdentityGovernanceOnDemandExecutionOnlyRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceOnDemandExecutionOnlyRequest
func (b *IdentityGovernanceOnDemandExecutionOnlyRequestBuilder) Request() *IdentityGovernanceOnDemandExecutionOnlyRequest {
    return &IdentityGovernanceOnDemandExecutionOnlyRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceOnDemandExecutionOnlyRequest is request for IdentityGovernanceOnDemandExecutionOnly
type IdentityGovernanceOnDemandExecutionOnlyRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Get(ctx context.Context) (resObj *IdentityGovernanceOnDemandExecutionOnly, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Update(ctx context.Context, reqObj *IdentityGovernanceOnDemandExecutionOnly) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceOnDemandExecutionOnly
func (r *IdentityGovernanceOnDemandExecutionOnlyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceParameterRequestBuilder is request builder for IdentityGovernanceParameter
type IdentityGovernanceParameterRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceParameterRequest
func (b *IdentityGovernanceParameterRequestBuilder) Request() *IdentityGovernanceParameterRequest {
    return &IdentityGovernanceParameterRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceParameterRequest is request for IdentityGovernanceParameter
type IdentityGovernanceParameterRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Get(ctx context.Context) (resObj *IdentityGovernanceParameter, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Update(ctx context.Context, reqObj *IdentityGovernanceParameter) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceParameter
func (r *IdentityGovernanceParameterRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceRuleBasedSubjectSetRequestBuilder is request builder for IdentityGovernanceRuleBasedSubjectSet
type IdentityGovernanceRuleBasedSubjectSetRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceRuleBasedSubjectSetRequest
func (b *IdentityGovernanceRuleBasedSubjectSetRequestBuilder) Request() *IdentityGovernanceRuleBasedSubjectSetRequest {
    return &IdentityGovernanceRuleBasedSubjectSetRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceRuleBasedSubjectSetRequest is request for IdentityGovernanceRuleBasedSubjectSet
type IdentityGovernanceRuleBasedSubjectSetRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRuleBasedSubjectSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRuleBasedSubjectSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRuleBasedSubjectSet
func (r *IdentityGovernanceRuleBasedSubjectSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceRunRequestBuilder is request builder for IdentityGovernanceRun
type IdentityGovernanceRunRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceRunRequest
func (b *IdentityGovernanceRunRequestBuilder) Request() *IdentityGovernanceRunRequest {
    return &IdentityGovernanceRunRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceRunRequest is request for IdentityGovernanceRun
type IdentityGovernanceRunRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRun, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRun) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRun
func (r *IdentityGovernanceRunRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceRunSummaryRequestBuilder is request builder for IdentityGovernanceRunSummary
type IdentityGovernanceRunSummaryRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceRunSummaryRequest
func (b *IdentityGovernanceRunSummaryRequestBuilder) Request() *IdentityGovernanceRunSummaryRequest {
    return &IdentityGovernanceRunSummaryRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceRunSummaryRequest is request for IdentityGovernanceRunSummary
type IdentityGovernanceRunSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceRunSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceRunSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceRunSummary
func (r *IdentityGovernanceRunSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTaskRequestBuilder is request builder for IdentityGovernanceTask
type IdentityGovernanceTaskRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTaskRequest
func (b *IdentityGovernanceTaskRequestBuilder) Request() *IdentityGovernanceTaskRequest {
    return &IdentityGovernanceTaskRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTaskRequest is request for IdentityGovernanceTask
type IdentityGovernanceTaskRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTask, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTask) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTask
func (r *IdentityGovernanceTaskRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTaskDefinitionRequestBuilder is request builder for IdentityGovernanceTaskDefinition
type IdentityGovernanceTaskDefinitionRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTaskDefinitionRequest
func (b *IdentityGovernanceTaskDefinitionRequestBuilder) Request() *IdentityGovernanceTaskDefinitionRequest {
    return &IdentityGovernanceTaskDefinitionRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTaskDefinitionRequest is request for IdentityGovernanceTaskDefinition
type IdentityGovernanceTaskDefinitionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskDefinition
func (r *IdentityGovernanceTaskDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTaskProcessingResultRequestBuilder is request builder for IdentityGovernanceTaskProcessingResult
type IdentityGovernanceTaskProcessingResultRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTaskProcessingResultRequest
func (b *IdentityGovernanceTaskProcessingResultRequestBuilder) Request() *IdentityGovernanceTaskProcessingResultRequest {
    return &IdentityGovernanceTaskProcessingResultRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTaskProcessingResultRequest is request for IdentityGovernanceTaskProcessingResult
type IdentityGovernanceTaskProcessingResultRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskProcessingResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskProcessingResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskProcessingResult
func (r *IdentityGovernanceTaskProcessingResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTaskReportRequestBuilder is request builder for IdentityGovernanceTaskReport
type IdentityGovernanceTaskReportRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTaskReportRequest
func (b *IdentityGovernanceTaskReportRequestBuilder) Request() *IdentityGovernanceTaskReportRequest {
    return &IdentityGovernanceTaskReportRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTaskReportRequest is request for IdentityGovernanceTaskReport
type IdentityGovernanceTaskReportRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskReport, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskReport) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskReport
func (r *IdentityGovernanceTaskReportRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTaskReportSummaryRequestBuilder is request builder for IdentityGovernanceTaskReportSummary
type IdentityGovernanceTaskReportSummaryRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTaskReportSummaryRequest
func (b *IdentityGovernanceTaskReportSummaryRequestBuilder) Request() *IdentityGovernanceTaskReportSummaryRequest {
    return &IdentityGovernanceTaskReportSummaryRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTaskReportSummaryRequest is request for IdentityGovernanceTaskReportSummary
type IdentityGovernanceTaskReportSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTaskReportSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTaskReportSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTaskReportSummary
func (r *IdentityGovernanceTaskReportSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder is request builder for IdentityGovernanceTimeBasedAttributeTrigger
type IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTimeBasedAttributeTriggerRequest
func (b *IdentityGovernanceTimeBasedAttributeTriggerRequestBuilder) Request() *IdentityGovernanceTimeBasedAttributeTriggerRequest {
    return &IdentityGovernanceTimeBasedAttributeTriggerRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTimeBasedAttributeTriggerRequest is request for IdentityGovernanceTimeBasedAttributeTrigger
type IdentityGovernanceTimeBasedAttributeTriggerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTimeBasedAttributeTrigger, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTimeBasedAttributeTrigger) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTimeBasedAttributeTrigger
func (r *IdentityGovernanceTimeBasedAttributeTriggerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder is request builder for IdentityGovernanceTriggerAndScopeBasedConditions
type IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceTriggerAndScopeBasedConditionsRequest
func (b *IdentityGovernanceTriggerAndScopeBasedConditionsRequestBuilder) Request() *IdentityGovernanceTriggerAndScopeBasedConditionsRequest {
    return &IdentityGovernanceTriggerAndScopeBasedConditionsRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceTriggerAndScopeBasedConditionsRequest is request for IdentityGovernanceTriggerAndScopeBasedConditions
type IdentityGovernanceTriggerAndScopeBasedConditionsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceTriggerAndScopeBasedConditions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceTriggerAndScopeBasedConditions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceTriggerAndScopeBasedConditions
func (r *IdentityGovernanceTriggerAndScopeBasedConditionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceUserProcessingResultRequestBuilder is request builder for IdentityGovernanceUserProcessingResult
type IdentityGovernanceUserProcessingResultRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceUserProcessingResultRequest
func (b *IdentityGovernanceUserProcessingResultRequestBuilder) Request() *IdentityGovernanceUserProcessingResultRequest {
    return &IdentityGovernanceUserProcessingResultRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceUserProcessingResultRequest is request for IdentityGovernanceUserProcessingResult
type IdentityGovernanceUserProcessingResultRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUserProcessingResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUserProcessingResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUserProcessingResult
func (r *IdentityGovernanceUserProcessingResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceUserSummaryRequestBuilder is request builder for IdentityGovernanceUserSummary
type IdentityGovernanceUserSummaryRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceUserSummaryRequest
func (b *IdentityGovernanceUserSummaryRequestBuilder) Request() *IdentityGovernanceUserSummaryRequest {
    return &IdentityGovernanceUserSummaryRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceUserSummaryRequest is request for IdentityGovernanceUserSummary
type IdentityGovernanceUserSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUserSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUserSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUserSummary
func (r *IdentityGovernanceUserSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceUsersProcessingSummaryRequestBuilder is request builder for IdentityGovernanceUsersProcessingSummary
type IdentityGovernanceUsersProcessingSummaryRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceUsersProcessingSummaryRequest
func (b *IdentityGovernanceUsersProcessingSummaryRequestBuilder) Request() *IdentityGovernanceUsersProcessingSummaryRequest {
    return &IdentityGovernanceUsersProcessingSummaryRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceUsersProcessingSummaryRequest is request for IdentityGovernanceUsersProcessingSummary
type IdentityGovernanceUsersProcessingSummaryRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Get(ctx context.Context) (resObj *IdentityGovernanceUsersProcessingSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Update(ctx context.Context, reqObj *IdentityGovernanceUsersProcessingSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceUsersProcessingSummary
func (r *IdentityGovernanceUsersProcessingSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowRequestBuilder is request builder for IdentityGovernanceWorkflow
type IdentityGovernanceWorkflowRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowRequest
func (b *IdentityGovernanceWorkflowRequestBuilder) Request() *IdentityGovernanceWorkflowRequest {
    return &IdentityGovernanceWorkflowRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowRequest is request for IdentityGovernanceWorkflow
type IdentityGovernanceWorkflowRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflow
func (r *IdentityGovernanceWorkflowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowBaseRequestBuilder is request builder for IdentityGovernanceWorkflowBase
type IdentityGovernanceWorkflowBaseRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowBaseRequest
func (b *IdentityGovernanceWorkflowBaseRequestBuilder) Request() *IdentityGovernanceWorkflowBaseRequest {
    return &IdentityGovernanceWorkflowBaseRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowBaseRequest is request for IdentityGovernanceWorkflowBase
type IdentityGovernanceWorkflowBaseRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowBase
func (r *IdentityGovernanceWorkflowBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowExecutionConditionsRequestBuilder is request builder for IdentityGovernanceWorkflowExecutionConditions
type IdentityGovernanceWorkflowExecutionConditionsRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowExecutionConditionsRequest
func (b *IdentityGovernanceWorkflowExecutionConditionsRequestBuilder) Request() *IdentityGovernanceWorkflowExecutionConditionsRequest {
    return &IdentityGovernanceWorkflowExecutionConditionsRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowExecutionConditionsRequest is request for IdentityGovernanceWorkflowExecutionConditions
type IdentityGovernanceWorkflowExecutionConditionsRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowExecutionConditions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowExecutionConditions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowExecutionConditions
func (r *IdentityGovernanceWorkflowExecutionConditionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowExecutionTriggerRequestBuilder is request builder for IdentityGovernanceWorkflowExecutionTrigger
type IdentityGovernanceWorkflowExecutionTriggerRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowExecutionTriggerRequest
func (b *IdentityGovernanceWorkflowExecutionTriggerRequestBuilder) Request() *IdentityGovernanceWorkflowExecutionTriggerRequest {
    return &IdentityGovernanceWorkflowExecutionTriggerRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowExecutionTriggerRequest is request for IdentityGovernanceWorkflowExecutionTrigger
type IdentityGovernanceWorkflowExecutionTriggerRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowExecutionTrigger, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowExecutionTrigger) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowExecutionTrigger
func (r *IdentityGovernanceWorkflowExecutionTriggerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowTemplateRequestBuilder is request builder for IdentityGovernanceWorkflowTemplate
type IdentityGovernanceWorkflowTemplateRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowTemplateRequest
func (b *IdentityGovernanceWorkflowTemplateRequestBuilder) Request() *IdentityGovernanceWorkflowTemplateRequest {
    return &IdentityGovernanceWorkflowTemplateRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowTemplateRequest is request for IdentityGovernanceWorkflowTemplate
type IdentityGovernanceWorkflowTemplateRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowTemplate
func (r *IdentityGovernanceWorkflowTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
// IdentityGovernanceWorkflowVersionRequestBuilder is request builder for IdentityGovernanceWorkflowVersion
type IdentityGovernanceWorkflowVersionRequestBuilder struct { BaseRequestBuilder }

// Request returns IdentityGovernanceWorkflowVersionRequest
func (b *IdentityGovernanceWorkflowVersionRequestBuilder) Request() *IdentityGovernanceWorkflowVersionRequest {
    return &IdentityGovernanceWorkflowVersionRequest{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// IdentityGovernanceWorkflowVersionRequest is request for IdentityGovernanceWorkflowVersion
type IdentityGovernanceWorkflowVersionRequest struct{ BaseRequest }

// Get performs GET request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Get(ctx context.Context) (resObj *IdentityGovernanceWorkflowVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Update(ctx context.Context, reqObj *IdentityGovernanceWorkflowVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityGovernanceWorkflowVersion
func (r *IdentityGovernanceWorkflowVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
