// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// EdiscoveryEdiscoveryrootRequestBuilder is request builder for EdiscoveryEdiscoveryroot
type EdiscoveryEdiscoveryrootRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryEdiscoveryrootRequest
func (b *EdiscoveryEdiscoveryrootRequestBuilder) Request() *EdiscoveryEdiscoveryrootRequest {
	return &EdiscoveryEdiscoveryrootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryEdiscoveryrootRequest is request for EdiscoveryEdiscoveryroot
type EdiscoveryEdiscoveryrootRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryEdiscoveryroot
func (r *EdiscoveryEdiscoveryrootRequest) Get(ctx context.Context) (resObj *EdiscoveryEdiscoveryroot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryEdiscoveryroot
func (r *EdiscoveryEdiscoveryrootRequest) Update(ctx context.Context, reqObj *EdiscoveryEdiscoveryroot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryEdiscoveryroot
func (r *EdiscoveryEdiscoveryrootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryAddToReviewSetOperationRequestBuilder is request builder for EdiscoveryAddToReviewSetOperation
type EdiscoveryAddToReviewSetOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryAddToReviewSetOperationRequest
func (b *EdiscoveryAddToReviewSetOperationRequestBuilder) Request() *EdiscoveryAddToReviewSetOperationRequest {
	return &EdiscoveryAddToReviewSetOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryAddToReviewSetOperationRequest is request for EdiscoveryAddToReviewSetOperation
type EdiscoveryAddToReviewSetOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryAddToReviewSetOperation
func (r *EdiscoveryAddToReviewSetOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryAddToReviewSetOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryAddToReviewSetOperation
func (r *EdiscoveryAddToReviewSetOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryAddToReviewSetOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryAddToReviewSetOperation
func (r *EdiscoveryAddToReviewSetOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseRequestBuilder is request builder for EdiscoveryCase
type EdiscoveryCaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseRequest
func (b *EdiscoveryCaseRequestBuilder) Request() *EdiscoveryCaseRequest {
	return &EdiscoveryCaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseRequest is request for EdiscoveryCase
type EdiscoveryCaseRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCase
func (r *EdiscoveryCaseRequest) Get(ctx context.Context) (resObj *EdiscoveryCase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCase
func (r *EdiscoveryCaseRequest) Update(ctx context.Context, reqObj *EdiscoveryCase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCase
func (r *EdiscoveryCaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseExportOperationRequestBuilder is request builder for EdiscoveryCaseExportOperation
type EdiscoveryCaseExportOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseExportOperationRequest
func (b *EdiscoveryCaseExportOperationRequestBuilder) Request() *EdiscoveryCaseExportOperationRequest {
	return &EdiscoveryCaseExportOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseExportOperationRequest is request for EdiscoveryCaseExportOperation
type EdiscoveryCaseExportOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCaseExportOperation
func (r *EdiscoveryCaseExportOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryCaseExportOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCaseExportOperation
func (r *EdiscoveryCaseExportOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryCaseExportOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCaseExportOperation
func (r *EdiscoveryCaseExportOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseHoldOperationRequestBuilder is request builder for EdiscoveryCaseHoldOperation
type EdiscoveryCaseHoldOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseHoldOperationRequest
func (b *EdiscoveryCaseHoldOperationRequestBuilder) Request() *EdiscoveryCaseHoldOperationRequest {
	return &EdiscoveryCaseHoldOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseHoldOperationRequest is request for EdiscoveryCaseHoldOperation
type EdiscoveryCaseHoldOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCaseHoldOperation
func (r *EdiscoveryCaseHoldOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryCaseHoldOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCaseHoldOperation
func (r *EdiscoveryCaseHoldOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryCaseHoldOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCaseHoldOperation
func (r *EdiscoveryCaseHoldOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseIndexOperationRequestBuilder is request builder for EdiscoveryCaseIndexOperation
type EdiscoveryCaseIndexOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseIndexOperationRequest
func (b *EdiscoveryCaseIndexOperationRequestBuilder) Request() *EdiscoveryCaseIndexOperationRequest {
	return &EdiscoveryCaseIndexOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseIndexOperationRequest is request for EdiscoveryCaseIndexOperation
type EdiscoveryCaseIndexOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCaseIndexOperation
func (r *EdiscoveryCaseIndexOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryCaseIndexOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCaseIndexOperation
func (r *EdiscoveryCaseIndexOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryCaseIndexOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCaseIndexOperation
func (r *EdiscoveryCaseIndexOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseOperationRequestBuilder is request builder for EdiscoveryCaseOperation
type EdiscoveryCaseOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseOperationRequest
func (b *EdiscoveryCaseOperationRequestBuilder) Request() *EdiscoveryCaseOperationRequest {
	return &EdiscoveryCaseOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseOperationRequest is request for EdiscoveryCaseOperation
type EdiscoveryCaseOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCaseOperation
func (r *EdiscoveryCaseOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryCaseOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCaseOperation
func (r *EdiscoveryCaseOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryCaseOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCaseOperation
func (r *EdiscoveryCaseOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCaseSettingsRequestBuilder is request builder for EdiscoveryCaseSettings
type EdiscoveryCaseSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCaseSettingsRequest
func (b *EdiscoveryCaseSettingsRequestBuilder) Request() *EdiscoveryCaseSettingsRequest {
	return &EdiscoveryCaseSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCaseSettingsRequest is request for EdiscoveryCaseSettings
type EdiscoveryCaseSettingsRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCaseSettings
func (r *EdiscoveryCaseSettingsRequest) Get(ctx context.Context) (resObj *EdiscoveryCaseSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCaseSettings
func (r *EdiscoveryCaseSettingsRequest) Update(ctx context.Context, reqObj *EdiscoveryCaseSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCaseSettings
func (r *EdiscoveryCaseSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryCustodianRequestBuilder is request builder for EdiscoveryCustodian
type EdiscoveryCustodianRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryCustodianRequest
func (b *EdiscoveryCustodianRequestBuilder) Request() *EdiscoveryCustodianRequest {
	return &EdiscoveryCustodianRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryCustodianRequest is request for EdiscoveryCustodian
type EdiscoveryCustodianRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryCustodian
func (r *EdiscoveryCustodianRequest) Get(ctx context.Context) (resObj *EdiscoveryCustodian, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryCustodian
func (r *EdiscoveryCustodianRequest) Update(ctx context.Context, reqObj *EdiscoveryCustodian) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryCustodian
func (r *EdiscoveryCustodianRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryDataSourceRequestBuilder is request builder for EdiscoveryDataSource
type EdiscoveryDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryDataSourceRequest
func (b *EdiscoveryDataSourceRequestBuilder) Request() *EdiscoveryDataSourceRequest {
	return &EdiscoveryDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryDataSourceRequest is request for EdiscoveryDataSource
type EdiscoveryDataSourceRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryDataSource
func (r *EdiscoveryDataSourceRequest) Get(ctx context.Context) (resObj *EdiscoveryDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryDataSource
func (r *EdiscoveryDataSourceRequest) Update(ctx context.Context, reqObj *EdiscoveryDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryDataSource
func (r *EdiscoveryDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryDataSourceContainerRequestBuilder is request builder for EdiscoveryDataSourceContainer
type EdiscoveryDataSourceContainerRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryDataSourceContainerRequest
func (b *EdiscoveryDataSourceContainerRequestBuilder) Request() *EdiscoveryDataSourceContainerRequest {
	return &EdiscoveryDataSourceContainerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryDataSourceContainerRequest is request for EdiscoveryDataSourceContainer
type EdiscoveryDataSourceContainerRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryDataSourceContainer
func (r *EdiscoveryDataSourceContainerRequest) Get(ctx context.Context) (resObj *EdiscoveryDataSourceContainer, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryDataSourceContainer
func (r *EdiscoveryDataSourceContainerRequest) Update(ctx context.Context, reqObj *EdiscoveryDataSourceContainer) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryDataSourceContainer
func (r *EdiscoveryDataSourceContainerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryEstimateStatisticsOperationRequestBuilder is request builder for EdiscoveryEstimateStatisticsOperation
type EdiscoveryEstimateStatisticsOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryEstimateStatisticsOperationRequest
func (b *EdiscoveryEstimateStatisticsOperationRequestBuilder) Request() *EdiscoveryEstimateStatisticsOperationRequest {
	return &EdiscoveryEstimateStatisticsOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryEstimateStatisticsOperationRequest is request for EdiscoveryEstimateStatisticsOperation
type EdiscoveryEstimateStatisticsOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryEstimateStatisticsOperation
func (r *EdiscoveryEstimateStatisticsOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryEstimateStatisticsOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryEstimateStatisticsOperation
func (r *EdiscoveryEstimateStatisticsOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryEstimateStatisticsOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryEstimateStatisticsOperation
func (r *EdiscoveryEstimateStatisticsOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryLegalHoldRequestBuilder is request builder for EdiscoveryLegalHold
type EdiscoveryLegalHoldRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryLegalHoldRequest
func (b *EdiscoveryLegalHoldRequestBuilder) Request() *EdiscoveryLegalHoldRequest {
	return &EdiscoveryLegalHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryLegalHoldRequest is request for EdiscoveryLegalHold
type EdiscoveryLegalHoldRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryLegalHold
func (r *EdiscoveryLegalHoldRequest) Get(ctx context.Context) (resObj *EdiscoveryLegalHold, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryLegalHold
func (r *EdiscoveryLegalHoldRequest) Update(ctx context.Context, reqObj *EdiscoveryLegalHold) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryLegalHold
func (r *EdiscoveryLegalHoldRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryNoncustodialDataSourceRequestBuilder is request builder for EdiscoveryNoncustodialDataSource
type EdiscoveryNoncustodialDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryNoncustodialDataSourceRequest
func (b *EdiscoveryNoncustodialDataSourceRequestBuilder) Request() *EdiscoveryNoncustodialDataSourceRequest {
	return &EdiscoveryNoncustodialDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryNoncustodialDataSourceRequest is request for EdiscoveryNoncustodialDataSource
type EdiscoveryNoncustodialDataSourceRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryNoncustodialDataSource
func (r *EdiscoveryNoncustodialDataSourceRequest) Get(ctx context.Context) (resObj *EdiscoveryNoncustodialDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryNoncustodialDataSource
func (r *EdiscoveryNoncustodialDataSourceRequest) Update(ctx context.Context, reqObj *EdiscoveryNoncustodialDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryNoncustodialDataSource
func (r *EdiscoveryNoncustodialDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryOcrSettingsRequestBuilder is request builder for EdiscoveryOcrSettings
type EdiscoveryOcrSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryOcrSettingsRequest
func (b *EdiscoveryOcrSettingsRequestBuilder) Request() *EdiscoveryOcrSettingsRequest {
	return &EdiscoveryOcrSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryOcrSettingsRequest is request for EdiscoveryOcrSettings
type EdiscoveryOcrSettingsRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryOcrSettings
func (r *EdiscoveryOcrSettingsRequest) Get(ctx context.Context) (resObj *EdiscoveryOcrSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryOcrSettings
func (r *EdiscoveryOcrSettingsRequest) Update(ctx context.Context, reqObj *EdiscoveryOcrSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryOcrSettings
func (r *EdiscoveryOcrSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryPurgeDataOperationRequestBuilder is request builder for EdiscoveryPurgeDataOperation
type EdiscoveryPurgeDataOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryPurgeDataOperationRequest
func (b *EdiscoveryPurgeDataOperationRequestBuilder) Request() *EdiscoveryPurgeDataOperationRequest {
	return &EdiscoveryPurgeDataOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryPurgeDataOperationRequest is request for EdiscoveryPurgeDataOperation
type EdiscoveryPurgeDataOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryPurgeDataOperation
func (r *EdiscoveryPurgeDataOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryPurgeDataOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryPurgeDataOperation
func (r *EdiscoveryPurgeDataOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryPurgeDataOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryPurgeDataOperation
func (r *EdiscoveryPurgeDataOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryRedundancyDetectionSettingsRequestBuilder is request builder for EdiscoveryRedundancyDetectionSettings
type EdiscoveryRedundancyDetectionSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryRedundancyDetectionSettingsRequest
func (b *EdiscoveryRedundancyDetectionSettingsRequestBuilder) Request() *EdiscoveryRedundancyDetectionSettingsRequest {
	return &EdiscoveryRedundancyDetectionSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryRedundancyDetectionSettingsRequest is request for EdiscoveryRedundancyDetectionSettings
type EdiscoveryRedundancyDetectionSettingsRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryRedundancyDetectionSettings
func (r *EdiscoveryRedundancyDetectionSettingsRequest) Get(ctx context.Context) (resObj *EdiscoveryRedundancyDetectionSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryRedundancyDetectionSettings
func (r *EdiscoveryRedundancyDetectionSettingsRequest) Update(ctx context.Context, reqObj *EdiscoveryRedundancyDetectionSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryRedundancyDetectionSettings
func (r *EdiscoveryRedundancyDetectionSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryReviewSetRequestBuilder is request builder for EdiscoveryReviewSet
type EdiscoveryReviewSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryReviewSetRequest
func (b *EdiscoveryReviewSetRequestBuilder) Request() *EdiscoveryReviewSetRequest {
	return &EdiscoveryReviewSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryReviewSetRequest is request for EdiscoveryReviewSet
type EdiscoveryReviewSetRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryReviewSet
func (r *EdiscoveryReviewSetRequest) Get(ctx context.Context) (resObj *EdiscoveryReviewSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryReviewSet
func (r *EdiscoveryReviewSetRequest) Update(ctx context.Context, reqObj *EdiscoveryReviewSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryReviewSet
func (r *EdiscoveryReviewSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryReviewSetQueryRequestBuilder is request builder for EdiscoveryReviewSetQuery
type EdiscoveryReviewSetQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryReviewSetQueryRequest
func (b *EdiscoveryReviewSetQueryRequestBuilder) Request() *EdiscoveryReviewSetQueryRequest {
	return &EdiscoveryReviewSetQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryReviewSetQueryRequest is request for EdiscoveryReviewSetQuery
type EdiscoveryReviewSetQueryRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryReviewSetQuery
func (r *EdiscoveryReviewSetQueryRequest) Get(ctx context.Context) (resObj *EdiscoveryReviewSetQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryReviewSetQuery
func (r *EdiscoveryReviewSetQueryRequest) Update(ctx context.Context, reqObj *EdiscoveryReviewSetQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryReviewSetQuery
func (r *EdiscoveryReviewSetQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoverySiteSourceRequestBuilder is request builder for EdiscoverySiteSource
type EdiscoverySiteSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoverySiteSourceRequest
func (b *EdiscoverySiteSourceRequestBuilder) Request() *EdiscoverySiteSourceRequest {
	return &EdiscoverySiteSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoverySiteSourceRequest is request for EdiscoverySiteSource
type EdiscoverySiteSourceRequest struct{ BaseRequest }

// Get performs GET request for EdiscoverySiteSource
func (r *EdiscoverySiteSourceRequest) Get(ctx context.Context) (resObj *EdiscoverySiteSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoverySiteSource
func (r *EdiscoverySiteSourceRequest) Update(ctx context.Context, reqObj *EdiscoverySiteSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoverySiteSource
func (r *EdiscoverySiteSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoverySourceCollectionRequestBuilder is request builder for EdiscoverySourceCollection
type EdiscoverySourceCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoverySourceCollectionRequest
func (b *EdiscoverySourceCollectionRequestBuilder) Request() *EdiscoverySourceCollectionRequest {
	return &EdiscoverySourceCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoverySourceCollectionRequest is request for EdiscoverySourceCollection
type EdiscoverySourceCollectionRequest struct{ BaseRequest }

// Get performs GET request for EdiscoverySourceCollection
func (r *EdiscoverySourceCollectionRequest) Get(ctx context.Context) (resObj *EdiscoverySourceCollection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoverySourceCollection
func (r *EdiscoverySourceCollectionRequest) Update(ctx context.Context, reqObj *EdiscoverySourceCollection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoverySourceCollection
func (r *EdiscoverySourceCollectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryTagRequestBuilder is request builder for EdiscoveryTag
type EdiscoveryTagRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryTagRequest
func (b *EdiscoveryTagRequestBuilder) Request() *EdiscoveryTagRequest {
	return &EdiscoveryTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryTagRequest is request for EdiscoveryTag
type EdiscoveryTagRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryTag
func (r *EdiscoveryTagRequest) Get(ctx context.Context) (resObj *EdiscoveryTag, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryTag
func (r *EdiscoveryTagRequest) Update(ctx context.Context, reqObj *EdiscoveryTag) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryTag
func (r *EdiscoveryTagRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryTagOperationRequestBuilder is request builder for EdiscoveryTagOperation
type EdiscoveryTagOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryTagOperationRequest
func (b *EdiscoveryTagOperationRequestBuilder) Request() *EdiscoveryTagOperationRequest {
	return &EdiscoveryTagOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryTagOperationRequest is request for EdiscoveryTagOperation
type EdiscoveryTagOperationRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryTagOperation
func (r *EdiscoveryTagOperationRequest) Get(ctx context.Context) (resObj *EdiscoveryTagOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryTagOperation
func (r *EdiscoveryTagOperationRequest) Update(ctx context.Context, reqObj *EdiscoveryTagOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryTagOperation
func (r *EdiscoveryTagOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryTopicModelingSettingsRequestBuilder is request builder for EdiscoveryTopicModelingSettings
type EdiscoveryTopicModelingSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryTopicModelingSettingsRequest
func (b *EdiscoveryTopicModelingSettingsRequestBuilder) Request() *EdiscoveryTopicModelingSettingsRequest {
	return &EdiscoveryTopicModelingSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryTopicModelingSettingsRequest is request for EdiscoveryTopicModelingSettings
type EdiscoveryTopicModelingSettingsRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryTopicModelingSettings
func (r *EdiscoveryTopicModelingSettingsRequest) Get(ctx context.Context) (resObj *EdiscoveryTopicModelingSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryTopicModelingSettings
func (r *EdiscoveryTopicModelingSettingsRequest) Update(ctx context.Context, reqObj *EdiscoveryTopicModelingSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryTopicModelingSettings
func (r *EdiscoveryTopicModelingSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryUnifiedGroupSourceRequestBuilder is request builder for EdiscoveryUnifiedGroupSource
type EdiscoveryUnifiedGroupSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryUnifiedGroupSourceRequest
func (b *EdiscoveryUnifiedGroupSourceRequestBuilder) Request() *EdiscoveryUnifiedGroupSourceRequest {
	return &EdiscoveryUnifiedGroupSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryUnifiedGroupSourceRequest is request for EdiscoveryUnifiedGroupSource
type EdiscoveryUnifiedGroupSourceRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryUnifiedGroupSource
func (r *EdiscoveryUnifiedGroupSourceRequest) Get(ctx context.Context) (resObj *EdiscoveryUnifiedGroupSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryUnifiedGroupSource
func (r *EdiscoveryUnifiedGroupSourceRequest) Update(ctx context.Context, reqObj *EdiscoveryUnifiedGroupSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryUnifiedGroupSource
func (r *EdiscoveryUnifiedGroupSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdiscoveryUserSourceRequestBuilder is request builder for EdiscoveryUserSource
type EdiscoveryUserSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdiscoveryUserSourceRequest
func (b *EdiscoveryUserSourceRequestBuilder) Request() *EdiscoveryUserSourceRequest {
	return &EdiscoveryUserSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdiscoveryUserSourceRequest is request for EdiscoveryUserSource
type EdiscoveryUserSourceRequest struct{ BaseRequest }

// Get performs GET request for EdiscoveryUserSource
func (r *EdiscoveryUserSourceRequest) Get(ctx context.Context) (resObj *EdiscoveryUserSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdiscoveryUserSource
func (r *EdiscoveryUserSourceRequest) Update(ctx context.Context, reqObj *EdiscoveryUserSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdiscoveryUserSource
func (r *EdiscoveryUserSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// EdiscoveryApplyHold action undocumentedrav
func (b *EdiscoveryCaseCustodiansCollectionRequestBuilder) EdiscoveryApplyHold(reqObj *EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequestParameter) *EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequestBuilder {
	bb := &EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequest struct{ BaseRequest }

func (b *EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequestBuilder) Request() *EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequest {
	return &EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EdiscoveryCustodianCollectionEdiscoveryApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// EdiscoveryRemoveHold action undocumentedrav
func (b *EdiscoveryCaseCustodiansCollectionRequestBuilder) EdiscoveryRemoveHold(reqObj *EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequestParameter) *EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequestBuilder {
	bb := &EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequest struct{ BaseRequest }

func (b *EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequestBuilder) Request() *EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequest {
	return &EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EdiscoveryCustodianCollectionEdiscoveryRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// EdiscoveryApplyHold action undocumentedrav
func (b *EdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) EdiscoveryApplyHold(reqObj *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestParameter) *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder {
	bb := &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// EdiscoveryApplyHold action undocumentedrav
func (b *EdiscoverySourceCollectionNoncustodialSourcesCollectionRequestBuilder) EdiscoveryApplyHold(reqObj *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestParameter) *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder {
	bb := &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequest struct{ BaseRequest }

func (b *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequestBuilder) Request() *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequest {
	return &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// EdiscoveryRemoveHold action undocumentedrav
func (b *EdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) EdiscoveryRemoveHold(reqObj *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestParameter) *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder {
	bb := &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// EdiscoveryRemoveHold action undocumentedrav
func (b *EdiscoverySourceCollectionNoncustodialSourcesCollectionRequestBuilder) EdiscoveryRemoveHold(reqObj *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestParameter) *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder {
	bb := &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/EdiscoveryRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequest struct{ BaseRequest }

func (b *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequestBuilder) Request() *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequest {
	return &EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *EdiscoveryNoncustodialDataSourceCollectionEdiscoveryRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
