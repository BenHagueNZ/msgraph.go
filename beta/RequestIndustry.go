// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IndustryDataAggregatedInboundStatisticsRequestBuilder is request builder for IndustryDataAggregatedInboundStatistics
type IndustryDataAggregatedInboundStatisticsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataAggregatedInboundStatisticsRequest
func (b *IndustryDataAggregatedInboundStatisticsRequestBuilder) Request() *IndustryDataAggregatedInboundStatisticsRequest {
	return &IndustryDataAggregatedInboundStatisticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataAggregatedInboundStatisticsRequest is request for IndustryDataAggregatedInboundStatistics
type IndustryDataAggregatedInboundStatisticsRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataAggregatedInboundStatistics
func (r *IndustryDataAggregatedInboundStatisticsRequest) Get(ctx context.Context) (resObj *IndustryDataAggregatedInboundStatistics, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataAggregatedInboundStatistics
func (r *IndustryDataAggregatedInboundStatisticsRequest) Update(ctx context.Context, reqObj *IndustryDataAggregatedInboundStatistics) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataAggregatedInboundStatistics
func (r *IndustryDataAggregatedInboundStatisticsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataAzureDataLakeConnectorRequestBuilder is request builder for IndustryDataAzureDataLakeConnector
type IndustryDataAzureDataLakeConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataAzureDataLakeConnectorRequest
func (b *IndustryDataAzureDataLakeConnectorRequestBuilder) Request() *IndustryDataAzureDataLakeConnectorRequest {
	return &IndustryDataAzureDataLakeConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataAzureDataLakeConnectorRequest is request for IndustryDataAzureDataLakeConnector
type IndustryDataAzureDataLakeConnectorRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataAzureDataLakeConnector
func (r *IndustryDataAzureDataLakeConnectorRequest) Get(ctx context.Context) (resObj *IndustryDataAzureDataLakeConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataAzureDataLakeConnector
func (r *IndustryDataAzureDataLakeConnectorRequest) Update(ctx context.Context, reqObj *IndustryDataAzureDataLakeConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataAzureDataLakeConnector
func (r *IndustryDataAzureDataLakeConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataFileDataConnectorRequestBuilder is request builder for IndustryDataFileDataConnector
type IndustryDataFileDataConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataFileDataConnectorRequest
func (b *IndustryDataFileDataConnectorRequestBuilder) Request() *IndustryDataFileDataConnectorRequest {
	return &IndustryDataFileDataConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataFileDataConnectorRequest is request for IndustryDataFileDataConnector
type IndustryDataFileDataConnectorRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataFileDataConnector
func (r *IndustryDataFileDataConnectorRequest) Get(ctx context.Context) (resObj *IndustryDataFileDataConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataFileDataConnector
func (r *IndustryDataFileDataConnectorRequest) Update(ctx context.Context, reqObj *IndustryDataFileDataConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataFileDataConnector
func (r *IndustryDataFileDataConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataFileUploadSessionRequestBuilder is request builder for IndustryDataFileUploadSession
type IndustryDataFileUploadSessionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataFileUploadSessionRequest
func (b *IndustryDataFileUploadSessionRequestBuilder) Request() *IndustryDataFileUploadSessionRequest {
	return &IndustryDataFileUploadSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataFileUploadSessionRequest is request for IndustryDataFileUploadSession
type IndustryDataFileUploadSessionRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataFileUploadSession
func (r *IndustryDataFileUploadSessionRequest) Get(ctx context.Context) (resObj *IndustryDataFileUploadSession, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataFileUploadSession
func (r *IndustryDataFileUploadSessionRequest) Update(ctx context.Context, reqObj *IndustryDataFileUploadSession) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataFileUploadSession
func (r *IndustryDataFileUploadSessionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataFileValidateOperationRequestBuilder is request builder for IndustryDataFileValidateOperation
type IndustryDataFileValidateOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataFileValidateOperationRequest
func (b *IndustryDataFileValidateOperationRequestBuilder) Request() *IndustryDataFileValidateOperationRequest {
	return &IndustryDataFileValidateOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataFileValidateOperationRequest is request for IndustryDataFileValidateOperation
type IndustryDataFileValidateOperationRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataFileValidateOperation
func (r *IndustryDataFileValidateOperationRequest) Get(ctx context.Context) (resObj *IndustryDataFileValidateOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataFileValidateOperation
func (r *IndustryDataFileValidateOperationRequest) Update(ctx context.Context, reqObj *IndustryDataFileValidateOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataFileValidateOperation
func (r *IndustryDataFileValidateOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIdentifierTypeReferenceValueRequestBuilder is request builder for IndustryDataIdentifierTypeReferenceValue
type IndustryDataIdentifierTypeReferenceValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIdentifierTypeReferenceValueRequest
func (b *IndustryDataIdentifierTypeReferenceValueRequestBuilder) Request() *IndustryDataIdentifierTypeReferenceValueRequest {
	return &IndustryDataIdentifierTypeReferenceValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIdentifierTypeReferenceValueRequest is request for IndustryDataIdentifierTypeReferenceValue
type IndustryDataIdentifierTypeReferenceValueRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIdentifierTypeReferenceValue
func (r *IndustryDataIdentifierTypeReferenceValueRequest) Get(ctx context.Context) (resObj *IndustryDataIdentifierTypeReferenceValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIdentifierTypeReferenceValue
func (r *IndustryDataIdentifierTypeReferenceValueRequest) Update(ctx context.Context, reqObj *IndustryDataIdentifierTypeReferenceValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIdentifierTypeReferenceValue
func (r *IndustryDataIdentifierTypeReferenceValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataInboundActivityResultsRequestBuilder is request builder for IndustryDataInboundActivityResults
type IndustryDataInboundActivityResultsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataInboundActivityResultsRequest
func (b *IndustryDataInboundActivityResultsRequestBuilder) Request() *IndustryDataInboundActivityResultsRequest {
	return &IndustryDataInboundActivityResultsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataInboundActivityResultsRequest is request for IndustryDataInboundActivityResults
type IndustryDataInboundActivityResultsRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataInboundActivityResults
func (r *IndustryDataInboundActivityResultsRequest) Get(ctx context.Context) (resObj *IndustryDataInboundActivityResults, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataInboundActivityResults
func (r *IndustryDataInboundActivityResultsRequest) Update(ctx context.Context, reqObj *IndustryDataInboundActivityResults) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataInboundActivityResults
func (r *IndustryDataInboundActivityResultsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataInboundFileFlowRequestBuilder is request builder for IndustryDataInboundFileFlow
type IndustryDataInboundFileFlowRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataInboundFileFlowRequest
func (b *IndustryDataInboundFileFlowRequestBuilder) Request() *IndustryDataInboundFileFlowRequest {
	return &IndustryDataInboundFileFlowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataInboundFileFlowRequest is request for IndustryDataInboundFileFlow
type IndustryDataInboundFileFlowRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataInboundFileFlow
func (r *IndustryDataInboundFileFlowRequest) Get(ctx context.Context) (resObj *IndustryDataInboundFileFlow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataInboundFileFlow
func (r *IndustryDataInboundFileFlowRequest) Update(ctx context.Context, reqObj *IndustryDataInboundFileFlow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataInboundFileFlow
func (r *IndustryDataInboundFileFlowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataInboundFlowRequestBuilder is request builder for IndustryDataInboundFlow
type IndustryDataInboundFlowRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataInboundFlowRequest
func (b *IndustryDataInboundFlowRequestBuilder) Request() *IndustryDataInboundFlowRequest {
	return &IndustryDataInboundFlowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataInboundFlowRequest is request for IndustryDataInboundFlow
type IndustryDataInboundFlowRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataInboundFlow
func (r *IndustryDataInboundFlowRequest) Get(ctx context.Context) (resObj *IndustryDataInboundFlow, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataInboundFlow
func (r *IndustryDataInboundFlowRequest) Update(ctx context.Context, reqObj *IndustryDataInboundFlow) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataInboundFlow
func (r *IndustryDataInboundFlowRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataInboundFlowActivityRequestBuilder is request builder for IndustryDataInboundFlowActivity
type IndustryDataInboundFlowActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataInboundFlowActivityRequest
func (b *IndustryDataInboundFlowActivityRequestBuilder) Request() *IndustryDataInboundFlowActivityRequest {
	return &IndustryDataInboundFlowActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataInboundFlowActivityRequest is request for IndustryDataInboundFlowActivity
type IndustryDataInboundFlowActivityRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataInboundFlowActivity
func (r *IndustryDataInboundFlowActivityRequest) Get(ctx context.Context) (resObj *IndustryDataInboundFlowActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataInboundFlowActivity
func (r *IndustryDataInboundFlowActivityRequest) Update(ctx context.Context, reqObj *IndustryDataInboundFlowActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataInboundFlowActivity
func (r *IndustryDataInboundFlowActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataActivityRequestBuilder is request builder for IndustryDataIndustryDataActivity
type IndustryDataIndustryDataActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataActivityRequest
func (b *IndustryDataIndustryDataActivityRequestBuilder) Request() *IndustryDataIndustryDataActivityRequest {
	return &IndustryDataIndustryDataActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataActivityRequest is request for IndustryDataIndustryDataActivity
type IndustryDataIndustryDataActivityRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataActivity
func (r *IndustryDataIndustryDataActivityRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataActivity
func (r *IndustryDataIndustryDataActivityRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataActivity
func (r *IndustryDataIndustryDataActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataActivityStatisticsRequestBuilder is request builder for IndustryDataIndustryDataActivityStatistics
type IndustryDataIndustryDataActivityStatisticsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataActivityStatisticsRequest
func (b *IndustryDataIndustryDataActivityStatisticsRequestBuilder) Request() *IndustryDataIndustryDataActivityStatisticsRequest {
	return &IndustryDataIndustryDataActivityStatisticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataActivityStatisticsRequest is request for IndustryDataIndustryDataActivityStatistics
type IndustryDataIndustryDataActivityStatisticsRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataActivityStatistics
func (r *IndustryDataIndustryDataActivityStatisticsRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataActivityStatistics, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataActivityStatistics
func (r *IndustryDataIndustryDataActivityStatisticsRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataActivityStatistics) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataActivityStatistics
func (r *IndustryDataIndustryDataActivityStatisticsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataConnectorRequestBuilder is request builder for IndustryDataIndustryDataConnector
type IndustryDataIndustryDataConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataConnectorRequest
func (b *IndustryDataIndustryDataConnectorRequestBuilder) Request() *IndustryDataIndustryDataConnectorRequest {
	return &IndustryDataIndustryDataConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataConnectorRequest is request for IndustryDataIndustryDataConnector
type IndustryDataIndustryDataConnectorRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataConnector
func (r *IndustryDataIndustryDataConnectorRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataConnector
func (r *IndustryDataIndustryDataConnectorRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataConnector
func (r *IndustryDataIndustryDataConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRootRequestBuilder is request builder for IndustryDataIndustryDataRoot
type IndustryDataIndustryDataRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRootRequest
func (b *IndustryDataIndustryDataRootRequestBuilder) Request() *IndustryDataIndustryDataRootRequest {
	return &IndustryDataIndustryDataRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRootRequest is request for IndustryDataIndustryDataRoot
type IndustryDataIndustryDataRootRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRoot
func (r *IndustryDataIndustryDataRootRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRoot
func (r *IndustryDataIndustryDataRootRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRoot
func (r *IndustryDataIndustryDataRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRunRequestBuilder is request builder for IndustryDataIndustryDataRun
type IndustryDataIndustryDataRunRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRunRequest
func (b *IndustryDataIndustryDataRunRequestBuilder) Request() *IndustryDataIndustryDataRunRequest {
	return &IndustryDataIndustryDataRunRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRunRequest is request for IndustryDataIndustryDataRun
type IndustryDataIndustryDataRunRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRun
func (r *IndustryDataIndustryDataRunRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRun, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRun
func (r *IndustryDataIndustryDataRunRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRun) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRun
func (r *IndustryDataIndustryDataRunRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRunActivityRequestBuilder is request builder for IndustryDataIndustryDataRunActivity
type IndustryDataIndustryDataRunActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRunActivityRequest
func (b *IndustryDataIndustryDataRunActivityRequestBuilder) Request() *IndustryDataIndustryDataRunActivityRequest {
	return &IndustryDataIndustryDataRunActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRunActivityRequest is request for IndustryDataIndustryDataRunActivity
type IndustryDataIndustryDataRunActivityRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRunActivity
func (r *IndustryDataIndustryDataRunActivityRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRunActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRunActivity
func (r *IndustryDataIndustryDataRunActivityRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRunActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRunActivity
func (r *IndustryDataIndustryDataRunActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRunEntityCountMetricRequestBuilder is request builder for IndustryDataIndustryDataRunEntityCountMetric
type IndustryDataIndustryDataRunEntityCountMetricRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRunEntityCountMetricRequest
func (b *IndustryDataIndustryDataRunEntityCountMetricRequestBuilder) Request() *IndustryDataIndustryDataRunEntityCountMetricRequest {
	return &IndustryDataIndustryDataRunEntityCountMetricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRunEntityCountMetricRequest is request for IndustryDataIndustryDataRunEntityCountMetric
type IndustryDataIndustryDataRunEntityCountMetricRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRunEntityCountMetric
func (r *IndustryDataIndustryDataRunEntityCountMetricRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRunEntityCountMetric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRunEntityCountMetric
func (r *IndustryDataIndustryDataRunEntityCountMetricRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRunEntityCountMetric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRunEntityCountMetric
func (r *IndustryDataIndustryDataRunEntityCountMetricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRunRoleCountMetricRequestBuilder is request builder for IndustryDataIndustryDataRunRoleCountMetric
type IndustryDataIndustryDataRunRoleCountMetricRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRunRoleCountMetricRequest
func (b *IndustryDataIndustryDataRunRoleCountMetricRequestBuilder) Request() *IndustryDataIndustryDataRunRoleCountMetricRequest {
	return &IndustryDataIndustryDataRunRoleCountMetricRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRunRoleCountMetricRequest is request for IndustryDataIndustryDataRunRoleCountMetric
type IndustryDataIndustryDataRunRoleCountMetricRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRunRoleCountMetric
func (r *IndustryDataIndustryDataRunRoleCountMetricRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRunRoleCountMetric, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRunRoleCountMetric
func (r *IndustryDataIndustryDataRunRoleCountMetricRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRunRoleCountMetric) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRunRoleCountMetric
func (r *IndustryDataIndustryDataRunRoleCountMetricRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataIndustryDataRunStatisticsRequestBuilder is request builder for IndustryDataIndustryDataRunStatistics
type IndustryDataIndustryDataRunStatisticsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataIndustryDataRunStatisticsRequest
func (b *IndustryDataIndustryDataRunStatisticsRequestBuilder) Request() *IndustryDataIndustryDataRunStatisticsRequest {
	return &IndustryDataIndustryDataRunStatisticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataIndustryDataRunStatisticsRequest is request for IndustryDataIndustryDataRunStatistics
type IndustryDataIndustryDataRunStatisticsRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataIndustryDataRunStatistics
func (r *IndustryDataIndustryDataRunStatisticsRequest) Get(ctx context.Context) (resObj *IndustryDataIndustryDataRunStatistics, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataIndustryDataRunStatistics
func (r *IndustryDataIndustryDataRunStatisticsRequest) Update(ctx context.Context, reqObj *IndustryDataIndustryDataRunStatistics) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataIndustryDataRunStatistics
func (r *IndustryDataIndustryDataRunStatisticsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataOutboundFlowActivityRequestBuilder is request builder for IndustryDataOutboundFlowActivity
type IndustryDataOutboundFlowActivityRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataOutboundFlowActivityRequest
func (b *IndustryDataOutboundFlowActivityRequestBuilder) Request() *IndustryDataOutboundFlowActivityRequest {
	return &IndustryDataOutboundFlowActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataOutboundFlowActivityRequest is request for IndustryDataOutboundFlowActivity
type IndustryDataOutboundFlowActivityRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataOutboundFlowActivity
func (r *IndustryDataOutboundFlowActivityRequest) Get(ctx context.Context) (resObj *IndustryDataOutboundFlowActivity, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataOutboundFlowActivity
func (r *IndustryDataOutboundFlowActivityRequest) Update(ctx context.Context, reqObj *IndustryDataOutboundFlowActivity) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataOutboundFlowActivity
func (r *IndustryDataOutboundFlowActivityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataReferenceDefinitionRequestBuilder is request builder for IndustryDataReferenceDefinition
type IndustryDataReferenceDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataReferenceDefinitionRequest
func (b *IndustryDataReferenceDefinitionRequestBuilder) Request() *IndustryDataReferenceDefinitionRequest {
	return &IndustryDataReferenceDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataReferenceDefinitionRequest is request for IndustryDataReferenceDefinition
type IndustryDataReferenceDefinitionRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataReferenceDefinition
func (r *IndustryDataReferenceDefinitionRequest) Get(ctx context.Context) (resObj *IndustryDataReferenceDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataReferenceDefinition
func (r *IndustryDataReferenceDefinitionRequest) Update(ctx context.Context, reqObj *IndustryDataReferenceDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataReferenceDefinition
func (r *IndustryDataReferenceDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataReferenceValueRequestBuilder is request builder for IndustryDataReferenceValue
type IndustryDataReferenceValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataReferenceValueRequest
func (b *IndustryDataReferenceValueRequestBuilder) Request() *IndustryDataReferenceValueRequest {
	return &IndustryDataReferenceValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataReferenceValueRequest is request for IndustryDataReferenceValue
type IndustryDataReferenceValueRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataReferenceValue
func (r *IndustryDataReferenceValueRequest) Get(ctx context.Context) (resObj *IndustryDataReferenceValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataReferenceValue
func (r *IndustryDataReferenceValueRequest) Update(ctx context.Context, reqObj *IndustryDataReferenceValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataReferenceValue
func (r *IndustryDataReferenceValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataRoleGroupRequestBuilder is request builder for IndustryDataRoleGroup
type IndustryDataRoleGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataRoleGroupRequest
func (b *IndustryDataRoleGroupRequestBuilder) Request() *IndustryDataRoleGroupRequest {
	return &IndustryDataRoleGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataRoleGroupRequest is request for IndustryDataRoleGroup
type IndustryDataRoleGroupRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataRoleGroup
func (r *IndustryDataRoleGroupRequest) Get(ctx context.Context) (resObj *IndustryDataRoleGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataRoleGroup
func (r *IndustryDataRoleGroupRequest) Update(ctx context.Context, reqObj *IndustryDataRoleGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataRoleGroup
func (r *IndustryDataRoleGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataRoleReferenceValueRequestBuilder is request builder for IndustryDataRoleReferenceValue
type IndustryDataRoleReferenceValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataRoleReferenceValueRequest
func (b *IndustryDataRoleReferenceValueRequestBuilder) Request() *IndustryDataRoleReferenceValueRequest {
	return &IndustryDataRoleReferenceValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataRoleReferenceValueRequest is request for IndustryDataRoleReferenceValue
type IndustryDataRoleReferenceValueRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataRoleReferenceValue
func (r *IndustryDataRoleReferenceValueRequest) Get(ctx context.Context) (resObj *IndustryDataRoleReferenceValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataRoleReferenceValue
func (r *IndustryDataRoleReferenceValueRequest) Update(ctx context.Context, reqObj *IndustryDataRoleReferenceValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataRoleReferenceValue
func (r *IndustryDataRoleReferenceValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataSourceSystemDefinitionRequestBuilder is request builder for IndustryDataSourceSystemDefinition
type IndustryDataSourceSystemDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataSourceSystemDefinitionRequest
func (b *IndustryDataSourceSystemDefinitionRequestBuilder) Request() *IndustryDataSourceSystemDefinitionRequest {
	return &IndustryDataSourceSystemDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataSourceSystemDefinitionRequest is request for IndustryDataSourceSystemDefinition
type IndustryDataSourceSystemDefinitionRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataSourceSystemDefinition
func (r *IndustryDataSourceSystemDefinitionRequest) Get(ctx context.Context) (resObj *IndustryDataSourceSystemDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataSourceSystemDefinition
func (r *IndustryDataSourceSystemDefinitionRequest) Update(ctx context.Context, reqObj *IndustryDataSourceSystemDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataSourceSystemDefinition
func (r *IndustryDataSourceSystemDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataUserMatchTargetReferenceValueRequestBuilder is request builder for IndustryDataUserMatchTargetReferenceValue
type IndustryDataUserMatchTargetReferenceValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataUserMatchTargetReferenceValueRequest
func (b *IndustryDataUserMatchTargetReferenceValueRequestBuilder) Request() *IndustryDataUserMatchTargetReferenceValueRequest {
	return &IndustryDataUserMatchTargetReferenceValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataUserMatchTargetReferenceValueRequest is request for IndustryDataUserMatchTargetReferenceValue
type IndustryDataUserMatchTargetReferenceValueRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataUserMatchTargetReferenceValue
func (r *IndustryDataUserMatchTargetReferenceValueRequest) Get(ctx context.Context) (resObj *IndustryDataUserMatchTargetReferenceValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataUserMatchTargetReferenceValue
func (r *IndustryDataUserMatchTargetReferenceValueRequest) Update(ctx context.Context, reqObj *IndustryDataUserMatchTargetReferenceValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataUserMatchTargetReferenceValue
func (r *IndustryDataUserMatchTargetReferenceValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataUserMatchingSettingRequestBuilder is request builder for IndustryDataUserMatchingSetting
type IndustryDataUserMatchingSettingRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataUserMatchingSettingRequest
func (b *IndustryDataUserMatchingSettingRequestBuilder) Request() *IndustryDataUserMatchingSettingRequest {
	return &IndustryDataUserMatchingSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataUserMatchingSettingRequest is request for IndustryDataUserMatchingSetting
type IndustryDataUserMatchingSettingRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataUserMatchingSetting
func (r *IndustryDataUserMatchingSettingRequest) Get(ctx context.Context) (resObj *IndustryDataUserMatchingSetting, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataUserMatchingSetting
func (r *IndustryDataUserMatchingSettingRequest) Update(ctx context.Context, reqObj *IndustryDataUserMatchingSetting) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataUserMatchingSetting
func (r *IndustryDataUserMatchingSettingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataValidateOperationRequestBuilder is request builder for IndustryDataValidateOperation
type IndustryDataValidateOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataValidateOperationRequest
func (b *IndustryDataValidateOperationRequestBuilder) Request() *IndustryDataValidateOperationRequest {
	return &IndustryDataValidateOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataValidateOperationRequest is request for IndustryDataValidateOperation
type IndustryDataValidateOperationRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataValidateOperation
func (r *IndustryDataValidateOperationRequest) Get(ctx context.Context) (resObj *IndustryDataValidateOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataValidateOperation
func (r *IndustryDataValidateOperationRequest) Update(ctx context.Context, reqObj *IndustryDataValidateOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataValidateOperation
func (r *IndustryDataValidateOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataYearReferenceValueRequestBuilder is request builder for IndustryDataYearReferenceValue
type IndustryDataYearReferenceValueRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataYearReferenceValueRequest
func (b *IndustryDataYearReferenceValueRequestBuilder) Request() *IndustryDataYearReferenceValueRequest {
	return &IndustryDataYearReferenceValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataYearReferenceValueRequest is request for IndustryDataYearReferenceValue
type IndustryDataYearReferenceValueRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataYearReferenceValue
func (r *IndustryDataYearReferenceValueRequest) Get(ctx context.Context) (resObj *IndustryDataYearReferenceValue, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataYearReferenceValue
func (r *IndustryDataYearReferenceValueRequest) Update(ctx context.Context, reqObj *IndustryDataYearReferenceValue) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataYearReferenceValue
func (r *IndustryDataYearReferenceValueRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IndustryDataYearTimePeriodDefinitionRequestBuilder is request builder for IndustryDataYearTimePeriodDefinition
type IndustryDataYearTimePeriodDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IndustryDataYearTimePeriodDefinitionRequest
func (b *IndustryDataYearTimePeriodDefinitionRequestBuilder) Request() *IndustryDataYearTimePeriodDefinitionRequest {
	return &IndustryDataYearTimePeriodDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IndustryDataYearTimePeriodDefinitionRequest is request for IndustryDataYearTimePeriodDefinition
type IndustryDataYearTimePeriodDefinitionRequest struct{ BaseRequest }

// Get performs GET request for IndustryDataYearTimePeriodDefinition
func (r *IndustryDataYearTimePeriodDefinitionRequest) Get(ctx context.Context) (resObj *IndustryDataYearTimePeriodDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IndustryDataYearTimePeriodDefinition
func (r *IndustryDataYearTimePeriodDefinitionRequest) Update(ctx context.Context, reqObj *IndustryDataYearTimePeriodDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IndustryDataYearTimePeriodDefinition
func (r *IndustryDataYearTimePeriodDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
