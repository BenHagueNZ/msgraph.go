// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// SharepointRequestBuilder is request builder for Sharepoint
type SharepointRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharepointRequest
func (b *SharepointRequestBuilder) Request() *SharepointRequest {
	return &SharepointRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharepointRequest is request for Sharepoint
type SharepointRequest struct{ BaseRequest }

// Get performs GET request for Sharepoint
func (r *SharepointRequest) Get(ctx context.Context) (resObj *Sharepoint, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Sharepoint
func (r *SharepointRequest) Update(ctx context.Context, reqObj *Sharepoint) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Sharepoint
func (r *SharepointRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharepointIDsRequestBuilder is request builder for SharepointIDs
type SharepointIDsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharepointIDsRequest
func (b *SharepointIDsRequestBuilder) Request() *SharepointIDsRequest {
	return &SharepointIDsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharepointIDsRequest is request for SharepointIDs
type SharepointIDsRequest struct{ BaseRequest }

// Get performs GET request for SharepointIDs
func (r *SharepointIDsRequest) Get(ctx context.Context) (resObj *SharepointIDs, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharepointIDs
func (r *SharepointIDsRequest) Update(ctx context.Context, reqObj *SharepointIDs) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharepointIDs
func (r *SharepointIDsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SharepointSettingsRequestBuilder is request builder for SharepointSettings
type SharepointSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SharepointSettingsRequest
func (b *SharepointSettingsRequestBuilder) Request() *SharepointSettingsRequest {
	return &SharepointSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SharepointSettingsRequest is request for SharepointSettings
type SharepointSettingsRequest struct{ BaseRequest }

// Get performs GET request for SharepointSettings
func (r *SharepointSettingsRequest) Get(ctx context.Context) (resObj *SharepointSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SharepointSettings
func (r *SharepointSettingsRequest) Update(ctx context.Context, reqObj *SharepointSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SharepointSettings
func (r *SharepointSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
