// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// MacAppIdentifierRequestBuilder is request builder for MacAppIdentifier
type MacAppIdentifierRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacAppIdentifierRequest
func (b *MacAppIdentifierRequestBuilder) Request() *MacAppIdentifierRequest {
	return &MacAppIdentifierRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacAppIdentifierRequest is request for MacAppIdentifier
type MacAppIdentifierRequest struct{ BaseRequest }

// Get performs GET request for MacAppIdentifier
func (r *MacAppIdentifierRequest) Get(ctx context.Context) (resObj *MacAppIdentifier, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacAppIdentifier
func (r *MacAppIdentifierRequest) Update(ctx context.Context, reqObj *MacAppIdentifier) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacAppIdentifier
func (r *MacAppIdentifierRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSAppleEventReceiverRequestBuilder is request builder for MacOSAppleEventReceiver
type MacOSAppleEventReceiverRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSAppleEventReceiverRequest
func (b *MacOSAppleEventReceiverRequestBuilder) Request() *MacOSAppleEventReceiverRequest {
	return &MacOSAppleEventReceiverRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSAppleEventReceiverRequest is request for MacOSAppleEventReceiver
type MacOSAppleEventReceiverRequest struct{ BaseRequest }

// Get performs GET request for MacOSAppleEventReceiver
func (r *MacOSAppleEventReceiverRequest) Get(ctx context.Context) (resObj *MacOSAppleEventReceiver, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSAppleEventReceiver
func (r *MacOSAppleEventReceiverRequest) Update(ctx context.Context, reqObj *MacOSAppleEventReceiver) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSAppleEventReceiver
func (r *MacOSAppleEventReceiverRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSAssociatedDomainsItemRequestBuilder is request builder for MacOSAssociatedDomainsItem
type MacOSAssociatedDomainsItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSAssociatedDomainsItemRequest
func (b *MacOSAssociatedDomainsItemRequestBuilder) Request() *MacOSAssociatedDomainsItemRequest {
	return &MacOSAssociatedDomainsItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSAssociatedDomainsItemRequest is request for MacOSAssociatedDomainsItem
type MacOSAssociatedDomainsItemRequest struct{ BaseRequest }

// Get performs GET request for MacOSAssociatedDomainsItem
func (r *MacOSAssociatedDomainsItemRequest) Get(ctx context.Context) (resObj *MacOSAssociatedDomainsItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSAssociatedDomainsItem
func (r *MacOSAssociatedDomainsItemRequest) Update(ctx context.Context, reqObj *MacOSAssociatedDomainsItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSAssociatedDomainsItem
func (r *MacOSAssociatedDomainsItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSAzureAdSingleSignOnExtensionRequestBuilder is request builder for MacOSAzureAdSingleSignOnExtension
type MacOSAzureAdSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSAzureAdSingleSignOnExtensionRequest
func (b *MacOSAzureAdSingleSignOnExtensionRequestBuilder) Request() *MacOSAzureAdSingleSignOnExtensionRequest {
	return &MacOSAzureAdSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSAzureAdSingleSignOnExtensionRequest is request for MacOSAzureAdSingleSignOnExtension
type MacOSAzureAdSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSAzureAdSingleSignOnExtension
func (r *MacOSAzureAdSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *MacOSAzureAdSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSAzureAdSingleSignOnExtension
func (r *MacOSAzureAdSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *MacOSAzureAdSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSAzureAdSingleSignOnExtension
func (r *MacOSAzureAdSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCertificateProfileBaseRequestBuilder is request builder for MacOSCertificateProfileBase
type MacOSCertificateProfileBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCertificateProfileBaseRequest
func (b *MacOSCertificateProfileBaseRequestBuilder) Request() *MacOSCertificateProfileBaseRequest {
	return &MacOSCertificateProfileBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCertificateProfileBaseRequest is request for MacOSCertificateProfileBase
type MacOSCertificateProfileBaseRequest struct{ BaseRequest }

// Get performs GET request for MacOSCertificateProfileBase
func (r *MacOSCertificateProfileBaseRequest) Get(ctx context.Context) (resObj *MacOSCertificateProfileBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCertificateProfileBase
func (r *MacOSCertificateProfileBaseRequest) Update(ctx context.Context, reqObj *MacOSCertificateProfileBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCertificateProfileBase
func (r *MacOSCertificateProfileBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCompliancePolicyRequestBuilder is request builder for MacOSCompliancePolicy
type MacOSCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCompliancePolicyRequest
func (b *MacOSCompliancePolicyRequestBuilder) Request() *MacOSCompliancePolicyRequest {
	return &MacOSCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCompliancePolicyRequest is request for MacOSCompliancePolicy
type MacOSCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Get(ctx context.Context) (resObj *MacOSCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Update(ctx context.Context, reqObj *MacOSCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCredentialSingleSignOnExtensionRequestBuilder is request builder for MacOSCredentialSingleSignOnExtension
type MacOSCredentialSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCredentialSingleSignOnExtensionRequest
func (b *MacOSCredentialSingleSignOnExtensionRequestBuilder) Request() *MacOSCredentialSingleSignOnExtensionRequest {
	return &MacOSCredentialSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCredentialSingleSignOnExtensionRequest is request for MacOSCredentialSingleSignOnExtension
type MacOSCredentialSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSCredentialSingleSignOnExtension
func (r *MacOSCredentialSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *MacOSCredentialSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCredentialSingleSignOnExtension
func (r *MacOSCredentialSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *MacOSCredentialSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCredentialSingleSignOnExtension
func (r *MacOSCredentialSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCustomAppConfigurationRequestBuilder is request builder for MacOSCustomAppConfiguration
type MacOSCustomAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCustomAppConfigurationRequest
func (b *MacOSCustomAppConfigurationRequestBuilder) Request() *MacOSCustomAppConfigurationRequest {
	return &MacOSCustomAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCustomAppConfigurationRequest is request for MacOSCustomAppConfiguration
type MacOSCustomAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSCustomAppConfiguration
func (r *MacOSCustomAppConfigurationRequest) Get(ctx context.Context) (resObj *MacOSCustomAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCustomAppConfiguration
func (r *MacOSCustomAppConfigurationRequest) Update(ctx context.Context, reqObj *MacOSCustomAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCustomAppConfiguration
func (r *MacOSCustomAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCustomConfigurationRequestBuilder is request builder for MacOSCustomConfiguration
type MacOSCustomConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCustomConfigurationRequest
func (b *MacOSCustomConfigurationRequestBuilder) Request() *MacOSCustomConfigurationRequest {
	return &MacOSCustomConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCustomConfigurationRequest is request for MacOSCustomConfiguration
type MacOSCustomConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Get(ctx context.Context) (resObj *MacOSCustomConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Update(ctx context.Context, reqObj *MacOSCustomConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSDeviceFeaturesConfigurationRequestBuilder is request builder for MacOSDeviceFeaturesConfiguration
type MacOSDeviceFeaturesConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSDeviceFeaturesConfigurationRequest
func (b *MacOSDeviceFeaturesConfigurationRequestBuilder) Request() *MacOSDeviceFeaturesConfigurationRequest {
	return &MacOSDeviceFeaturesConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSDeviceFeaturesConfigurationRequest is request for MacOSDeviceFeaturesConfiguration
type MacOSDeviceFeaturesConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Get(ctx context.Context) (resObj *MacOSDeviceFeaturesConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Update(ctx context.Context, reqObj *MacOSDeviceFeaturesConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSDmgAppRequestBuilder is request builder for MacOSDmgApp
type MacOSDmgAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSDmgAppRequest
func (b *MacOSDmgAppRequestBuilder) Request() *MacOSDmgAppRequest {
	return &MacOSDmgAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSDmgAppRequest is request for MacOSDmgApp
type MacOSDmgAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSDmgApp
func (r *MacOSDmgAppRequest) Get(ctx context.Context) (resObj *MacOSDmgApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSDmgApp
func (r *MacOSDmgAppRequest) Update(ctx context.Context, reqObj *MacOSDmgApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSDmgApp
func (r *MacOSDmgAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSEndpointProtectionConfigurationRequestBuilder is request builder for MacOSEndpointProtectionConfiguration
type MacOSEndpointProtectionConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSEndpointProtectionConfigurationRequest
func (b *MacOSEndpointProtectionConfigurationRequestBuilder) Request() *MacOSEndpointProtectionConfigurationRequest {
	return &MacOSEndpointProtectionConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSEndpointProtectionConfigurationRequest is request for MacOSEndpointProtectionConfiguration
type MacOSEndpointProtectionConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSEndpointProtectionConfiguration
func (r *MacOSEndpointProtectionConfigurationRequest) Get(ctx context.Context) (resObj *MacOSEndpointProtectionConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSEndpointProtectionConfiguration
func (r *MacOSEndpointProtectionConfigurationRequest) Update(ctx context.Context, reqObj *MacOSEndpointProtectionConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSEndpointProtectionConfiguration
func (r *MacOSEndpointProtectionConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSEnterpriseWiFiConfigurationRequestBuilder is request builder for MacOSEnterpriseWiFiConfiguration
type MacOSEnterpriseWiFiConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSEnterpriseWiFiConfigurationRequest
func (b *MacOSEnterpriseWiFiConfigurationRequestBuilder) Request() *MacOSEnterpriseWiFiConfigurationRequest {
	return &MacOSEnterpriseWiFiConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSEnterpriseWiFiConfigurationRequest is request for MacOSEnterpriseWiFiConfiguration
type MacOSEnterpriseWiFiConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSEnterpriseWiFiConfiguration
func (r *MacOSEnterpriseWiFiConfigurationRequest) Get(ctx context.Context) (resObj *MacOSEnterpriseWiFiConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSEnterpriseWiFiConfiguration
func (r *MacOSEnterpriseWiFiConfigurationRequest) Update(ctx context.Context, reqObj *MacOSEnterpriseWiFiConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSEnterpriseWiFiConfiguration
func (r *MacOSEnterpriseWiFiConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSExtensionsConfigurationRequestBuilder is request builder for MacOSExtensionsConfiguration
type MacOSExtensionsConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSExtensionsConfigurationRequest
func (b *MacOSExtensionsConfigurationRequestBuilder) Request() *MacOSExtensionsConfigurationRequest {
	return &MacOSExtensionsConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSExtensionsConfigurationRequest is request for MacOSExtensionsConfiguration
type MacOSExtensionsConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSExtensionsConfiguration
func (r *MacOSExtensionsConfigurationRequest) Get(ctx context.Context) (resObj *MacOSExtensionsConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSExtensionsConfiguration
func (r *MacOSExtensionsConfigurationRequest) Update(ctx context.Context, reqObj *MacOSExtensionsConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSExtensionsConfiguration
func (r *MacOSExtensionsConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSFirewallApplicationRequestBuilder is request builder for MacOSFirewallApplication
type MacOSFirewallApplicationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSFirewallApplicationRequest
func (b *MacOSFirewallApplicationRequestBuilder) Request() *MacOSFirewallApplicationRequest {
	return &MacOSFirewallApplicationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSFirewallApplicationRequest is request for MacOSFirewallApplication
type MacOSFirewallApplicationRequest struct{ BaseRequest }

// Get performs GET request for MacOSFirewallApplication
func (r *MacOSFirewallApplicationRequest) Get(ctx context.Context) (resObj *MacOSFirewallApplication, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSFirewallApplication
func (r *MacOSFirewallApplicationRequest) Update(ctx context.Context, reqObj *MacOSFirewallApplication) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSFirewallApplication
func (r *MacOSFirewallApplicationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSGeneralDeviceConfigurationRequestBuilder is request builder for MacOSGeneralDeviceConfiguration
type MacOSGeneralDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSGeneralDeviceConfigurationRequest
func (b *MacOSGeneralDeviceConfigurationRequestBuilder) Request() *MacOSGeneralDeviceConfigurationRequest {
	return &MacOSGeneralDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSGeneralDeviceConfigurationRequest is request for MacOSGeneralDeviceConfiguration
type MacOSGeneralDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Get(ctx context.Context) (resObj *MacOSGeneralDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Update(ctx context.Context, reqObj *MacOSGeneralDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSImportedPFXCertificateProfileRequestBuilder is request builder for MacOSImportedPFXCertificateProfile
type MacOSImportedPFXCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSImportedPFXCertificateProfileRequest
func (b *MacOSImportedPFXCertificateProfileRequestBuilder) Request() *MacOSImportedPFXCertificateProfileRequest {
	return &MacOSImportedPFXCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSImportedPFXCertificateProfileRequest is request for MacOSImportedPFXCertificateProfile
type MacOSImportedPFXCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for MacOSImportedPFXCertificateProfile
func (r *MacOSImportedPFXCertificateProfileRequest) Get(ctx context.Context) (resObj *MacOSImportedPFXCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSImportedPFXCertificateProfile
func (r *MacOSImportedPFXCertificateProfileRequest) Update(ctx context.Context, reqObj *MacOSImportedPFXCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSImportedPFXCertificateProfile
func (r *MacOSImportedPFXCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSIncludedAppRequestBuilder is request builder for MacOSIncludedApp
type MacOSIncludedAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSIncludedAppRequest
func (b *MacOSIncludedAppRequestBuilder) Request() *MacOSIncludedAppRequest {
	return &MacOSIncludedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSIncludedAppRequest is request for MacOSIncludedApp
type MacOSIncludedAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSIncludedApp
func (r *MacOSIncludedAppRequest) Get(ctx context.Context) (resObj *MacOSIncludedApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSIncludedApp
func (r *MacOSIncludedAppRequest) Update(ctx context.Context, reqObj *MacOSIncludedApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSIncludedApp
func (r *MacOSIncludedAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSKerberosSingleSignOnExtensionRequestBuilder is request builder for MacOSKerberosSingleSignOnExtension
type MacOSKerberosSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSKerberosSingleSignOnExtensionRequest
func (b *MacOSKerberosSingleSignOnExtensionRequestBuilder) Request() *MacOSKerberosSingleSignOnExtensionRequest {
	return &MacOSKerberosSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSKerberosSingleSignOnExtensionRequest is request for MacOSKerberosSingleSignOnExtension
type MacOSKerberosSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSKerberosSingleSignOnExtension
func (r *MacOSKerberosSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *MacOSKerberosSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSKerberosSingleSignOnExtension
func (r *MacOSKerberosSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *MacOSKerberosSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSKerberosSingleSignOnExtension
func (r *MacOSKerberosSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSKernelExtensionRequestBuilder is request builder for MacOSKernelExtension
type MacOSKernelExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSKernelExtensionRequest
func (b *MacOSKernelExtensionRequestBuilder) Request() *MacOSKernelExtensionRequest {
	return &MacOSKernelExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSKernelExtensionRequest is request for MacOSKernelExtension
type MacOSKernelExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSKernelExtension
func (r *MacOSKernelExtensionRequest) Get(ctx context.Context) (resObj *MacOSKernelExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSKernelExtension
func (r *MacOSKernelExtensionRequest) Update(ctx context.Context, reqObj *MacOSKernelExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSKernelExtension
func (r *MacOSKernelExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSLaunchItemRequestBuilder is request builder for MacOSLaunchItem
type MacOSLaunchItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSLaunchItemRequest
func (b *MacOSLaunchItemRequestBuilder) Request() *MacOSLaunchItemRequest {
	return &MacOSLaunchItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSLaunchItemRequest is request for MacOSLaunchItem
type MacOSLaunchItemRequest struct{ BaseRequest }

// Get performs GET request for MacOSLaunchItem
func (r *MacOSLaunchItemRequest) Get(ctx context.Context) (resObj *MacOSLaunchItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSLaunchItem
func (r *MacOSLaunchItemRequest) Update(ctx context.Context, reqObj *MacOSLaunchItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSLaunchItem
func (r *MacOSLaunchItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSLobAppRequestBuilder is request builder for MacOSLobApp
type MacOSLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSLobAppRequest
func (b *MacOSLobAppRequestBuilder) Request() *MacOSLobAppRequest {
	return &MacOSLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSLobAppRequest is request for MacOSLobApp
type MacOSLobAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSLobApp
func (r *MacOSLobAppRequest) Get(ctx context.Context) (resObj *MacOSLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSLobApp
func (r *MacOSLobAppRequest) Update(ctx context.Context, reqObj *MacOSLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSLobApp
func (r *MacOSLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSLobChildAppRequestBuilder is request builder for MacOSLobChildApp
type MacOSLobChildAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSLobChildAppRequest
func (b *MacOSLobChildAppRequestBuilder) Request() *MacOSLobChildAppRequest {
	return &MacOSLobChildAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSLobChildAppRequest is request for MacOSLobChildApp
type MacOSLobChildAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Get(ctx context.Context) (resObj *MacOSLobChildApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Update(ctx context.Context, reqObj *MacOSLobChildApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMdatpAppRequestBuilder is request builder for MacOSMdatpApp
type MacOSMdatpAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMdatpAppRequest
func (b *MacOSMdatpAppRequestBuilder) Request() *MacOSMdatpAppRequest {
	return &MacOSMdatpAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMdatpAppRequest is request for MacOSMdatpApp
type MacOSMdatpAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSMdatpApp
func (r *MacOSMdatpAppRequest) Get(ctx context.Context) (resObj *MacOSMdatpApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMdatpApp
func (r *MacOSMdatpAppRequest) Update(ctx context.Context, reqObj *MacOSMdatpApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMdatpApp
func (r *MacOSMdatpAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMicrosoftDefenderAppRequestBuilder is request builder for MacOSMicrosoftDefenderApp
type MacOSMicrosoftDefenderAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMicrosoftDefenderAppRequest
func (b *MacOSMicrosoftDefenderAppRequestBuilder) Request() *MacOSMicrosoftDefenderAppRequest {
	return &MacOSMicrosoftDefenderAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMicrosoftDefenderAppRequest is request for MacOSMicrosoftDefenderApp
type MacOSMicrosoftDefenderAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSMicrosoftDefenderApp
func (r *MacOSMicrosoftDefenderAppRequest) Get(ctx context.Context) (resObj *MacOSMicrosoftDefenderApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMicrosoftDefenderApp
func (r *MacOSMicrosoftDefenderAppRequest) Update(ctx context.Context, reqObj *MacOSMicrosoftDefenderApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMicrosoftDefenderApp
func (r *MacOSMicrosoftDefenderAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMicrosoftEdgeAppRequestBuilder is request builder for MacOSMicrosoftEdgeApp
type MacOSMicrosoftEdgeAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMicrosoftEdgeAppRequest
func (b *MacOSMicrosoftEdgeAppRequestBuilder) Request() *MacOSMicrosoftEdgeAppRequest {
	return &MacOSMicrosoftEdgeAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMicrosoftEdgeAppRequest is request for MacOSMicrosoftEdgeApp
type MacOSMicrosoftEdgeAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Get(ctx context.Context) (resObj *MacOSMicrosoftEdgeApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Update(ctx context.Context, reqObj *MacOSMicrosoftEdgeApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMinimumOperatingSystemRequestBuilder is request builder for MacOSMinimumOperatingSystem
type MacOSMinimumOperatingSystemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMinimumOperatingSystemRequest
func (b *MacOSMinimumOperatingSystemRequestBuilder) Request() *MacOSMinimumOperatingSystemRequest {
	return &MacOSMinimumOperatingSystemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMinimumOperatingSystemRequest is request for MacOSMinimumOperatingSystem
type MacOSMinimumOperatingSystemRequest struct{ BaseRequest }

// Get performs GET request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Get(ctx context.Context) (resObj *MacOSMinimumOperatingSystem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Update(ctx context.Context, reqObj *MacOSMinimumOperatingSystem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSOfficeSuiteAppRequestBuilder is request builder for MacOSOfficeSuiteApp
type MacOSOfficeSuiteAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSOfficeSuiteAppRequest
func (b *MacOSOfficeSuiteAppRequestBuilder) Request() *MacOSOfficeSuiteAppRequest {
	return &MacOSOfficeSuiteAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSOfficeSuiteAppRequest is request for MacOSOfficeSuiteApp
type MacOSOfficeSuiteAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Get(ctx context.Context) (resObj *MacOSOfficeSuiteApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Update(ctx context.Context, reqObj *MacOSOfficeSuiteApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSPkcsCertificateProfileRequestBuilder is request builder for MacOSPkcsCertificateProfile
type MacOSPkcsCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSPkcsCertificateProfileRequest
func (b *MacOSPkcsCertificateProfileRequestBuilder) Request() *MacOSPkcsCertificateProfileRequest {
	return &MacOSPkcsCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSPkcsCertificateProfileRequest is request for MacOSPkcsCertificateProfile
type MacOSPkcsCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for MacOSPkcsCertificateProfile
func (r *MacOSPkcsCertificateProfileRequest) Get(ctx context.Context) (resObj *MacOSPkcsCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSPkcsCertificateProfile
func (r *MacOSPkcsCertificateProfileRequest) Update(ctx context.Context, reqObj *MacOSPkcsCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSPkcsCertificateProfile
func (r *MacOSPkcsCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSPrivacyAccessControlItemRequestBuilder is request builder for MacOSPrivacyAccessControlItem
type MacOSPrivacyAccessControlItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSPrivacyAccessControlItemRequest
func (b *MacOSPrivacyAccessControlItemRequestBuilder) Request() *MacOSPrivacyAccessControlItemRequest {
	return &MacOSPrivacyAccessControlItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSPrivacyAccessControlItemRequest is request for MacOSPrivacyAccessControlItem
type MacOSPrivacyAccessControlItemRequest struct{ BaseRequest }

// Get performs GET request for MacOSPrivacyAccessControlItem
func (r *MacOSPrivacyAccessControlItemRequest) Get(ctx context.Context) (resObj *MacOSPrivacyAccessControlItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSPrivacyAccessControlItem
func (r *MacOSPrivacyAccessControlItemRequest) Update(ctx context.Context, reqObj *MacOSPrivacyAccessControlItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSPrivacyAccessControlItem
func (r *MacOSPrivacyAccessControlItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSRedirectSingleSignOnExtensionRequestBuilder is request builder for MacOSRedirectSingleSignOnExtension
type MacOSRedirectSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSRedirectSingleSignOnExtensionRequest
func (b *MacOSRedirectSingleSignOnExtensionRequestBuilder) Request() *MacOSRedirectSingleSignOnExtensionRequest {
	return &MacOSRedirectSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSRedirectSingleSignOnExtensionRequest is request for MacOSRedirectSingleSignOnExtension
type MacOSRedirectSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSRedirectSingleSignOnExtension
func (r *MacOSRedirectSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *MacOSRedirectSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSRedirectSingleSignOnExtension
func (r *MacOSRedirectSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *MacOSRedirectSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSRedirectSingleSignOnExtension
func (r *MacOSRedirectSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSScepCertificateProfileRequestBuilder is request builder for MacOSScepCertificateProfile
type MacOSScepCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSScepCertificateProfileRequest
func (b *MacOSScepCertificateProfileRequestBuilder) Request() *MacOSScepCertificateProfileRequest {
	return &MacOSScepCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSScepCertificateProfileRequest is request for MacOSScepCertificateProfile
type MacOSScepCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for MacOSScepCertificateProfile
func (r *MacOSScepCertificateProfileRequest) Get(ctx context.Context) (resObj *MacOSScepCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSScepCertificateProfile
func (r *MacOSScepCertificateProfileRequest) Update(ctx context.Context, reqObj *MacOSScepCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSScepCertificateProfile
func (r *MacOSScepCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSingleSignOnExtensionRequestBuilder is request builder for MacOSSingleSignOnExtension
type MacOSSingleSignOnExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSingleSignOnExtensionRequest
func (b *MacOSSingleSignOnExtensionRequestBuilder) Request() *MacOSSingleSignOnExtensionRequest {
	return &MacOSSingleSignOnExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSingleSignOnExtensionRequest is request for MacOSSingleSignOnExtension
type MacOSSingleSignOnExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSSingleSignOnExtension
func (r *MacOSSingleSignOnExtensionRequest) Get(ctx context.Context) (resObj *MacOSSingleSignOnExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSingleSignOnExtension
func (r *MacOSSingleSignOnExtensionRequest) Update(ctx context.Context, reqObj *MacOSSingleSignOnExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSingleSignOnExtension
func (r *MacOSSingleSignOnExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSoftwareUpdateAccountSummaryRequestBuilder is request builder for MacOSSoftwareUpdateAccountSummary
type MacOSSoftwareUpdateAccountSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSoftwareUpdateAccountSummaryRequest
func (b *MacOSSoftwareUpdateAccountSummaryRequestBuilder) Request() *MacOSSoftwareUpdateAccountSummaryRequest {
	return &MacOSSoftwareUpdateAccountSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSoftwareUpdateAccountSummaryRequest is request for MacOSSoftwareUpdateAccountSummary
type MacOSSoftwareUpdateAccountSummaryRequest struct{ BaseRequest }

// Get performs GET request for MacOSSoftwareUpdateAccountSummary
func (r *MacOSSoftwareUpdateAccountSummaryRequest) Get(ctx context.Context) (resObj *MacOSSoftwareUpdateAccountSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSoftwareUpdateAccountSummary
func (r *MacOSSoftwareUpdateAccountSummaryRequest) Update(ctx context.Context, reqObj *MacOSSoftwareUpdateAccountSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSoftwareUpdateAccountSummary
func (r *MacOSSoftwareUpdateAccountSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSoftwareUpdateCategorySummaryRequestBuilder is request builder for MacOSSoftwareUpdateCategorySummary
type MacOSSoftwareUpdateCategorySummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSoftwareUpdateCategorySummaryRequest
func (b *MacOSSoftwareUpdateCategorySummaryRequestBuilder) Request() *MacOSSoftwareUpdateCategorySummaryRequest {
	return &MacOSSoftwareUpdateCategorySummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSoftwareUpdateCategorySummaryRequest is request for MacOSSoftwareUpdateCategorySummary
type MacOSSoftwareUpdateCategorySummaryRequest struct{ BaseRequest }

// Get performs GET request for MacOSSoftwareUpdateCategorySummary
func (r *MacOSSoftwareUpdateCategorySummaryRequest) Get(ctx context.Context) (resObj *MacOSSoftwareUpdateCategorySummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSoftwareUpdateCategorySummary
func (r *MacOSSoftwareUpdateCategorySummaryRequest) Update(ctx context.Context, reqObj *MacOSSoftwareUpdateCategorySummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSoftwareUpdateCategorySummary
func (r *MacOSSoftwareUpdateCategorySummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSoftwareUpdateConfigurationRequestBuilder is request builder for MacOSSoftwareUpdateConfiguration
type MacOSSoftwareUpdateConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSoftwareUpdateConfigurationRequest
func (b *MacOSSoftwareUpdateConfigurationRequestBuilder) Request() *MacOSSoftwareUpdateConfigurationRequest {
	return &MacOSSoftwareUpdateConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSoftwareUpdateConfigurationRequest is request for MacOSSoftwareUpdateConfiguration
type MacOSSoftwareUpdateConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSSoftwareUpdateConfiguration
func (r *MacOSSoftwareUpdateConfigurationRequest) Get(ctx context.Context) (resObj *MacOSSoftwareUpdateConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSoftwareUpdateConfiguration
func (r *MacOSSoftwareUpdateConfigurationRequest) Update(ctx context.Context, reqObj *MacOSSoftwareUpdateConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSoftwareUpdateConfiguration
func (r *MacOSSoftwareUpdateConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSoftwareUpdateStateSummaryRequestBuilder is request builder for MacOSSoftwareUpdateStateSummary
type MacOSSoftwareUpdateStateSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSoftwareUpdateStateSummaryRequest
func (b *MacOSSoftwareUpdateStateSummaryRequestBuilder) Request() *MacOSSoftwareUpdateStateSummaryRequest {
	return &MacOSSoftwareUpdateStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSoftwareUpdateStateSummaryRequest is request for MacOSSoftwareUpdateStateSummary
type MacOSSoftwareUpdateStateSummaryRequest struct{ BaseRequest }

// Get performs GET request for MacOSSoftwareUpdateStateSummary
func (r *MacOSSoftwareUpdateStateSummaryRequest) Get(ctx context.Context) (resObj *MacOSSoftwareUpdateStateSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSoftwareUpdateStateSummary
func (r *MacOSSoftwareUpdateStateSummaryRequest) Update(ctx context.Context, reqObj *MacOSSoftwareUpdateStateSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSoftwareUpdateStateSummary
func (r *MacOSSoftwareUpdateStateSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSystemExtensionRequestBuilder is request builder for MacOSSystemExtension
type MacOSSystemExtensionRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSystemExtensionRequest
func (b *MacOSSystemExtensionRequestBuilder) Request() *MacOSSystemExtensionRequest {
	return &MacOSSystemExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSystemExtensionRequest is request for MacOSSystemExtension
type MacOSSystemExtensionRequest struct{ BaseRequest }

// Get performs GET request for MacOSSystemExtension
func (r *MacOSSystemExtensionRequest) Get(ctx context.Context) (resObj *MacOSSystemExtension, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSystemExtension
func (r *MacOSSystemExtensionRequest) Update(ctx context.Context, reqObj *MacOSSystemExtension) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSystemExtension
func (r *MacOSSystemExtensionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSSystemExtensionTypeMappingRequestBuilder is request builder for MacOSSystemExtensionTypeMapping
type MacOSSystemExtensionTypeMappingRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSSystemExtensionTypeMappingRequest
func (b *MacOSSystemExtensionTypeMappingRequestBuilder) Request() *MacOSSystemExtensionTypeMappingRequest {
	return &MacOSSystemExtensionTypeMappingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSSystemExtensionTypeMappingRequest is request for MacOSSystemExtensionTypeMapping
type MacOSSystemExtensionTypeMappingRequest struct{ BaseRequest }

// Get performs GET request for MacOSSystemExtensionTypeMapping
func (r *MacOSSystemExtensionTypeMappingRequest) Get(ctx context.Context) (resObj *MacOSSystemExtensionTypeMapping, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSSystemExtensionTypeMapping
func (r *MacOSSystemExtensionTypeMappingRequest) Update(ctx context.Context, reqObj *MacOSSystemExtensionTypeMapping) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSSystemExtensionTypeMapping
func (r *MacOSSystemExtensionTypeMappingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSTrustedRootCertificateRequestBuilder is request builder for MacOSTrustedRootCertificate
type MacOSTrustedRootCertificateRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSTrustedRootCertificateRequest
func (b *MacOSTrustedRootCertificateRequestBuilder) Request() *MacOSTrustedRootCertificateRequest {
	return &MacOSTrustedRootCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSTrustedRootCertificateRequest is request for MacOSTrustedRootCertificate
type MacOSTrustedRootCertificateRequest struct{ BaseRequest }

// Get performs GET request for MacOSTrustedRootCertificate
func (r *MacOSTrustedRootCertificateRequest) Get(ctx context.Context) (resObj *MacOSTrustedRootCertificate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSTrustedRootCertificate
func (r *MacOSTrustedRootCertificateRequest) Update(ctx context.Context, reqObj *MacOSTrustedRootCertificate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSTrustedRootCertificate
func (r *MacOSTrustedRootCertificateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSVpnConfigurationRequestBuilder is request builder for MacOSVpnConfiguration
type MacOSVpnConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSVpnConfigurationRequest
func (b *MacOSVpnConfigurationRequestBuilder) Request() *MacOSVpnConfigurationRequest {
	return &MacOSVpnConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSVpnConfigurationRequest is request for MacOSVpnConfiguration
type MacOSVpnConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSVpnConfiguration
func (r *MacOSVpnConfigurationRequest) Get(ctx context.Context) (resObj *MacOSVpnConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSVpnConfiguration
func (r *MacOSVpnConfigurationRequest) Update(ctx context.Context, reqObj *MacOSVpnConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSVpnConfiguration
func (r *MacOSVpnConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSWiFiConfigurationRequestBuilder is request builder for MacOSWiFiConfiguration
type MacOSWiFiConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSWiFiConfigurationRequest
func (b *MacOSWiFiConfigurationRequestBuilder) Request() *MacOSWiFiConfigurationRequest {
	return &MacOSWiFiConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSWiFiConfigurationRequest is request for MacOSWiFiConfiguration
type MacOSWiFiConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSWiFiConfiguration
func (r *MacOSWiFiConfigurationRequest) Get(ctx context.Context) (resObj *MacOSWiFiConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSWiFiConfiguration
func (r *MacOSWiFiConfigurationRequest) Update(ctx context.Context, reqObj *MacOSWiFiConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSWiFiConfiguration
func (r *MacOSWiFiConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSWiredNetworkConfigurationRequestBuilder is request builder for MacOSWiredNetworkConfiguration
type MacOSWiredNetworkConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSWiredNetworkConfigurationRequest
func (b *MacOSWiredNetworkConfigurationRequestBuilder) Request() *MacOSWiredNetworkConfigurationRequest {
	return &MacOSWiredNetworkConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSWiredNetworkConfigurationRequest is request for MacOSWiredNetworkConfiguration
type MacOSWiredNetworkConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSWiredNetworkConfiguration
func (r *MacOSWiredNetworkConfigurationRequest) Get(ctx context.Context) (resObj *MacOSWiredNetworkConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSWiredNetworkConfiguration
func (r *MacOSWiredNetworkConfigurationRequest) Update(ctx context.Context, reqObj *MacOSWiredNetworkConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSWiredNetworkConfiguration
func (r *MacOSWiredNetworkConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsLobAppAssignmentSettingsRequestBuilder is request builder for MacOsLobAppAssignmentSettings
type MacOsLobAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsLobAppAssignmentSettingsRequest
func (b *MacOsLobAppAssignmentSettingsRequestBuilder) Request() *MacOsLobAppAssignmentSettingsRequest {
	return &MacOsLobAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsLobAppAssignmentSettingsRequest is request for MacOsLobAppAssignmentSettings
type MacOsLobAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *MacOsLobAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *MacOsLobAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsVPPAppRequestBuilder is request builder for MacOsVPPApp
type MacOsVPPAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsVPPAppRequest
func (b *MacOsVPPAppRequestBuilder) Request() *MacOsVPPAppRequest {
	return &MacOsVPPAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsVPPAppRequest is request for MacOsVPPApp
type MacOsVPPAppRequest struct{ BaseRequest }

// Get performs GET request for MacOsVPPApp
func (r *MacOsVPPAppRequest) Get(ctx context.Context) (resObj *MacOsVPPApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsVPPApp
func (r *MacOsVPPAppRequest) Update(ctx context.Context, reqObj *MacOsVPPApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsVPPApp
func (r *MacOsVPPAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsVPPAppAssignedLicenseRequestBuilder is request builder for MacOsVPPAppAssignedLicense
type MacOsVPPAppAssignedLicenseRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsVPPAppAssignedLicenseRequest
func (b *MacOsVPPAppAssignedLicenseRequestBuilder) Request() *MacOsVPPAppAssignedLicenseRequest {
	return &MacOsVPPAppAssignedLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsVPPAppAssignedLicenseRequest is request for MacOsVPPAppAssignedLicense
type MacOsVPPAppAssignedLicenseRequest struct{ BaseRequest }

// Get performs GET request for MacOsVPPAppAssignedLicense
func (r *MacOsVPPAppAssignedLicenseRequest) Get(ctx context.Context) (resObj *MacOsVPPAppAssignedLicense, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsVPPAppAssignedLicense
func (r *MacOsVPPAppAssignedLicenseRequest) Update(ctx context.Context, reqObj *MacOsVPPAppAssignedLicense) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsVPPAppAssignedLicense
func (r *MacOsVPPAppAssignedLicenseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsVPPAppAssignmentSettingsRequestBuilder is request builder for MacOsVPPAppAssignmentSettings
type MacOsVPPAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsVPPAppAssignmentSettingsRequest
func (b *MacOsVPPAppAssignmentSettingsRequestBuilder) Request() *MacOsVPPAppAssignmentSettingsRequest {
	return &MacOsVPPAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsVPPAppAssignmentSettingsRequest is request for MacOsVPPAppAssignmentSettings
type MacOsVPPAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for MacOsVPPAppAssignmentSettings
func (r *MacOsVPPAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *MacOsVPPAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsVPPAppAssignmentSettings
func (r *MacOsVPPAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *MacOsVPPAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsVPPAppAssignmentSettings
func (r *MacOsVPPAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsVPPAppRevokeLicensesActionResultRequestBuilder is request builder for MacOsVPPAppRevokeLicensesActionResult
type MacOsVPPAppRevokeLicensesActionResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsVPPAppRevokeLicensesActionResultRequest
func (b *MacOsVPPAppRevokeLicensesActionResultRequestBuilder) Request() *MacOsVPPAppRevokeLicensesActionResultRequest {
	return &MacOsVPPAppRevokeLicensesActionResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsVPPAppRevokeLicensesActionResultRequest is request for MacOsVPPAppRevokeLicensesActionResult
type MacOsVPPAppRevokeLicensesActionResultRequest struct{ BaseRequest }

// Get performs GET request for MacOsVPPAppRevokeLicensesActionResult
func (r *MacOsVPPAppRevokeLicensesActionResultRequest) Get(ctx context.Context) (resObj *MacOsVPPAppRevokeLicensesActionResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsVPPAppRevokeLicensesActionResult
func (r *MacOsVPPAppRevokeLicensesActionResultRequest) Update(ctx context.Context, reqObj *MacOsVPPAppRevokeLicensesActionResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsVPPAppRevokeLicensesActionResult
func (r *MacOsVPPAppRevokeLicensesActionResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
