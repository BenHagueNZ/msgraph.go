// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// DirectoryRequestBuilder is request builder for Directory
type DirectoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryRequest
func (b *DirectoryRequestBuilder) Request() *DirectoryRequest {
	return &DirectoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryRequest is request for Directory
type DirectoryRequest struct{ BaseRequest }

// Get performs GET request for Directory
func (r *DirectoryRequest) Get(ctx context.Context) (resObj *Directory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Directory
func (r *DirectoryRequest) Update(ctx context.Context, reqObj *Directory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Directory
func (r *DirectoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DirectoryAuditRequestBuilder is request builder for DirectoryAudit
type DirectoryAuditRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryAuditRequest
func (b *DirectoryAuditRequestBuilder) Request() *DirectoryAuditRequest {
	return &DirectoryAuditRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryAuditRequest is request for DirectoryAudit
type DirectoryAuditRequest struct{ BaseRequest }

// Get performs GET request for DirectoryAudit
func (r *DirectoryAuditRequest) Get(ctx context.Context) (resObj *DirectoryAudit, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DirectoryAudit
func (r *DirectoryAuditRequest) Update(ctx context.Context, reqObj *DirectoryAudit) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DirectoryAudit
func (r *DirectoryAuditRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DirectoryObjectRequestBuilder is request builder for DirectoryObject
type DirectoryObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryObjectRequest
func (b *DirectoryObjectRequestBuilder) Request() *DirectoryObjectRequest {
	return &DirectoryObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryObjectRequest is request for DirectoryObject
type DirectoryObjectRequest struct{ BaseRequest }

// Get performs GET request for DirectoryObject
func (r *DirectoryObjectRequest) Get(ctx context.Context) (resObj *DirectoryObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DirectoryObject
func (r *DirectoryObjectRequest) Update(ctx context.Context, reqObj *DirectoryObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DirectoryObject
func (r *DirectoryObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DirectoryObjectPartnerReferenceRequestBuilder is request builder for DirectoryObjectPartnerReference
type DirectoryObjectPartnerReferenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryObjectPartnerReferenceRequest
func (b *DirectoryObjectPartnerReferenceRequestBuilder) Request() *DirectoryObjectPartnerReferenceRequest {
	return &DirectoryObjectPartnerReferenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryObjectPartnerReferenceRequest is request for DirectoryObjectPartnerReference
type DirectoryObjectPartnerReferenceRequest struct{ BaseRequest }

// Get performs GET request for DirectoryObjectPartnerReference
func (r *DirectoryObjectPartnerReferenceRequest) Get(ctx context.Context) (resObj *DirectoryObjectPartnerReference, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DirectoryObjectPartnerReference
func (r *DirectoryObjectPartnerReferenceRequest) Update(ctx context.Context, reqObj *DirectoryObjectPartnerReference) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DirectoryObjectPartnerReference
func (r *DirectoryObjectPartnerReferenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DirectoryRoleRequestBuilder is request builder for DirectoryRole
type DirectoryRoleRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryRoleRequest
func (b *DirectoryRoleRequestBuilder) Request() *DirectoryRoleRequest {
	return &DirectoryRoleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryRoleRequest is request for DirectoryRole
type DirectoryRoleRequest struct{ BaseRequest }

// Get performs GET request for DirectoryRole
func (r *DirectoryRoleRequest) Get(ctx context.Context) (resObj *DirectoryRole, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DirectoryRole
func (r *DirectoryRoleRequest) Update(ctx context.Context, reqObj *DirectoryRole) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DirectoryRole
func (r *DirectoryRoleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DirectoryRoleTemplateRequestBuilder is request builder for DirectoryRoleTemplate
type DirectoryRoleTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DirectoryRoleTemplateRequest
func (b *DirectoryRoleTemplateRequestBuilder) Request() *DirectoryRoleTemplateRequest {
	return &DirectoryRoleTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DirectoryRoleTemplateRequest is request for DirectoryRoleTemplate
type DirectoryRoleTemplateRequest struct{ BaseRequest }

// Get performs GET request for DirectoryRoleTemplate
func (r *DirectoryRoleTemplateRequest) Get(ctx context.Context) (resObj *DirectoryRoleTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DirectoryRoleTemplate
func (r *DirectoryRoleTemplateRequest) Update(ctx context.Context, reqObj *DirectoryRoleTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DirectoryRoleTemplate
func (r *DirectoryRoleTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type DirectoryObjectCollectionValidatePropertiesRequestBuilder struct{ BaseRequestBuilder }

// ValidateProperties action undocumentedrav
func (b *AdministrativeUnitMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *AppManagementPolicyAppliesToCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ApplicationOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ConnectedOrganizationExternalSponsorsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ConnectedOrganizationInternalSponsorsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DeviceMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DeviceRegisteredUsersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DirectoryDeletedItemsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DirectoryRoleMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *DomainDomainNameReferencesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *FeatureRolloutPolicyAppliesToCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupAcceptedSendersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupRejectedSendersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *GroupTransitiveMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *OrgContactDirectReportsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *OrgContactMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *OrgContactTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ServicePrincipalCreatedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ServicePrincipalMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ServicePrincipalOwnedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ServicePrincipalOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *ServicePrincipalTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *StsPolicyAppliesToCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UnifiedRoleManagementPolicyRuleTargetTargetObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserCreatedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserDirectReportsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserOwnedDevicesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserOwnedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserRegisteredDevicesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties action undocumentedrav
func (b *UserTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectCollectionValidatePropertiesRequestParameter) *DirectoryObjectCollectionValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ValidateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectCollectionValidatePropertiesRequest struct{ BaseRequest }

func (b *DirectoryObjectCollectionValidatePropertiesRequestBuilder) Request() *DirectoryObjectCollectionValidatePropertiesRequest {
	return &DirectoryObjectCollectionValidatePropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectCollectionValidatePropertiesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder struct{ BaseRequestBuilder }

// GetAvailableExtensionProperties action undocumentedrac
func (b *AdministrativeUnitMembersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *AppManagementPolicyAppliesToCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ApplicationOwnersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ConnectedOrganizationExternalSponsorsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ConnectedOrganizationInternalSponsorsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DeviceMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DeviceRegisteredUsersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DirectoryDeletedItemsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DirectoryRoleMembersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *DomainDomainNameReferencesCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *FeatureRolloutPolicyAppliesToCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupAcceptedSendersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupMembersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupOwnersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupRejectedSendersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *GroupTransitiveMembersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *OrgContactDirectReportsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *OrgContactMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *OrgContactTransitiveMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ServicePrincipalCreatedObjectsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ServicePrincipalMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ServicePrincipalOwnedObjectsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ServicePrincipalOwnersCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *ServicePrincipalTransitiveMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *StsPolicyAppliesToCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UnifiedRoleManagementPolicyRuleTargetTargetObjectsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserCreatedObjectsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserDirectReportsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserOwnedDevicesCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserOwnedObjectsCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserRegisteredDevicesCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetAvailableExtensionProperties action undocumentedrac
func (b *UserTransitiveMemberOfCollectionRequestBuilder) GetAvailableExtensionProperties(reqObj *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestParameter) *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder {
	bb := &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetAvailableExtensionProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest struct{ BaseRequest }

func (b *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequestBuilder) Request() *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest {
	return &DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]ExtensionProperty, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ExtensionProperty
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []ExtensionProperty
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest) PostN(ctx context.Context, n int) ([]ExtensionProperty, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectCollectionGetAvailableExtensionPropertiesRequest) Post(ctx context.Context) ([]ExtensionProperty, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectCollectionGetByIDsRequestBuilder struct{ BaseRequestBuilder }

// GetByIDs action undocumentedrac
func (b *AdministrativeUnitMembersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *AppManagementPolicyAppliesToCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ApplicationOwnersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ConnectedOrganizationExternalSponsorsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ConnectedOrganizationInternalSponsorsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DeviceMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DeviceRegisteredUsersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DirectoryDeletedItemsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DirectoryRoleMembersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *DomainDomainNameReferencesCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *FeatureRolloutPolicyAppliesToCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupAcceptedSendersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupMembersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupOwnersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupRejectedSendersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *GroupTransitiveMembersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *OrgContactDirectReportsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *OrgContactMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *OrgContactTransitiveMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ServicePrincipalCreatedObjectsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ServicePrincipalMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ServicePrincipalOwnedObjectsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ServicePrincipalOwnersCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *ServicePrincipalTransitiveMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *StsPolicyAppliesToCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UnifiedRoleManagementPolicyRuleTargetTargetObjectsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserCreatedObjectsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserDirectReportsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserOwnedDevicesCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserOwnedObjectsCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserRegisteredDevicesCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIDs action undocumentedrac
func (b *UserTransitiveMemberOfCollectionRequestBuilder) GetByIDs(reqObj *DirectoryObjectCollectionGetByIDsRequestParameter) *DirectoryObjectCollectionGetByIDsRequestBuilder {
	bb := &DirectoryObjectCollectionGetByIDsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectCollectionGetByIDsRequest struct{ BaseRequest }

func (b *DirectoryObjectCollectionGetByIDsRequestBuilder) Request() *DirectoryObjectCollectionGetByIDsRequest {
	return &DirectoryObjectCollectionGetByIDsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectCollectionGetByIDsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectCollectionGetByIDsRequest) PostN(ctx context.Context, n int) ([]DirectoryObject, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectCollectionGetByIDsRequest) Post(ctx context.Context) ([]DirectoryObject, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectCheckMemberGroupsRequestBuilder struct{ BaseRequestBuilder }

// CheckMemberGroups action undocumentedrac
func (b *DirectoryObjectRequestBuilder) CheckMemberGroups(reqObj *DirectoryObjectCheckMemberGroupsRequestParameter) *DirectoryObjectCheckMemberGroupsRequestBuilder {
	bb := &DirectoryObjectCheckMemberGroupsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CheckMemberGroups"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectCheckMemberGroupsRequest struct{ BaseRequest }

func (b *DirectoryObjectCheckMemberGroupsRequestBuilder) Request() *DirectoryObjectCheckMemberGroupsRequest {
	return &DirectoryObjectCheckMemberGroupsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectCheckMemberGroupsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]string, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []string
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []string
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectCheckMemberGroupsRequest) PostN(ctx context.Context, n int) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectCheckMemberGroupsRequest) Post(ctx context.Context) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectCheckMemberObjectsRequestBuilder struct{ BaseRequestBuilder }

// CheckMemberObjects action undocumentedrac
func (b *DirectoryObjectRequestBuilder) CheckMemberObjects(reqObj *DirectoryObjectCheckMemberObjectsRequestParameter) *DirectoryObjectCheckMemberObjectsRequestBuilder {
	bb := &DirectoryObjectCheckMemberObjectsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/CheckMemberObjects"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectCheckMemberObjectsRequest struct{ BaseRequest }

func (b *DirectoryObjectCheckMemberObjectsRequestBuilder) Request() *DirectoryObjectCheckMemberObjectsRequest {
	return &DirectoryObjectCheckMemberObjectsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectCheckMemberObjectsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]string, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []string
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []string
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectCheckMemberObjectsRequest) PostN(ctx context.Context, n int) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectCheckMemberObjectsRequest) Post(ctx context.Context) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectGetMemberGroupsRequestBuilder struct{ BaseRequestBuilder }

// GetMemberGroups action undocumentedrac
func (b *DirectoryObjectRequestBuilder) GetMemberGroups(reqObj *DirectoryObjectGetMemberGroupsRequestParameter) *DirectoryObjectGetMemberGroupsRequestBuilder {
	bb := &DirectoryObjectGetMemberGroupsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMemberGroups"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectGetMemberGroupsRequest struct{ BaseRequest }

func (b *DirectoryObjectGetMemberGroupsRequestBuilder) Request() *DirectoryObjectGetMemberGroupsRequest {
	return &DirectoryObjectGetMemberGroupsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectGetMemberGroupsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]string, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []string
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []string
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectGetMemberGroupsRequest) PostN(ctx context.Context, n int) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectGetMemberGroupsRequest) Post(ctx context.Context) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectGetMemberObjectsRequestBuilder struct{ BaseRequestBuilder }

// GetMemberObjects action undocumentedrac
func (b *DirectoryObjectRequestBuilder) GetMemberObjects(reqObj *DirectoryObjectGetMemberObjectsRequestParameter) *DirectoryObjectGetMemberObjectsRequestBuilder {
	bb := &DirectoryObjectGetMemberObjectsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/GetMemberObjects"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectGetMemberObjectsRequest struct{ BaseRequest }

func (b *DirectoryObjectGetMemberObjectsRequestBuilder) Request() *DirectoryObjectGetMemberObjectsRequest {
	return &DirectoryObjectGetMemberObjectsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectGetMemberObjectsRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]string, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []string
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []string
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, _ = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

func (r *DirectoryObjectGetMemberObjectsRequest) PostN(ctx context.Context, n int) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

func (r *DirectoryObjectGetMemberObjectsRequest) Post(ctx context.Context) ([]string, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

type DirectoryObjectRestoreRequestBuilder struct{ BaseRequestBuilder }

// Restore action undocumentedras
func (b *DirectoryObjectRequestBuilder) Restore(reqObj *DirectoryObjectRestoreRequestParameter) *DirectoryObjectRestoreRequestBuilder {
	bb := &DirectoryObjectRestoreRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/Restore"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type DirectoryObjectRestoreRequest struct{ BaseRequest }

func (b *DirectoryObjectRestoreRequestBuilder) Request() *DirectoryObjectRestoreRequest {
	return &DirectoryObjectRestoreRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *DirectoryObjectRestoreRequest) Post(ctx context.Context) (resObj *DirectoryObject, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
