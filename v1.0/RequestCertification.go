// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// CertificationRequestBuilder is request builder for Certification
type CertificationRequestBuilder struct{ BaseRequestBuilder }

// Request returns CertificationRequest
func (b *CertificationRequestBuilder) Request() *CertificationRequest {
	return &CertificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CertificationRequest is request for Certification
type CertificationRequest struct{ BaseRequest }

// Get performs GET request for Certification
func (r *CertificationRequest) Get(ctx context.Context) (resObj *Certification, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Certification
func (r *CertificationRequest) Update(ctx context.Context, reqObj *Certification) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Certification
func (r *CertificationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CertificationControlRequestBuilder is request builder for CertificationControl
type CertificationControlRequestBuilder struct{ BaseRequestBuilder }

// Request returns CertificationControlRequest
func (b *CertificationControlRequestBuilder) Request() *CertificationControlRequest {
	return &CertificationControlRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CertificationControlRequest is request for CertificationControl
type CertificationControlRequest struct{ BaseRequest }

// Get performs GET request for CertificationControl
func (r *CertificationControlRequest) Get(ctx context.Context) (resObj *CertificationControl, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CertificationControl
func (r *CertificationControlRequest) Update(ctx context.Context, reqObj *CertificationControl) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CertificationControl
func (r *CertificationControlRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
