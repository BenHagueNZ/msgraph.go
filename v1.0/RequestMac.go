// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// MacOSCompliancePolicyRequestBuilder is request builder for MacOSCompliancePolicy
type MacOSCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCompliancePolicyRequest
func (b *MacOSCompliancePolicyRequestBuilder) Request() *MacOSCompliancePolicyRequest {
	return &MacOSCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCompliancePolicyRequest is request for MacOSCompliancePolicy
type MacOSCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Get(ctx context.Context) (resObj *MacOSCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Update(ctx context.Context, reqObj *MacOSCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCompliancePolicy
func (r *MacOSCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSCustomConfigurationRequestBuilder is request builder for MacOSCustomConfiguration
type MacOSCustomConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSCustomConfigurationRequest
func (b *MacOSCustomConfigurationRequestBuilder) Request() *MacOSCustomConfigurationRequest {
	return &MacOSCustomConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSCustomConfigurationRequest is request for MacOSCustomConfiguration
type MacOSCustomConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Get(ctx context.Context) (resObj *MacOSCustomConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Update(ctx context.Context, reqObj *MacOSCustomConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSCustomConfiguration
func (r *MacOSCustomConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSDeviceFeaturesConfigurationRequestBuilder is request builder for MacOSDeviceFeaturesConfiguration
type MacOSDeviceFeaturesConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSDeviceFeaturesConfigurationRequest
func (b *MacOSDeviceFeaturesConfigurationRequestBuilder) Request() *MacOSDeviceFeaturesConfigurationRequest {
	return &MacOSDeviceFeaturesConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSDeviceFeaturesConfigurationRequest is request for MacOSDeviceFeaturesConfiguration
type MacOSDeviceFeaturesConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Get(ctx context.Context) (resObj *MacOSDeviceFeaturesConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Update(ctx context.Context, reqObj *MacOSDeviceFeaturesConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSDeviceFeaturesConfiguration
func (r *MacOSDeviceFeaturesConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSGeneralDeviceConfigurationRequestBuilder is request builder for MacOSGeneralDeviceConfiguration
type MacOSGeneralDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSGeneralDeviceConfigurationRequest
func (b *MacOSGeneralDeviceConfigurationRequestBuilder) Request() *MacOSGeneralDeviceConfigurationRequest {
	return &MacOSGeneralDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSGeneralDeviceConfigurationRequest is request for MacOSGeneralDeviceConfiguration
type MacOSGeneralDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Get(ctx context.Context) (resObj *MacOSGeneralDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Update(ctx context.Context, reqObj *MacOSGeneralDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSGeneralDeviceConfiguration
func (r *MacOSGeneralDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSLobAppRequestBuilder is request builder for MacOSLobApp
type MacOSLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSLobAppRequest
func (b *MacOSLobAppRequestBuilder) Request() *MacOSLobAppRequest {
	return &MacOSLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSLobAppRequest is request for MacOSLobApp
type MacOSLobAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSLobApp
func (r *MacOSLobAppRequest) Get(ctx context.Context) (resObj *MacOSLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSLobApp
func (r *MacOSLobAppRequest) Update(ctx context.Context, reqObj *MacOSLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSLobApp
func (r *MacOSLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSLobChildAppRequestBuilder is request builder for MacOSLobChildApp
type MacOSLobChildAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSLobChildAppRequest
func (b *MacOSLobChildAppRequestBuilder) Request() *MacOSLobChildAppRequest {
	return &MacOSLobChildAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSLobChildAppRequest is request for MacOSLobChildApp
type MacOSLobChildAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Get(ctx context.Context) (resObj *MacOSLobChildApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Update(ctx context.Context, reqObj *MacOSLobChildApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSLobChildApp
func (r *MacOSLobChildAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMicrosoftEdgeAppRequestBuilder is request builder for MacOSMicrosoftEdgeApp
type MacOSMicrosoftEdgeAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMicrosoftEdgeAppRequest
func (b *MacOSMicrosoftEdgeAppRequestBuilder) Request() *MacOSMicrosoftEdgeAppRequest {
	return &MacOSMicrosoftEdgeAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMicrosoftEdgeAppRequest is request for MacOSMicrosoftEdgeApp
type MacOSMicrosoftEdgeAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Get(ctx context.Context) (resObj *MacOSMicrosoftEdgeApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Update(ctx context.Context, reqObj *MacOSMicrosoftEdgeApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMicrosoftEdgeApp
func (r *MacOSMicrosoftEdgeAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSMinimumOperatingSystemRequestBuilder is request builder for MacOSMinimumOperatingSystem
type MacOSMinimumOperatingSystemRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSMinimumOperatingSystemRequest
func (b *MacOSMinimumOperatingSystemRequestBuilder) Request() *MacOSMinimumOperatingSystemRequest {
	return &MacOSMinimumOperatingSystemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSMinimumOperatingSystemRequest is request for MacOSMinimumOperatingSystem
type MacOSMinimumOperatingSystemRequest struct{ BaseRequest }

// Get performs GET request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Get(ctx context.Context) (resObj *MacOSMinimumOperatingSystem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Update(ctx context.Context, reqObj *MacOSMinimumOperatingSystem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSMinimumOperatingSystem
func (r *MacOSMinimumOperatingSystemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOSOfficeSuiteAppRequestBuilder is request builder for MacOSOfficeSuiteApp
type MacOSOfficeSuiteAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOSOfficeSuiteAppRequest
func (b *MacOSOfficeSuiteAppRequestBuilder) Request() *MacOSOfficeSuiteAppRequest {
	return &MacOSOfficeSuiteAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOSOfficeSuiteAppRequest is request for MacOSOfficeSuiteApp
type MacOSOfficeSuiteAppRequest struct{ BaseRequest }

// Get performs GET request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Get(ctx context.Context) (resObj *MacOSOfficeSuiteApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Update(ctx context.Context, reqObj *MacOSOfficeSuiteApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOSOfficeSuiteApp
func (r *MacOSOfficeSuiteAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MacOsLobAppAssignmentSettingsRequestBuilder is request builder for MacOsLobAppAssignmentSettings
type MacOsLobAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MacOsLobAppAssignmentSettingsRequest
func (b *MacOsLobAppAssignmentSettingsRequestBuilder) Request() *MacOsLobAppAssignmentSettingsRequest {
	return &MacOsLobAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MacOsLobAppAssignmentSettingsRequest is request for MacOsLobAppAssignmentSettings
type MacOsLobAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *MacOsLobAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *MacOsLobAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MacOsLobAppAssignmentSettings
func (r *MacOsLobAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
