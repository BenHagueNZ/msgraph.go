// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IncomingCallOptionsRequestBuilder is request builder for IncomingCallOptions
type IncomingCallOptionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IncomingCallOptionsRequest
func (b *IncomingCallOptionsRequestBuilder) Request() *IncomingCallOptionsRequest {
	return &IncomingCallOptionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IncomingCallOptionsRequest is request for IncomingCallOptions
type IncomingCallOptionsRequest struct{ BaseRequest }

// Get performs GET request for IncomingCallOptions
func (r *IncomingCallOptionsRequest) Get(ctx context.Context) (resObj *IncomingCallOptions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IncomingCallOptions
func (r *IncomingCallOptionsRequest) Update(ctx context.Context, reqObj *IncomingCallOptions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IncomingCallOptions
func (r *IncomingCallOptionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IncomingContextRequestBuilder is request builder for IncomingContext
type IncomingContextRequestBuilder struct{ BaseRequestBuilder }

// Request returns IncomingContextRequest
func (b *IncomingContextRequestBuilder) Request() *IncomingContextRequest {
	return &IncomingContextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IncomingContextRequest is request for IncomingContext
type IncomingContextRequest struct{ BaseRequest }

// Get performs GET request for IncomingContext
func (r *IncomingContextRequest) Get(ctx context.Context) (resObj *IncomingContext, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IncomingContext
func (r *IncomingContextRequest) Update(ctx context.Context, reqObj *IncomingContext) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IncomingContext
func (r *IncomingContextRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
