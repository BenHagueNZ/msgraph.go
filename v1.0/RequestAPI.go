// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// APIApplicationRequestBuilder is request builder for APIApplication
type APIApplicationRequestBuilder struct{ BaseRequestBuilder }

// Request returns APIApplicationRequest
func (b *APIApplicationRequestBuilder) Request() *APIApplicationRequest {
	return &APIApplicationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// APIApplicationRequest is request for APIApplication
type APIApplicationRequest struct{ BaseRequest }

// Get performs GET request for APIApplication
func (r *APIApplicationRequest) Get(ctx context.Context) (resObj *APIApplication, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for APIApplication
func (r *APIApplicationRequest) Update(ctx context.Context, reqObj *APIApplication) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for APIApplication
func (r *APIApplicationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// APIAuthenticationConfigurationBaseRequestBuilder is request builder for APIAuthenticationConfigurationBase
type APIAuthenticationConfigurationBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns APIAuthenticationConfigurationBaseRequest
func (b *APIAuthenticationConfigurationBaseRequestBuilder) Request() *APIAuthenticationConfigurationBaseRequest {
	return &APIAuthenticationConfigurationBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// APIAuthenticationConfigurationBaseRequest is request for APIAuthenticationConfigurationBase
type APIAuthenticationConfigurationBaseRequest struct{ BaseRequest }

// Get performs GET request for APIAuthenticationConfigurationBase
func (r *APIAuthenticationConfigurationBaseRequest) Get(ctx context.Context) (resObj *APIAuthenticationConfigurationBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for APIAuthenticationConfigurationBase
func (r *APIAuthenticationConfigurationBaseRequest) Update(ctx context.Context, reqObj *APIAuthenticationConfigurationBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for APIAuthenticationConfigurationBase
func (r *APIAuthenticationConfigurationBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
