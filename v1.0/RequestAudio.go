// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// AudioRequestBuilder is request builder for Audio
type AudioRequestBuilder struct{ BaseRequestBuilder }

// Request returns AudioRequest
func (b *AudioRequestBuilder) Request() *AudioRequest {
	return &AudioRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AudioRequest is request for Audio
type AudioRequest struct{ BaseRequest }

// Get performs GET request for Audio
func (r *AudioRequest) Get(ctx context.Context) (resObj *Audio, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Audio
func (r *AudioRequest) Update(ctx context.Context, reqObj *Audio) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Audio
func (r *AudioRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AudioConferencingRequestBuilder is request builder for AudioConferencing
type AudioConferencingRequestBuilder struct{ BaseRequestBuilder }

// Request returns AudioConferencingRequest
func (b *AudioConferencingRequestBuilder) Request() *AudioConferencingRequest {
	return &AudioConferencingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AudioConferencingRequest is request for AudioConferencing
type AudioConferencingRequest struct{ BaseRequest }

// Get performs GET request for AudioConferencing
func (r *AudioConferencingRequest) Get(ctx context.Context) (resObj *AudioConferencing, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AudioConferencing
func (r *AudioConferencingRequest) Update(ctx context.Context, reqObj *AudioConferencing) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AudioConferencing
func (r *AudioConferencingRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// AudioRoutingGroupRequestBuilder is request builder for AudioRoutingGroup
type AudioRoutingGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns AudioRoutingGroupRequest
func (b *AudioRoutingGroupRequestBuilder) Request() *AudioRoutingGroupRequest {
	return &AudioRoutingGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AudioRoutingGroupRequest is request for AudioRoutingGroup
type AudioRoutingGroupRequest struct{ BaseRequest }

// Get performs GET request for AudioRoutingGroup
func (r *AudioRoutingGroupRequest) Get(ctx context.Context) (resObj *AudioRoutingGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AudioRoutingGroup
func (r *AudioRoutingGroupRequest) Update(ctx context.Context, reqObj *AudioRoutingGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AudioRoutingGroup
func (r *AudioRoutingGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
