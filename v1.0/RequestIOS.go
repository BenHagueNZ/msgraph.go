// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// IOSCertificateProfileRequestBuilder is request builder for IOSCertificateProfile
type IOSCertificateProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCertificateProfileRequest
func (b *IOSCertificateProfileRequestBuilder) Request() *IOSCertificateProfileRequest {
	return &IOSCertificateProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCertificateProfileRequest is request for IOSCertificateProfile
type IOSCertificateProfileRequest struct{ BaseRequest }

// Get performs GET request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Get(ctx context.Context) (resObj *IOSCertificateProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Update(ctx context.Context, reqObj *IOSCertificateProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCertificateProfile
func (r *IOSCertificateProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCompliancePolicyRequestBuilder is request builder for IOSCompliancePolicy
type IOSCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCompliancePolicyRequest
func (b *IOSCompliancePolicyRequestBuilder) Request() *IOSCompliancePolicyRequest {
	return &IOSCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCompliancePolicyRequest is request for IOSCompliancePolicy
type IOSCompliancePolicyRequest struct{ BaseRequest }

// Get performs GET request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Get(ctx context.Context) (resObj *IOSCompliancePolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Update(ctx context.Context, reqObj *IOSCompliancePolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCompliancePolicy
func (r *IOSCompliancePolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSCustomConfigurationRequestBuilder is request builder for IOSCustomConfiguration
type IOSCustomConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSCustomConfigurationRequest
func (b *IOSCustomConfigurationRequestBuilder) Request() *IOSCustomConfigurationRequest {
	return &IOSCustomConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSCustomConfigurationRequest is request for IOSCustomConfiguration
type IOSCustomConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Get(ctx context.Context) (resObj *IOSCustomConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Update(ctx context.Context, reqObj *IOSCustomConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSCustomConfiguration
func (r *IOSCustomConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSDeviceFeaturesConfigurationRequestBuilder is request builder for IOSDeviceFeaturesConfiguration
type IOSDeviceFeaturesConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSDeviceFeaturesConfigurationRequest
func (b *IOSDeviceFeaturesConfigurationRequestBuilder) Request() *IOSDeviceFeaturesConfigurationRequest {
	return &IOSDeviceFeaturesConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSDeviceFeaturesConfigurationRequest is request for IOSDeviceFeaturesConfiguration
type IOSDeviceFeaturesConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Get(ctx context.Context) (resObj *IOSDeviceFeaturesConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Update(ctx context.Context, reqObj *IOSDeviceFeaturesConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSDeviceFeaturesConfiguration
func (r *IOSDeviceFeaturesConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSDeviceTypeRequestBuilder is request builder for IOSDeviceType
type IOSDeviceTypeRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSDeviceTypeRequest
func (b *IOSDeviceTypeRequestBuilder) Request() *IOSDeviceTypeRequest {
	return &IOSDeviceTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSDeviceTypeRequest is request for IOSDeviceType
type IOSDeviceTypeRequest struct{ BaseRequest }

// Get performs GET request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Get(ctx context.Context) (resObj *IOSDeviceType, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Update(ctx context.Context, reqObj *IOSDeviceType) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSDeviceType
func (r *IOSDeviceTypeRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSGeneralDeviceConfigurationRequestBuilder is request builder for IOSGeneralDeviceConfiguration
type IOSGeneralDeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSGeneralDeviceConfigurationRequest
func (b *IOSGeneralDeviceConfigurationRequestBuilder) Request() *IOSGeneralDeviceConfigurationRequest {
	return &IOSGeneralDeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSGeneralDeviceConfigurationRequest is request for IOSGeneralDeviceConfiguration
type IOSGeneralDeviceConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Get(ctx context.Context) (resObj *IOSGeneralDeviceConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Update(ctx context.Context, reqObj *IOSGeneralDeviceConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSGeneralDeviceConfiguration
func (r *IOSGeneralDeviceConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenAppRequestBuilder is request builder for IOSHomeScreenApp
type IOSHomeScreenAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenAppRequest
func (b *IOSHomeScreenAppRequestBuilder) Request() *IOSHomeScreenAppRequest {
	return &IOSHomeScreenAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenAppRequest is request for IOSHomeScreenApp
type IOSHomeScreenAppRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Get(ctx context.Context) (resObj *IOSHomeScreenApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Update(ctx context.Context, reqObj *IOSHomeScreenApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenApp
func (r *IOSHomeScreenAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenFolderRequestBuilder is request builder for IOSHomeScreenFolder
type IOSHomeScreenFolderRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenFolderRequest
func (b *IOSHomeScreenFolderRequestBuilder) Request() *IOSHomeScreenFolderRequest {
	return &IOSHomeScreenFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenFolderRequest is request for IOSHomeScreenFolder
type IOSHomeScreenFolderRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Get(ctx context.Context) (resObj *IOSHomeScreenFolder, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Update(ctx context.Context, reqObj *IOSHomeScreenFolder) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenFolder
func (r *IOSHomeScreenFolderRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenFolderPageRequestBuilder is request builder for IOSHomeScreenFolderPage
type IOSHomeScreenFolderPageRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenFolderPageRequest
func (b *IOSHomeScreenFolderPageRequestBuilder) Request() *IOSHomeScreenFolderPageRequest {
	return &IOSHomeScreenFolderPageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenFolderPageRequest is request for IOSHomeScreenFolderPage
type IOSHomeScreenFolderPageRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Get(ctx context.Context) (resObj *IOSHomeScreenFolderPage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Update(ctx context.Context, reqObj *IOSHomeScreenFolderPage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenFolderPage
func (r *IOSHomeScreenFolderPageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenItemRequestBuilder is request builder for IOSHomeScreenItem
type IOSHomeScreenItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenItemRequest
func (b *IOSHomeScreenItemRequestBuilder) Request() *IOSHomeScreenItemRequest {
	return &IOSHomeScreenItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenItemRequest is request for IOSHomeScreenItem
type IOSHomeScreenItemRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Get(ctx context.Context) (resObj *IOSHomeScreenItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Update(ctx context.Context, reqObj *IOSHomeScreenItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenItem
func (r *IOSHomeScreenItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSHomeScreenPageRequestBuilder is request builder for IOSHomeScreenPage
type IOSHomeScreenPageRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSHomeScreenPageRequest
func (b *IOSHomeScreenPageRequestBuilder) Request() *IOSHomeScreenPageRequest {
	return &IOSHomeScreenPageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSHomeScreenPageRequest is request for IOSHomeScreenPage
type IOSHomeScreenPageRequest struct{ BaseRequest }

// Get performs GET request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Get(ctx context.Context) (resObj *IOSHomeScreenPage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Update(ctx context.Context, reqObj *IOSHomeScreenPage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSHomeScreenPage
func (r *IOSHomeScreenPageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppRequestBuilder is request builder for IOSLobApp
type IOSLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppRequest
func (b *IOSLobAppRequestBuilder) Request() *IOSLobAppRequest {
	return &IOSLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppRequest is request for IOSLobApp
type IOSLobAppRequest struct{ BaseRequest }

// Get performs GET request for IOSLobApp
func (r *IOSLobAppRequest) Get(ctx context.Context) (resObj *IOSLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobApp
func (r *IOSLobAppRequest) Update(ctx context.Context, reqObj *IOSLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobApp
func (r *IOSLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppAssignmentSettingsRequestBuilder is request builder for IOSLobAppAssignmentSettings
type IOSLobAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppAssignmentSettingsRequest
func (b *IOSLobAppAssignmentSettingsRequestBuilder) Request() *IOSLobAppAssignmentSettingsRequest {
	return &IOSLobAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppAssignmentSettingsRequest is request for IOSLobAppAssignmentSettings
type IOSLobAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSLobAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSLobAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppAssignmentSettings
func (r *IOSLobAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSLobAppProvisioningConfigurationAssignmentRequestBuilder is request builder for IOSLobAppProvisioningConfigurationAssignment
type IOSLobAppProvisioningConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSLobAppProvisioningConfigurationAssignmentRequest
func (b *IOSLobAppProvisioningConfigurationAssignmentRequestBuilder) Request() *IOSLobAppProvisioningConfigurationAssignmentRequest {
	return &IOSLobAppProvisioningConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSLobAppProvisioningConfigurationAssignmentRequest is request for IOSLobAppProvisioningConfigurationAssignment
type IOSLobAppProvisioningConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *IOSLobAppProvisioningConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *IOSLobAppProvisioningConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSLobAppProvisioningConfigurationAssignment
func (r *IOSLobAppProvisioningConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSManagedAppProtectionRequestBuilder is request builder for IOSManagedAppProtection
type IOSManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSManagedAppProtectionRequest
func (b *IOSManagedAppProtectionRequestBuilder) Request() *IOSManagedAppProtectionRequest {
	return &IOSManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSManagedAppProtectionRequest is request for IOSManagedAppProtection
type IOSManagedAppProtectionRequest struct{ BaseRequest }

// Get performs GET request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Get(ctx context.Context) (resObj *IOSManagedAppProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Update(ctx context.Context, reqObj *IOSManagedAppProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSManagedAppProtection
func (r *IOSManagedAppProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSManagedAppRegistrationRequestBuilder is request builder for IOSManagedAppRegistration
type IOSManagedAppRegistrationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSManagedAppRegistrationRequest
func (b *IOSManagedAppRegistrationRequestBuilder) Request() *IOSManagedAppRegistrationRequest {
	return &IOSManagedAppRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSManagedAppRegistrationRequest is request for IOSManagedAppRegistration
type IOSManagedAppRegistrationRequest struct{ BaseRequest }

// Get performs GET request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Get(ctx context.Context) (resObj *IOSManagedAppRegistration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Update(ctx context.Context, reqObj *IOSManagedAppRegistration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSManagedAppRegistration
func (r *IOSManagedAppRegistrationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMinimumOperatingSystemRequestBuilder is request builder for IOSMinimumOperatingSystem
type IOSMinimumOperatingSystemRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMinimumOperatingSystemRequest
func (b *IOSMinimumOperatingSystemRequestBuilder) Request() *IOSMinimumOperatingSystemRequest {
	return &IOSMinimumOperatingSystemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMinimumOperatingSystemRequest is request for IOSMinimumOperatingSystem
type IOSMinimumOperatingSystemRequest struct{ BaseRequest }

// Get performs GET request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Get(ctx context.Context) (resObj *IOSMinimumOperatingSystem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Update(ctx context.Context, reqObj *IOSMinimumOperatingSystem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMinimumOperatingSystem
func (r *IOSMinimumOperatingSystemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMobileAppConfigurationRequestBuilder is request builder for IOSMobileAppConfiguration
type IOSMobileAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMobileAppConfigurationRequest
func (b *IOSMobileAppConfigurationRequestBuilder) Request() *IOSMobileAppConfigurationRequest {
	return &IOSMobileAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMobileAppConfigurationRequest is request for IOSMobileAppConfiguration
type IOSMobileAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Get(ctx context.Context) (resObj *IOSMobileAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Update(ctx context.Context, reqObj *IOSMobileAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMobileAppConfiguration
func (r *IOSMobileAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSMobileAppIdentifierRequestBuilder is request builder for IOSMobileAppIdentifier
type IOSMobileAppIdentifierRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSMobileAppIdentifierRequest
func (b *IOSMobileAppIdentifierRequestBuilder) Request() *IOSMobileAppIdentifierRequest {
	return &IOSMobileAppIdentifierRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSMobileAppIdentifierRequest is request for IOSMobileAppIdentifier
type IOSMobileAppIdentifierRequest struct{ BaseRequest }

// Get performs GET request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Get(ctx context.Context) (resObj *IOSMobileAppIdentifier, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Update(ctx context.Context, reqObj *IOSMobileAppIdentifier) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSMobileAppIdentifier
func (r *IOSMobileAppIdentifierRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSNetworkUsageRuleRequestBuilder is request builder for IOSNetworkUsageRule
type IOSNetworkUsageRuleRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSNetworkUsageRuleRequest
func (b *IOSNetworkUsageRuleRequestBuilder) Request() *IOSNetworkUsageRuleRequest {
	return &IOSNetworkUsageRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSNetworkUsageRuleRequest is request for IOSNetworkUsageRule
type IOSNetworkUsageRuleRequest struct{ BaseRequest }

// Get performs GET request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Get(ctx context.Context) (resObj *IOSNetworkUsageRule, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Update(ctx context.Context, reqObj *IOSNetworkUsageRule) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSNetworkUsageRule
func (r *IOSNetworkUsageRuleRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSNotificationSettingsRequestBuilder is request builder for IOSNotificationSettings
type IOSNotificationSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSNotificationSettingsRequest
func (b *IOSNotificationSettingsRequestBuilder) Request() *IOSNotificationSettingsRequest {
	return &IOSNotificationSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSNotificationSettingsRequest is request for IOSNotificationSettings
type IOSNotificationSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Get(ctx context.Context) (resObj *IOSNotificationSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Update(ctx context.Context, reqObj *IOSNotificationSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSNotificationSettings
func (r *IOSNotificationSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSStoreAppRequestBuilder is request builder for IOSStoreApp
type IOSStoreAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSStoreAppRequest
func (b *IOSStoreAppRequestBuilder) Request() *IOSStoreAppRequest {
	return &IOSStoreAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSStoreAppRequest is request for IOSStoreApp
type IOSStoreAppRequest struct{ BaseRequest }

// Get performs GET request for IOSStoreApp
func (r *IOSStoreAppRequest) Get(ctx context.Context) (resObj *IOSStoreApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSStoreApp
func (r *IOSStoreAppRequest) Update(ctx context.Context, reqObj *IOSStoreApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSStoreApp
func (r *IOSStoreAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSStoreAppAssignmentSettingsRequestBuilder is request builder for IOSStoreAppAssignmentSettings
type IOSStoreAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSStoreAppAssignmentSettingsRequest
func (b *IOSStoreAppAssignmentSettingsRequestBuilder) Request() *IOSStoreAppAssignmentSettingsRequest {
	return &IOSStoreAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSStoreAppAssignmentSettingsRequest is request for IOSStoreAppAssignmentSettings
type IOSStoreAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSStoreAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSStoreAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSStoreAppAssignmentSettings
func (r *IOSStoreAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSUpdateConfigurationRequestBuilder is request builder for IOSUpdateConfiguration
type IOSUpdateConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSUpdateConfigurationRequest
func (b *IOSUpdateConfigurationRequestBuilder) Request() *IOSUpdateConfigurationRequest {
	return &IOSUpdateConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSUpdateConfigurationRequest is request for IOSUpdateConfiguration
type IOSUpdateConfigurationRequest struct{ BaseRequest }

// Get performs GET request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Get(ctx context.Context) (resObj *IOSUpdateConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Update(ctx context.Context, reqObj *IOSUpdateConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSUpdateConfiguration
func (r *IOSUpdateConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSUpdateDeviceStatusRequestBuilder is request builder for IOSUpdateDeviceStatus
type IOSUpdateDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSUpdateDeviceStatusRequest
func (b *IOSUpdateDeviceStatusRequestBuilder) Request() *IOSUpdateDeviceStatusRequest {
	return &IOSUpdateDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSUpdateDeviceStatusRequest is request for IOSUpdateDeviceStatus
type IOSUpdateDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Get(ctx context.Context) (resObj *IOSUpdateDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Update(ctx context.Context, reqObj *IOSUpdateDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSUpdateDeviceStatus
func (r *IOSUpdateDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppRequestBuilder is request builder for IOSVPPApp
type IOSVPPAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppRequest
func (b *IOSVPPAppRequestBuilder) Request() *IOSVPPAppRequest {
	return &IOSVPPAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppRequest is request for IOSVPPApp
type IOSVPPAppRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPApp
func (r *IOSVPPAppRequest) Get(ctx context.Context) (resObj *IOSVPPApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPApp
func (r *IOSVPPAppRequest) Update(ctx context.Context, reqObj *IOSVPPApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPApp
func (r *IOSVPPAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPAppAssignmentSettingsRequestBuilder is request builder for IOSVPPAppAssignmentSettings
type IOSVPPAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPAppAssignmentSettingsRequest
func (b *IOSVPPAppAssignmentSettingsRequestBuilder) Request() *IOSVPPAppAssignmentSettingsRequest {
	return &IOSVPPAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPAppAssignmentSettingsRequest is request for IOSVPPAppAssignmentSettings
type IOSVPPAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *IOSVPPAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *IOSVPPAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPAppAssignmentSettings
func (r *IOSVPPAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPEBookRequestBuilder is request builder for IOSVPPEBook
type IOSVPPEBookRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPEBookRequest
func (b *IOSVPPEBookRequestBuilder) Request() *IOSVPPEBookRequest {
	return &IOSVPPEBookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPEBookRequest is request for IOSVPPEBook
type IOSVPPEBookRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Get(ctx context.Context) (resObj *IOSVPPEBook, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Update(ctx context.Context, reqObj *IOSVPPEBook) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPEBook
func (r *IOSVPPEBookRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IOSVPPEBookAssignmentRequestBuilder is request builder for IOSVPPEBookAssignment
type IOSVPPEBookAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVPPEBookAssignmentRequest
func (b *IOSVPPEBookAssignmentRequestBuilder) Request() *IOSVPPEBookAssignmentRequest {
	return &IOSVPPEBookAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVPPEBookAssignmentRequest is request for IOSVPPEBookAssignment
type IOSVPPEBookAssignmentRequest struct{ BaseRequest }

// Get performs GET request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Get(ctx context.Context) (resObj *IOSVPPEBookAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Update(ctx context.Context, reqObj *IOSVPPEBookAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IOSVPPEBookAssignment
func (r *IOSVPPEBookAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
