// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// JoinMeetingIDMeetingInfoRequestBuilder is request builder for JoinMeetingIDMeetingInfo
type JoinMeetingIDMeetingInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns JoinMeetingIDMeetingInfoRequest
func (b *JoinMeetingIDMeetingInfoRequestBuilder) Request() *JoinMeetingIDMeetingInfoRequest {
	return &JoinMeetingIDMeetingInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// JoinMeetingIDMeetingInfoRequest is request for JoinMeetingIDMeetingInfo
type JoinMeetingIDMeetingInfoRequest struct{ BaseRequest }

// Get performs GET request for JoinMeetingIDMeetingInfo
func (r *JoinMeetingIDMeetingInfoRequest) Get(ctx context.Context) (resObj *JoinMeetingIDMeetingInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for JoinMeetingIDMeetingInfo
func (r *JoinMeetingIDMeetingInfoRequest) Update(ctx context.Context, reqObj *JoinMeetingIDMeetingInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for JoinMeetingIDMeetingInfo
func (r *JoinMeetingIDMeetingInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// JoinMeetingIDSettingsRequestBuilder is request builder for JoinMeetingIDSettings
type JoinMeetingIDSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns JoinMeetingIDSettingsRequest
func (b *JoinMeetingIDSettingsRequestBuilder) Request() *JoinMeetingIDSettingsRequest {
	return &JoinMeetingIDSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// JoinMeetingIDSettingsRequest is request for JoinMeetingIDSettings
type JoinMeetingIDSettingsRequest struct{ BaseRequest }

// Get performs GET request for JoinMeetingIDSettings
func (r *JoinMeetingIDSettingsRequest) Get(ctx context.Context) (resObj *JoinMeetingIDSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for JoinMeetingIDSettings
func (r *JoinMeetingIDSettingsRequest) Update(ctx context.Context, reqObj *JoinMeetingIDSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for JoinMeetingIDSettings
func (r *JoinMeetingIDSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
