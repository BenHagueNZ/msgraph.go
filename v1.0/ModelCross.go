// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

// CrossCloudAzureActiveDirectoryTenant undocumented
type CrossCloudAzureActiveDirectoryTenant struct {
	// IdentitySource is the base model of CrossCloudAzureActiveDirectoryTenant
	IdentitySource

	ODataType string `json:"@odata.type"`
	// CloudInstance undocumented
	CloudInstance *string `json:"cloudInstance,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// TenantID undocumented
	TenantID *string `json:"tenantId,omitempty"`
}

func NewCrossCloudAzureActiveDirectoryTenant() (*CrossCloudAzureActiveDirectoryTenant, error) {
	newCrossCloudAzureActiveDirectoryTenant := &CrossCloudAzureActiveDirectoryTenant{
		ODataType: "#microsoft.graph.CrossCloudAzureActiveDirectoryTenant",
	}
	return newCrossCloudAzureActiveDirectoryTenant, nil
}

// CrossTenantAccessPolicy undocumented
type CrossTenantAccessPolicy struct {
	// PolicyBase is the base model of CrossTenantAccessPolicy
	PolicyBase

	ODataType string `json:"@odata.type"`
	// AllowedCloudEndpoints undocumented
	AllowedCloudEndpoints []string `json:"allowedCloudEndpoints,omitempty"`
	// Default undocumented
	Default *CrossTenantAccessPolicyConfigurationDefault `json:"default,omitempty"`
	// Partners undocumented
	Partners []CrossTenantAccessPolicyConfigurationPartner `json:"partners,omitempty"`
}

func NewCrossTenantAccessPolicy() (*CrossTenantAccessPolicy, error) {
	newCrossTenantAccessPolicy := &CrossTenantAccessPolicy{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicy",
	}
	return newCrossTenantAccessPolicy, nil
}

// CrossTenantAccessPolicyB2BSetting undocumented
type CrossTenantAccessPolicyB2BSetting struct {
	// Object is the base model of CrossTenantAccessPolicyB2BSetting
	Object

	ODataType string `json:"@odata.type"`
	// Applications undocumented
	Applications *CrossTenantAccessPolicyTargetConfiguration `json:"applications,omitempty"`
	// UsersAndGroups undocumented
	UsersAndGroups *CrossTenantAccessPolicyTargetConfiguration `json:"usersAndGroups,omitempty"`
}

func NewCrossTenantAccessPolicyB2BSetting() (*CrossTenantAccessPolicyB2BSetting, error) {
	newCrossTenantAccessPolicyB2BSetting := &CrossTenantAccessPolicyB2BSetting{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyB2BSetting",
	}
	return newCrossTenantAccessPolicyB2BSetting, nil
}

// CrossTenantAccessPolicyConfigurationDefault undocumented
type CrossTenantAccessPolicyConfigurationDefault struct {
	// Entity is the base model of CrossTenantAccessPolicyConfigurationDefault
	Entity

	ODataType string `json:"@odata.type"`
	// B2bCollaborationInbound undocumented
	B2bCollaborationInbound *CrossTenantAccessPolicyB2BSetting `json:"b2bCollaborationInbound,omitempty"`
	// B2bCollaborationOutbound undocumented
	B2bCollaborationOutbound *CrossTenantAccessPolicyB2BSetting `json:"b2bCollaborationOutbound,omitempty"`
	// B2bDirectConnectInbound undocumented
	B2bDirectConnectInbound *CrossTenantAccessPolicyB2BSetting `json:"b2bDirectConnectInbound,omitempty"`
	// B2bDirectConnectOutbound undocumented
	B2bDirectConnectOutbound *CrossTenantAccessPolicyB2BSetting `json:"b2bDirectConnectOutbound,omitempty"`
	// InboundTrust undocumented
	InboundTrust *CrossTenantAccessPolicyInboundTrust `json:"inboundTrust,omitempty"`
	// IsServiceDefault undocumented
	IsServiceDefault *bool `json:"isServiceDefault,omitempty"`
}

func NewCrossTenantAccessPolicyConfigurationDefault() (*CrossTenantAccessPolicyConfigurationDefault, error) {
	newCrossTenantAccessPolicyConfigurationDefault := &CrossTenantAccessPolicyConfigurationDefault{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyConfigurationDefault",
	}
	return newCrossTenantAccessPolicyConfigurationDefault, nil
}

// CrossTenantAccessPolicyConfigurationPartner undocumented
type CrossTenantAccessPolicyConfigurationPartner struct {
	// Object is the base model of CrossTenantAccessPolicyConfigurationPartner
	Object

	ODataType string `json:"@odata.type"`
	// B2bCollaborationInbound undocumented
	B2bCollaborationInbound *CrossTenantAccessPolicyB2BSetting `json:"b2bCollaborationInbound,omitempty"`
	// B2bCollaborationOutbound undocumented
	B2bCollaborationOutbound *CrossTenantAccessPolicyB2BSetting `json:"b2bCollaborationOutbound,omitempty"`
	// B2bDirectConnectInbound undocumented
	B2bDirectConnectInbound *CrossTenantAccessPolicyB2BSetting `json:"b2bDirectConnectInbound,omitempty"`
	// B2bDirectConnectOutbound undocumented
	B2bDirectConnectOutbound *CrossTenantAccessPolicyB2BSetting `json:"b2bDirectConnectOutbound,omitempty"`
	// InboundTrust undocumented
	InboundTrust *CrossTenantAccessPolicyInboundTrust `json:"inboundTrust,omitempty"`
	// IsServiceProvider undocumented
	IsServiceProvider *bool `json:"isServiceProvider,omitempty"`
	// TenantID undocumented
	TenantID *string `json:"tenantId,omitempty"`
}

func NewCrossTenantAccessPolicyConfigurationPartner() (*CrossTenantAccessPolicyConfigurationPartner, error) {
	newCrossTenantAccessPolicyConfigurationPartner := &CrossTenantAccessPolicyConfigurationPartner{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyConfigurationPartner",
	}
	return newCrossTenantAccessPolicyConfigurationPartner, nil
}

// CrossTenantAccessPolicyInboundTrust undocumented
type CrossTenantAccessPolicyInboundTrust struct {
	// Object is the base model of CrossTenantAccessPolicyInboundTrust
	Object

	ODataType string `json:"@odata.type"`
	// IsCompliantDeviceAccepted undocumented
	IsCompliantDeviceAccepted *bool `json:"isCompliantDeviceAccepted,omitempty"`
	// IsHybridAzureADJoinedDeviceAccepted undocumented
	IsHybridAzureADJoinedDeviceAccepted *bool `json:"isHybridAzureADJoinedDeviceAccepted,omitempty"`
	// IsMFAAccepted undocumented
	IsMFAAccepted *bool `json:"isMfaAccepted,omitempty"`
}

func NewCrossTenantAccessPolicyInboundTrust() (*CrossTenantAccessPolicyInboundTrust, error) {
	newCrossTenantAccessPolicyInboundTrust := &CrossTenantAccessPolicyInboundTrust{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyInboundTrust",
	}
	return newCrossTenantAccessPolicyInboundTrust, nil
}

// CrossTenantAccessPolicyTarget undocumented
type CrossTenantAccessPolicyTarget struct {
	// Object is the base model of CrossTenantAccessPolicyTarget
	Object

	ODataType string `json:"@odata.type"`
	// Target undocumented
	Target *string `json:"target,omitempty"`
	// TargetType undocumented
	TargetType *CrossTenantAccessPolicyTargetType `json:"targetType,omitempty"`
}

func NewCrossTenantAccessPolicyTarget() (*CrossTenantAccessPolicyTarget, error) {
	newCrossTenantAccessPolicyTarget := &CrossTenantAccessPolicyTarget{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyTarget",
	}
	return newCrossTenantAccessPolicyTarget, nil
}

// CrossTenantAccessPolicyTargetConfiguration undocumented
type CrossTenantAccessPolicyTargetConfiguration struct {
	// Object is the base model of CrossTenantAccessPolicyTargetConfiguration
	Object

	ODataType string `json:"@odata.type"`
	// AccessType undocumented
	AccessType *CrossTenantAccessPolicyTargetConfigurationAccessType `json:"accessType,omitempty"`
	// Targets undocumented
	Targets []CrossTenantAccessPolicyTarget `json:"targets,omitempty"`
}

func NewCrossTenantAccessPolicyTargetConfiguration() (*CrossTenantAccessPolicyTargetConfiguration, error) {
	newCrossTenantAccessPolicyTargetConfiguration := &CrossTenantAccessPolicyTargetConfiguration{
		ODataType: "#microsoft.graph.CrossTenantAccessPolicyTargetConfiguration",
	}
	return newCrossTenantAccessPolicyTargetConfiguration, nil
}
