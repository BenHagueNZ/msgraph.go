// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// MicrosoftAccountUserConversationMemberRequestBuilder is request builder for MicrosoftAccountUserConversationMember
type MicrosoftAccountUserConversationMemberRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftAccountUserConversationMemberRequest
func (b *MicrosoftAccountUserConversationMemberRequestBuilder) Request() *MicrosoftAccountUserConversationMemberRequest {
	return &MicrosoftAccountUserConversationMemberRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftAccountUserConversationMemberRequest is request for MicrosoftAccountUserConversationMember
type MicrosoftAccountUserConversationMemberRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftAccountUserConversationMember
func (r *MicrosoftAccountUserConversationMemberRequest) Get(ctx context.Context) (resObj *MicrosoftAccountUserConversationMember, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftAccountUserConversationMember
func (r *MicrosoftAccountUserConversationMemberRequest) Update(ctx context.Context, reqObj *MicrosoftAccountUserConversationMember) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftAccountUserConversationMember
func (r *MicrosoftAccountUserConversationMemberRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftAuthenticatorAuthenticationMethodRequestBuilder is request builder for MicrosoftAuthenticatorAuthenticationMethod
type MicrosoftAuthenticatorAuthenticationMethodRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftAuthenticatorAuthenticationMethodRequest
func (b *MicrosoftAuthenticatorAuthenticationMethodRequestBuilder) Request() *MicrosoftAuthenticatorAuthenticationMethodRequest {
	return &MicrosoftAuthenticatorAuthenticationMethodRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftAuthenticatorAuthenticationMethodRequest is request for MicrosoftAuthenticatorAuthenticationMethod
type MicrosoftAuthenticatorAuthenticationMethodRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftAuthenticatorAuthenticationMethod
func (r *MicrosoftAuthenticatorAuthenticationMethodRequest) Get(ctx context.Context) (resObj *MicrosoftAuthenticatorAuthenticationMethod, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftAuthenticatorAuthenticationMethod
func (r *MicrosoftAuthenticatorAuthenticationMethodRequest) Update(ctx context.Context, reqObj *MicrosoftAuthenticatorAuthenticationMethod) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftAuthenticatorAuthenticationMethod
func (r *MicrosoftAuthenticatorAuthenticationMethodRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftAuthenticatorAuthenticationMethodConfigurationRequestBuilder is request builder for MicrosoftAuthenticatorAuthenticationMethodConfiguration
type MicrosoftAuthenticatorAuthenticationMethodConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest
func (b *MicrosoftAuthenticatorAuthenticationMethodConfigurationRequestBuilder) Request() *MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest {
	return &MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest is request for MicrosoftAuthenticatorAuthenticationMethodConfiguration
type MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftAuthenticatorAuthenticationMethodConfiguration
func (r *MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest) Get(ctx context.Context) (resObj *MicrosoftAuthenticatorAuthenticationMethodConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftAuthenticatorAuthenticationMethodConfiguration
func (r *MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest) Update(ctx context.Context, reqObj *MicrosoftAuthenticatorAuthenticationMethodConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftAuthenticatorAuthenticationMethodConfiguration
func (r *MicrosoftAuthenticatorAuthenticationMethodConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftAuthenticatorAuthenticationMethodTargetRequestBuilder is request builder for MicrosoftAuthenticatorAuthenticationMethodTarget
type MicrosoftAuthenticatorAuthenticationMethodTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftAuthenticatorAuthenticationMethodTargetRequest
func (b *MicrosoftAuthenticatorAuthenticationMethodTargetRequestBuilder) Request() *MicrosoftAuthenticatorAuthenticationMethodTargetRequest {
	return &MicrosoftAuthenticatorAuthenticationMethodTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftAuthenticatorAuthenticationMethodTargetRequest is request for MicrosoftAuthenticatorAuthenticationMethodTarget
type MicrosoftAuthenticatorAuthenticationMethodTargetRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftAuthenticatorAuthenticationMethodTarget
func (r *MicrosoftAuthenticatorAuthenticationMethodTargetRequest) Get(ctx context.Context) (resObj *MicrosoftAuthenticatorAuthenticationMethodTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftAuthenticatorAuthenticationMethodTarget
func (r *MicrosoftAuthenticatorAuthenticationMethodTargetRequest) Update(ctx context.Context, reqObj *MicrosoftAuthenticatorAuthenticationMethodTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftAuthenticatorAuthenticationMethodTarget
func (r *MicrosoftAuthenticatorAuthenticationMethodTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftAuthenticatorFeatureSettingsRequestBuilder is request builder for MicrosoftAuthenticatorFeatureSettings
type MicrosoftAuthenticatorFeatureSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftAuthenticatorFeatureSettingsRequest
func (b *MicrosoftAuthenticatorFeatureSettingsRequestBuilder) Request() *MicrosoftAuthenticatorFeatureSettingsRequest {
	return &MicrosoftAuthenticatorFeatureSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftAuthenticatorFeatureSettingsRequest is request for MicrosoftAuthenticatorFeatureSettings
type MicrosoftAuthenticatorFeatureSettingsRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftAuthenticatorFeatureSettings
func (r *MicrosoftAuthenticatorFeatureSettingsRequest) Get(ctx context.Context) (resObj *MicrosoftAuthenticatorFeatureSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftAuthenticatorFeatureSettings
func (r *MicrosoftAuthenticatorFeatureSettingsRequest) Update(ctx context.Context, reqObj *MicrosoftAuthenticatorFeatureSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftAuthenticatorFeatureSettings
func (r *MicrosoftAuthenticatorFeatureSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftStoreForBusinessAppRequestBuilder is request builder for MicrosoftStoreForBusinessApp
type MicrosoftStoreForBusinessAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftStoreForBusinessAppRequest
func (b *MicrosoftStoreForBusinessAppRequestBuilder) Request() *MicrosoftStoreForBusinessAppRequest {
	return &MicrosoftStoreForBusinessAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftStoreForBusinessAppRequest is request for MicrosoftStoreForBusinessApp
type MicrosoftStoreForBusinessAppRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftStoreForBusinessApp
func (r *MicrosoftStoreForBusinessAppRequest) Get(ctx context.Context) (resObj *MicrosoftStoreForBusinessApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftStoreForBusinessApp
func (r *MicrosoftStoreForBusinessAppRequest) Update(ctx context.Context, reqObj *MicrosoftStoreForBusinessApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftStoreForBusinessApp
func (r *MicrosoftStoreForBusinessAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MicrosoftStoreForBusinessAppAssignmentSettingsRequestBuilder is request builder for MicrosoftStoreForBusinessAppAssignmentSettings
type MicrosoftStoreForBusinessAppAssignmentSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns MicrosoftStoreForBusinessAppAssignmentSettingsRequest
func (b *MicrosoftStoreForBusinessAppAssignmentSettingsRequestBuilder) Request() *MicrosoftStoreForBusinessAppAssignmentSettingsRequest {
	return &MicrosoftStoreForBusinessAppAssignmentSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MicrosoftStoreForBusinessAppAssignmentSettingsRequest is request for MicrosoftStoreForBusinessAppAssignmentSettings
type MicrosoftStoreForBusinessAppAssignmentSettingsRequest struct{ BaseRequest }

// Get performs GET request for MicrosoftStoreForBusinessAppAssignmentSettings
func (r *MicrosoftStoreForBusinessAppAssignmentSettingsRequest) Get(ctx context.Context) (resObj *MicrosoftStoreForBusinessAppAssignmentSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MicrosoftStoreForBusinessAppAssignmentSettings
func (r *MicrosoftStoreForBusinessAppAssignmentSettingsRequest) Update(ctx context.Context, reqObj *MicrosoftStoreForBusinessAppAssignmentSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MicrosoftStoreForBusinessAppAssignmentSettings
func (r *MicrosoftStoreForBusinessAppAssignmentSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
