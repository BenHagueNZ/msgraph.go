// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/BenHagueNZ/msgraph.go/jsonx"
)

// Windows10CompliancePolicy returns request builder for Windows10CompliancePolicy collection rcn
func (b *DeviceCompliancePolicyRequestBuilder) Windows10CompliancePolicy() *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10CompliancePolicy"
	return bb
}

// DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder is request builder for Windows10CompliancePolicy collection
type DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10CompliancePolicy collection
func (b *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder) Request() *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest {
	return &DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10CompliancePolicy item
func (b *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequestBuilder) ID(id string) *Windows10CompliancePolicyRequestBuilder {
	bb := &Windows10CompliancePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest is request for Windows10CompliancePolicy collection
type DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10CompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10CompliancePolicy, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10CompliancePolicy
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10CompliancePolicy
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10CompliancePolicy collection, max N pages
func (r *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10CompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10CompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest) Get(ctx context.Context) ([]Windows10CompliancePolicy, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10CompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10CompliancePolicyCollectionRequest) Add(ctx context.Context, reqObj *Windows10CompliancePolicy) (resObj *Windows10CompliancePolicy, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10CustomConfiguration returns request builder for Windows10CustomConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10CustomConfiguration() *DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10CustomConfiguration"
	return bb
}

// DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder is request builder for Windows10CustomConfiguration collection
type DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10CustomConfiguration collection
func (b *DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10CustomConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10CustomConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10CustomConfiguration item
func (b *DeviceConfigurationWindows10CustomConfigurationCollectionRequestBuilder) ID(id string) *Windows10CustomConfigurationRequestBuilder {
	bb := &Windows10CustomConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10CustomConfigurationCollectionRequest is request for Windows10CustomConfiguration collection
type DeviceConfigurationWindows10CustomConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10CustomConfiguration collection
func (r *DeviceConfigurationWindows10CustomConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10CustomConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10CustomConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10CustomConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10CustomConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10CustomConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10CustomConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10CustomConfiguration collection
func (r *DeviceConfigurationWindows10CustomConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10CustomConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10CustomConfiguration collection
func (r *DeviceConfigurationWindows10CustomConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10CustomConfiguration) (resObj *Windows10CustomConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EndpointProtectionConfiguration returns request builder for Windows10EndpointProtectionConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10EndpointProtectionConfiguration() *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10EndpointProtectionConfiguration"
	return bb
}

// DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder is request builder for Windows10EndpointProtectionConfiguration collection
type DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EndpointProtectionConfiguration collection
func (b *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EndpointProtectionConfiguration item
func (b *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequestBuilder) ID(id string) *Windows10EndpointProtectionConfigurationRequestBuilder {
	bb := &Windows10EndpointProtectionConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest is request for Windows10EndpointProtectionConfiguration collection
type DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EndpointProtectionConfiguration collection
func (r *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EndpointProtectionConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EndpointProtectionConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EndpointProtectionConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EndpointProtectionConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EndpointProtectionConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EndpointProtectionConfiguration collection
func (r *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10EndpointProtectionConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EndpointProtectionConfiguration collection
func (r *DeviceConfigurationWindows10EndpointProtectionConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10EndpointProtectionConfiguration) (resObj *Windows10EndpointProtectionConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10EnterpriseModernAppManagementConfiguration returns request builder for Windows10EnterpriseModernAppManagementConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10EnterpriseModernAppManagementConfiguration() *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10EnterpriseModernAppManagementConfiguration"
	return bb
}

// DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder is request builder for Windows10EnterpriseModernAppManagementConfiguration collection
type DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10EnterpriseModernAppManagementConfiguration collection
func (b *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10EnterpriseModernAppManagementConfiguration item
func (b *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequestBuilder) ID(id string) *Windows10EnterpriseModernAppManagementConfigurationRequestBuilder {
	bb := &Windows10EnterpriseModernAppManagementConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest is request for Windows10EnterpriseModernAppManagementConfiguration collection
type DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10EnterpriseModernAppManagementConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10EnterpriseModernAppManagementConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10EnterpriseModernAppManagementConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10EnterpriseModernAppManagementConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10EnterpriseModernAppManagementConfiguration collection
func (r *DeviceConfigurationWindows10EnterpriseModernAppManagementConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10EnterpriseModernAppManagementConfiguration) (resObj *Windows10EnterpriseModernAppManagementConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10GeneralConfiguration returns request builder for Windows10GeneralConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10GeneralConfiguration() *DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10GeneralConfiguration"
	return bb
}

// DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder is request builder for Windows10GeneralConfiguration collection
type DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10GeneralConfiguration collection
func (b *DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10GeneralConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10GeneralConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10GeneralConfiguration item
func (b *DeviceConfigurationWindows10GeneralConfigurationCollectionRequestBuilder) ID(id string) *Windows10GeneralConfigurationRequestBuilder {
	bb := &Windows10GeneralConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10GeneralConfigurationCollectionRequest is request for Windows10GeneralConfiguration collection
type DeviceConfigurationWindows10GeneralConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10GeneralConfiguration collection
func (r *DeviceConfigurationWindows10GeneralConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10GeneralConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10GeneralConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10GeneralConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10GeneralConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10GeneralConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10GeneralConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10GeneralConfiguration collection
func (r *DeviceConfigurationWindows10GeneralConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10GeneralConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10GeneralConfiguration collection
func (r *DeviceConfigurationWindows10GeneralConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10GeneralConfiguration) (resObj *Windows10GeneralConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10MobileCompliancePolicy returns request builder for Windows10MobileCompliancePolicy collection rcn
func (b *DeviceCompliancePolicyRequestBuilder) Windows10MobileCompliancePolicy() *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10MobileCompliancePolicy"
	return bb
}

// DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder is request builder for Windows10MobileCompliancePolicy collection
type DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10MobileCompliancePolicy collection
func (b *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder) Request() *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest {
	return &DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10MobileCompliancePolicy item
func (b *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequestBuilder) ID(id string) *Windows10MobileCompliancePolicyRequestBuilder {
	bb := &Windows10MobileCompliancePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest is request for Windows10MobileCompliancePolicy collection
type DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10MobileCompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10MobileCompliancePolicy, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10MobileCompliancePolicy
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10MobileCompliancePolicy
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10MobileCompliancePolicy collection, max N pages
func (r *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10MobileCompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10MobileCompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest) Get(ctx context.Context) ([]Windows10MobileCompliancePolicy, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10MobileCompliancePolicy collection
func (r *DeviceCompliancePolicyWindows10MobileCompliancePolicyCollectionRequest) Add(ctx context.Context, reqObj *Windows10MobileCompliancePolicy) (resObj *Windows10MobileCompliancePolicy, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10SecureAssessmentConfiguration returns request builder for Windows10SecureAssessmentConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10SecureAssessmentConfiguration() *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10SecureAssessmentConfiguration"
	return bb
}

// DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder is request builder for Windows10SecureAssessmentConfiguration collection
type DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10SecureAssessmentConfiguration collection
func (b *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10SecureAssessmentConfiguration item
func (b *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequestBuilder) ID(id string) *Windows10SecureAssessmentConfigurationRequestBuilder {
	bb := &Windows10SecureAssessmentConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest is request for Windows10SecureAssessmentConfiguration collection
type DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10SecureAssessmentConfiguration collection
func (r *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10SecureAssessmentConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10SecureAssessmentConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10SecureAssessmentConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10SecureAssessmentConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10SecureAssessmentConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10SecureAssessmentConfiguration collection
func (r *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10SecureAssessmentConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10SecureAssessmentConfiguration collection
func (r *DeviceConfigurationWindows10SecureAssessmentConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10SecureAssessmentConfiguration) (resObj *Windows10SecureAssessmentConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// Windows10TeamGeneralConfiguration returns request builder for Windows10TeamGeneralConfiguration collection rcn
func (b *DeviceConfigurationRequestBuilder) Windows10TeamGeneralConfiguration() *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder {
	bb := &DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Windows10TeamGeneralConfiguration"
	return bb
}

// DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder is request builder for Windows10TeamGeneralConfiguration collection
type DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for Windows10TeamGeneralConfiguration collection
func (b *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder) Request() *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest {
	return &DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for Windows10TeamGeneralConfiguration item
func (b *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequestBuilder) ID(id string) *Windows10TeamGeneralConfigurationRequestBuilder {
	bb := &Windows10TeamGeneralConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest is request for Windows10TeamGeneralConfiguration collection
type DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for Windows10TeamGeneralConfiguration collection
func (r *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Windows10TeamGeneralConfiguration, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Windows10TeamGeneralConfiguration
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Windows10TeamGeneralConfiguration
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// GetN performs GET request for Windows10TeamGeneralConfiguration collection, max N pages
func (r *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest) GetN(ctx context.Context, n int) ([]Windows10TeamGeneralConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil, n)
}

// Get performs GET request for Windows10TeamGeneralConfiguration collection
func (r *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest) Get(ctx context.Context) ([]Windows10TeamGeneralConfiguration, error) {
	return r.GetN(ctx, 0)
}

// Add performs POST request for Windows10TeamGeneralConfiguration collection
func (r *DeviceConfigurationWindows10TeamGeneralConfigurationCollectionRequest) Add(ctx context.Context, reqObj *Windows10TeamGeneralConfiguration) (resObj *Windows10TeamGeneralConfiguration, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}
