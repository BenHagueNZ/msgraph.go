// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "time"

// File undocumented
type File struct {
	// Object is the base model of File
	Object
	// Hashes undocumented
	Hashes *Hashes `json:"hashes,omitempty"`
	// MimeType undocumented
	MimeType *string `json:"mimeType,omitempty"`
	// ProcessingMetadata undocumented
	ProcessingMetadata *bool `json:"processingMetadata,omitempty"`
}

// FileAssessmentRequestObject undocumented
type FileAssessmentRequestObject struct {
	// ThreatAssessmentRequestObject is the base model of FileAssessmentRequestObject
	ThreatAssessmentRequestObject
	// ContentData undocumented
	ContentData *string `json:"contentData,omitempty"`
	// FileName undocumented
	FileName *string `json:"fileName,omitempty"`
}

// FileAttachment undocumented
type FileAttachment struct {
	// Attachment is the base model of FileAttachment
	Attachment
	// ContentBytes undocumented
	ContentBytes *Binary `json:"contentBytes,omitempty"`
	// ContentID undocumented
	ContentID *string `json:"contentId,omitempty"`
	// ContentLocation undocumented
	ContentLocation *string `json:"contentLocation,omitempty"`
}

// FileEncryptionInfo Contains properties for file encryption information for the content version of a line of business app.
type FileEncryptionInfo struct {
	// Object is the base model of FileEncryptionInfo
	Object
	// EncryptionKey The key used to encrypt the file content.
	EncryptionKey *Binary `json:"encryptionKey,omitempty"`
	// FileDigest The file digest prior to encryption. ProfileVersion1 requires a non-null FileDigest.
	FileDigest *Binary `json:"fileDigest,omitempty"`
	// FileDigestAlgorithm The file digest algorithm. ProfileVersion1 currently only supports SHA256 for the FileDigestAlgorithm.
	FileDigestAlgorithm *string `json:"fileDigestAlgorithm,omitempty"`
	// InitializationVector The initialization vector (IV) used for the encryption algorithm. Must be 16 bytes.
	InitializationVector *Binary `json:"initializationVector,omitempty"`
	// Mac The hash of the concatenation of the IV and encrypted file content. Must be 32 bytes.
	Mac *Binary `json:"mac,omitempty"`
	// MacKey The key used to compute the message authentication code of the concatenation of the IV and encrypted file content. Must be 32 bytes.
	MacKey *Binary `json:"macKey,omitempty"`
	// ProfileIdentifier The profile identifier. Maps to the strategy used to encrypt the file. Currently, only ProfileVersion1 is supported.
	ProfileIdentifier *string `json:"profileIdentifier,omitempty"`
}

// FileHash undocumented
type FileHash struct {
	// Object is the base model of FileHash
	Object
	// HashType undocumented
	HashType *FileHashType `json:"hashType,omitempty"`
	// HashValue undocumented
	HashValue *string `json:"hashValue,omitempty"`
}

// FileSecurityState undocumented
type FileSecurityState struct {
	// Object is the base model of FileSecurityState
	Object
	// FileHash undocumented
	FileHash *FileHash `json:"fileHash,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Path undocumented
	Path *string `json:"path,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
}

// FileSystemInfo undocumented
type FileSystemInfo struct {
	// Object is the base model of FileSystemInfo
	Object
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastAccessedDateTime undocumented
	LastAccessedDateTime *time.Time `json:"lastAccessedDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}
