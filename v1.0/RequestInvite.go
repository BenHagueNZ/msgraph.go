// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// InviteNewBotResponseRequestBuilder is request builder for InviteNewBotResponse
type InviteNewBotResponseRequestBuilder struct{ BaseRequestBuilder }

// Request returns InviteNewBotResponseRequest
func (b *InviteNewBotResponseRequestBuilder) Request() *InviteNewBotResponseRequest {
	return &InviteNewBotResponseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// InviteNewBotResponseRequest is request for InviteNewBotResponse
type InviteNewBotResponseRequest struct{ BaseRequest }

// Get performs GET request for InviteNewBotResponse
func (r *InviteNewBotResponseRequest) Get(ctx context.Context) (resObj *InviteNewBotResponse, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for InviteNewBotResponse
func (r *InviteNewBotResponseRequest) Update(ctx context.Context, reqObj *InviteNewBotResponse) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for InviteNewBotResponse
func (r *InviteNewBotResponseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// InviteParticipantsOperationRequestBuilder is request builder for InviteParticipantsOperation
type InviteParticipantsOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns InviteParticipantsOperationRequest
func (b *InviteParticipantsOperationRequestBuilder) Request() *InviteParticipantsOperationRequest {
	return &InviteParticipantsOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// InviteParticipantsOperationRequest is request for InviteParticipantsOperation
type InviteParticipantsOperationRequest struct{ BaseRequest }

// Get performs GET request for InviteParticipantsOperation
func (r *InviteParticipantsOperationRequest) Get(ctx context.Context) (resObj *InviteParticipantsOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for InviteParticipantsOperation
func (r *InviteParticipantsOperationRequest) Update(ctx context.Context, reqObj *InviteParticipantsOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for InviteParticipantsOperation
func (r *InviteParticipantsOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
