// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// EdgeSearchEngineRequestBuilder is request builder for EdgeSearchEngine
type EdgeSearchEngineRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdgeSearchEngineRequest
func (b *EdgeSearchEngineRequestBuilder) Request() *EdgeSearchEngineRequest {
	return &EdgeSearchEngineRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdgeSearchEngineRequest is request for EdgeSearchEngine
type EdgeSearchEngineRequest struct{ BaseRequest }

// Get performs GET request for EdgeSearchEngine
func (r *EdgeSearchEngineRequest) Get(ctx context.Context) (resObj *EdgeSearchEngine, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdgeSearchEngine
func (r *EdgeSearchEngineRequest) Update(ctx context.Context, reqObj *EdgeSearchEngine) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdgeSearchEngine
func (r *EdgeSearchEngineRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdgeSearchEngineBaseRequestBuilder is request builder for EdgeSearchEngineBase
type EdgeSearchEngineBaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdgeSearchEngineBaseRequest
func (b *EdgeSearchEngineBaseRequestBuilder) Request() *EdgeSearchEngineBaseRequest {
	return &EdgeSearchEngineBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdgeSearchEngineBaseRequest is request for EdgeSearchEngineBase
type EdgeSearchEngineBaseRequest struct{ BaseRequest }

// Get performs GET request for EdgeSearchEngineBase
func (r *EdgeSearchEngineBaseRequest) Get(ctx context.Context) (resObj *EdgeSearchEngineBase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdgeSearchEngineBase
func (r *EdgeSearchEngineBaseRequest) Update(ctx context.Context, reqObj *EdgeSearchEngineBase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdgeSearchEngineBase
func (r *EdgeSearchEngineBaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// EdgeSearchEngineCustomRequestBuilder is request builder for EdgeSearchEngineCustom
type EdgeSearchEngineCustomRequestBuilder struct{ BaseRequestBuilder }

// Request returns EdgeSearchEngineCustomRequest
func (b *EdgeSearchEngineCustomRequestBuilder) Request() *EdgeSearchEngineCustomRequest {
	return &EdgeSearchEngineCustomRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EdgeSearchEngineCustomRequest is request for EdgeSearchEngineCustom
type EdgeSearchEngineCustomRequest struct{ BaseRequest }

// Get performs GET request for EdgeSearchEngineCustom
func (r *EdgeSearchEngineCustomRequest) Get(ctx context.Context) (resObj *EdgeSearchEngineCustom, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EdgeSearchEngineCustom
func (r *EdgeSearchEngineCustomRequest) Update(ctx context.Context, reqObj *EdgeSearchEngineCustom) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EdgeSearchEngineCustom
func (r *EdgeSearchEngineCustomRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
