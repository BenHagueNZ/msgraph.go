// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// DriveRequestBuilder is request builder for Drive
type DriveRequestBuilder struct{ BaseRequestBuilder }

// Request returns DriveRequest
func (b *DriveRequestBuilder) Request() *DriveRequest {
	return &DriveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DriveRequest is request for Drive
type DriveRequest struct{ BaseRequest }

// Get performs GET request for Drive
func (r *DriveRequest) Get(ctx context.Context) (resObj *Drive, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Drive
func (r *DriveRequest) Update(ctx context.Context, reqObj *Drive) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Drive
func (r *DriveRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DriveItemRequestBuilder is request builder for DriveItem
type DriveItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns DriveItemRequest
func (b *DriveItemRequestBuilder) Request() *DriveItemRequest {
	return &DriveItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DriveItemRequest is request for DriveItem
type DriveItemRequest struct{ BaseRequest }

// Get performs GET request for DriveItem
func (r *DriveItemRequest) Get(ctx context.Context) (resObj *DriveItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DriveItem
func (r *DriveItemRequest) Update(ctx context.Context, reqObj *DriveItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DriveItem
func (r *DriveItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// DriveItemVersionRequestBuilder is request builder for DriveItemVersion
type DriveItemVersionRequestBuilder struct{ BaseRequestBuilder }

// Request returns DriveItemVersionRequest
func (b *DriveItemVersionRequestBuilder) Request() *DriveItemVersionRequest {
	return &DriveItemVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DriveItemVersionRequest is request for DriveItemVersion
type DriveItemVersionRequest struct{ BaseRequest }

// Get performs GET request for DriveItemVersion
func (r *DriveItemVersionRequest) Get(ctx context.Context) (resObj *DriveItemVersion, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DriveItemVersion
func (r *DriveItemVersionRequest) Update(ctx context.Context, reqObj *DriveItemVersion) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DriveItemVersion
func (r *DriveItemVersionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
