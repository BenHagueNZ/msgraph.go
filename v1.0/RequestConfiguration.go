// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// ConfigurationManagerClientEnabledFeaturesRequestBuilder is request builder for ConfigurationManagerClientEnabledFeatures
type ConfigurationManagerClientEnabledFeaturesRequestBuilder struct{ BaseRequestBuilder }

// Request returns ConfigurationManagerClientEnabledFeaturesRequest
func (b *ConfigurationManagerClientEnabledFeaturesRequestBuilder) Request() *ConfigurationManagerClientEnabledFeaturesRequest {
	return &ConfigurationManagerClientEnabledFeaturesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ConfigurationManagerClientEnabledFeaturesRequest is request for ConfigurationManagerClientEnabledFeatures
type ConfigurationManagerClientEnabledFeaturesRequest struct{ BaseRequest }

// Get performs GET request for ConfigurationManagerClientEnabledFeatures
func (r *ConfigurationManagerClientEnabledFeaturesRequest) Get(ctx context.Context) (resObj *ConfigurationManagerClientEnabledFeatures, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ConfigurationManagerClientEnabledFeatures
func (r *ConfigurationManagerClientEnabledFeaturesRequest) Update(ctx context.Context, reqObj *ConfigurationManagerClientEnabledFeatures) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ConfigurationManagerClientEnabledFeatures
func (r *ConfigurationManagerClientEnabledFeaturesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ConfigurationManagerCollectionAssignmentTargetRequestBuilder is request builder for ConfigurationManagerCollectionAssignmentTarget
type ConfigurationManagerCollectionAssignmentTargetRequestBuilder struct{ BaseRequestBuilder }

// Request returns ConfigurationManagerCollectionAssignmentTargetRequest
func (b *ConfigurationManagerCollectionAssignmentTargetRequestBuilder) Request() *ConfigurationManagerCollectionAssignmentTargetRequest {
	return &ConfigurationManagerCollectionAssignmentTargetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ConfigurationManagerCollectionAssignmentTargetRequest is request for ConfigurationManagerCollectionAssignmentTarget
type ConfigurationManagerCollectionAssignmentTargetRequest struct{ BaseRequest }

// Get performs GET request for ConfigurationManagerCollectionAssignmentTarget
func (r *ConfigurationManagerCollectionAssignmentTargetRequest) Get(ctx context.Context) (resObj *ConfigurationManagerCollectionAssignmentTarget, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ConfigurationManagerCollectionAssignmentTarget
func (r *ConfigurationManagerCollectionAssignmentTargetRequest) Update(ctx context.Context, reqObj *ConfigurationManagerCollectionAssignmentTarget) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ConfigurationManagerCollectionAssignmentTarget
func (r *ConfigurationManagerCollectionAssignmentTargetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
