// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

// IPNamedLocation undocumented
type IPNamedLocation struct {
	// NamedLocation is the base model of IPNamedLocation
	NamedLocation

	ODataType string `json:"@odata.type,omitempty"`
	// IPRanges undocumented
	IPRanges []IPRange `json:"ipRanges,omitempty"`
	// IsTrusted undocumented
	IsTrusted *bool `json:"isTrusted,omitempty"`
}

func NewIPNamedLocation() (*IPNamedLocation, error) {
	newIPNamedLocation := &IPNamedLocation{
		ODataType: "#microsoft.graph.IpNamedLocation",
	}
	return newIPNamedLocation, nil
}

// IPRange undocumented
type IPRange struct {
	// Object is the base model of IPRange
	Object

	ODataType string `json:"@odata.type,omitempty"`
	// CIDRAddress undocumented
	CIDRAddress *string `json:"cidrAddress,omitempty"`
}

func NewIPRange() (*IPRange, error) {
	newIPRange := &IPRange{
		ODataType: "#microsoft.graph.IpRange",
	}
	return newIPRange, nil
}

	func filterIPRange(ss []IPRange, v4 bool) (ret []IPRange) {
		odata := "#microsoft.graph.iPv6CidrRange"
		if v4 {
			odata = "#microsoft.graph.iPv4CidrRange"
		}
		for _, s := range ss {
			if s.ODataType == odata {
				ret = append(ret, s)
			}
		}
		return
	}
	
	func NewIPv6Range1() (*IPRange, error) {
		newIPRange := &IPRange{
			ODataType: "#microsoft.graph.IPv6CidrRange",
		}
		return newIPRange, nil
	}
	
	func NewIPv4Range1() (*IPRange, error) {
		newIPRange := &IPRange{
			ODataType: "#microsoft.graph.IPv4CidrRange",
		}
		return newIPRange, nil
	}