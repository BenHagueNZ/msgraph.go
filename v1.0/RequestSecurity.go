// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// SecurityRequestBuilder is request builder for Security
type SecurityRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityRequest
func (b *SecurityRequestBuilder) Request() *SecurityRequest {
	return &SecurityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityRequest is request for Security
type SecurityRequest struct{ BaseRequest }

// Get performs GET request for Security
func (r *SecurityRequest) Get(ctx context.Context) (resObj *Security, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Security
func (r *SecurityRequest) Update(ctx context.Context, reqObj *Security) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Security
func (r *SecurityRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityAlertRequestBuilder is request builder for SecurityAlert
type SecurityAlertRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityAlertRequest
func (b *SecurityAlertRequestBuilder) Request() *SecurityAlertRequest {
	return &SecurityAlertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityAlertRequest is request for SecurityAlert
type SecurityAlertRequest struct{ BaseRequest }

// Get performs GET request for SecurityAlert
func (r *SecurityAlertRequest) Get(ctx context.Context) (resObj *SecurityAlert, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityAlert
func (r *SecurityAlertRequest) Update(ctx context.Context, reqObj *SecurityAlert) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityAlert
func (r *SecurityAlertRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCasesRootRequestBuilder is request builder for SecurityCasesRoot
type SecurityCasesRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCasesRootRequest
func (b *SecurityCasesRootRequestBuilder) Request() *SecurityCasesRootRequest {
	return &SecurityCasesRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCasesRootRequest is request for SecurityCasesRoot
type SecurityCasesRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Get(ctx context.Context) (resObj *SecurityCasesRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Update(ctx context.Context, reqObj *SecurityCasesRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCasesRoot
func (r *SecurityCasesRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityIncidentRequestBuilder is request builder for SecurityIncident
type SecurityIncidentRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityIncidentRequest
func (b *SecurityIncidentRequestBuilder) Request() *SecurityIncidentRequest {
	return &SecurityIncidentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityIncidentRequest is request for SecurityIncident
type SecurityIncidentRequest struct{ BaseRequest }

// Get performs GET request for SecurityIncident
func (r *SecurityIncidentRequest) Get(ctx context.Context) (resObj *SecurityIncident, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityIncident
func (r *SecurityIncidentRequest) Update(ctx context.Context, reqObj *SecurityIncident) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityIncident
func (r *SecurityIncidentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityReportsRootRequestBuilder is request builder for SecurityReportsRoot
type SecurityReportsRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityReportsRootRequest
func (b *SecurityReportsRootRequestBuilder) Request() *SecurityReportsRootRequest {
	return &SecurityReportsRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityReportsRootRequest is request for SecurityReportsRoot
type SecurityReportsRootRequest struct{ BaseRequest }

// Get performs GET request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Get(ctx context.Context) (resObj *SecurityReportsRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Update(ctx context.Context, reqObj *SecurityReportsRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityReportsRoot
func (r *SecurityReportsRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityCaseOperationRequestBuilder is request builder for SecurityCaseOperation
type SecurityCaseOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityCaseOperationRequest
func (b *SecurityCaseOperationRequestBuilder) Request() *SecurityCaseOperationRequest {
	return &SecurityCaseOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityCaseOperationRequest is request for SecurityCaseOperation
type SecurityCaseOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Get(ctx context.Context) (resObj *SecurityCaseOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Update(ctx context.Context, reqObj *SecurityCaseOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityCaseOperation
func (r *SecurityCaseOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityDataSourceRequestBuilder is request builder for SecurityDataSource
type SecurityDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityDataSourceRequest
func (b *SecurityDataSourceRequestBuilder) Request() *SecurityDataSourceRequest {
	return &SecurityDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityDataSourceRequest is request for SecurityDataSource
type SecurityDataSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityDataSource
func (r *SecurityDataSourceRequest) Get(ctx context.Context) (resObj *SecurityDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityDataSource
func (r *SecurityDataSourceRequest) Update(ctx context.Context, reqObj *SecurityDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityDataSource
func (r *SecurityDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryAddToReviewSetOperationRequestBuilder is request builder for SecurityEdiscoveryAddToReviewSetOperation
type SecurityEdiscoveryAddToReviewSetOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryAddToReviewSetOperationRequest
func (b *SecurityEdiscoveryAddToReviewSetOperationRequestBuilder) Request() *SecurityEdiscoveryAddToReviewSetOperationRequest {
	return &SecurityEdiscoveryAddToReviewSetOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryAddToReviewSetOperationRequest is request for SecurityEdiscoveryAddToReviewSetOperation
type SecurityEdiscoveryAddToReviewSetOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryAddToReviewSetOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryAddToReviewSetOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryAddToReviewSetOperation
func (r *SecurityEdiscoveryAddToReviewSetOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCaseRequestBuilder is request builder for SecurityEdiscoveryCase
type SecurityEdiscoveryCaseRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCaseRequest
func (b *SecurityEdiscoveryCaseRequestBuilder) Request() *SecurityEdiscoveryCaseRequest {
	return &SecurityEdiscoveryCaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCaseRequest is request for SecurityEdiscoveryCase
type SecurityEdiscoveryCaseRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCase, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCase) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCase
func (r *SecurityEdiscoveryCaseRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCaseSettingsRequestBuilder is request builder for SecurityEdiscoveryCaseSettings
type SecurityEdiscoveryCaseSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCaseSettingsRequest
func (b *SecurityEdiscoveryCaseSettingsRequestBuilder) Request() *SecurityEdiscoveryCaseSettingsRequest {
	return &SecurityEdiscoveryCaseSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCaseSettingsRequest is request for SecurityEdiscoveryCaseSettings
type SecurityEdiscoveryCaseSettingsRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCaseSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCaseSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCaseSettings
func (r *SecurityEdiscoveryCaseSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryCustodianRequestBuilder is request builder for SecurityEdiscoveryCustodian
type SecurityEdiscoveryCustodianRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryCustodianRequest
func (b *SecurityEdiscoveryCustodianRequestBuilder) Request() *SecurityEdiscoveryCustodianRequest {
	return &SecurityEdiscoveryCustodianRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryCustodianRequest is request for SecurityEdiscoveryCustodian
type SecurityEdiscoveryCustodianRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryCustodian, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryCustodian) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryCustodian
func (r *SecurityEdiscoveryCustodianRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryEstimateOperationRequestBuilder is request builder for SecurityEdiscoveryEstimateOperation
type SecurityEdiscoveryEstimateOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryEstimateOperationRequest
func (b *SecurityEdiscoveryEstimateOperationRequestBuilder) Request() *SecurityEdiscoveryEstimateOperationRequest {
	return &SecurityEdiscoveryEstimateOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryEstimateOperationRequest is request for SecurityEdiscoveryEstimateOperation
type SecurityEdiscoveryEstimateOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryEstimateOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryEstimateOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryEstimateOperation
func (r *SecurityEdiscoveryEstimateOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryIndexOperationRequestBuilder is request builder for SecurityEdiscoveryIndexOperation
type SecurityEdiscoveryIndexOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryIndexOperationRequest
func (b *SecurityEdiscoveryIndexOperationRequestBuilder) Request() *SecurityEdiscoveryIndexOperationRequest {
	return &SecurityEdiscoveryIndexOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryIndexOperationRequest is request for SecurityEdiscoveryIndexOperation
type SecurityEdiscoveryIndexOperationRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryIndexOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryIndexOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryIndexOperation
func (r *SecurityEdiscoveryIndexOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryNoncustodialDataSourceRequestBuilder is request builder for SecurityEdiscoveryNoncustodialDataSource
type SecurityEdiscoveryNoncustodialDataSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryNoncustodialDataSourceRequest
func (b *SecurityEdiscoveryNoncustodialDataSourceRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryNoncustodialDataSourceRequest is request for SecurityEdiscoveryNoncustodialDataSource
type SecurityEdiscoveryNoncustodialDataSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryNoncustodialDataSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryNoncustodialDataSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryNoncustodialDataSource
func (r *SecurityEdiscoveryNoncustodialDataSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewSetRequestBuilder is request builder for SecurityEdiscoveryReviewSet
type SecurityEdiscoveryReviewSetRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewSetRequest
func (b *SecurityEdiscoveryReviewSetRequestBuilder) Request() *SecurityEdiscoveryReviewSetRequest {
	return &SecurityEdiscoveryReviewSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewSetRequest is request for SecurityEdiscoveryReviewSet
type SecurityEdiscoveryReviewSetRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewSet, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewSet) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewSet
func (r *SecurityEdiscoveryReviewSetRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewSetQueryRequestBuilder is request builder for SecurityEdiscoveryReviewSetQuery
type SecurityEdiscoveryReviewSetQueryRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewSetQueryRequest
func (b *SecurityEdiscoveryReviewSetQueryRequestBuilder) Request() *SecurityEdiscoveryReviewSetQueryRequest {
	return &SecurityEdiscoveryReviewSetQueryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewSetQueryRequest is request for SecurityEdiscoveryReviewSetQuery
type SecurityEdiscoveryReviewSetQueryRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewSetQuery, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewSetQuery) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewSetQuery
func (r *SecurityEdiscoveryReviewSetQueryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoveryReviewTagRequestBuilder is request builder for SecurityEdiscoveryReviewTag
type SecurityEdiscoveryReviewTagRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoveryReviewTagRequest
func (b *SecurityEdiscoveryReviewTagRequestBuilder) Request() *SecurityEdiscoveryReviewTagRequest {
	return &SecurityEdiscoveryReviewTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoveryReviewTagRequest is request for SecurityEdiscoveryReviewTag
type SecurityEdiscoveryReviewTagRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Get(ctx context.Context) (resObj *SecurityEdiscoveryReviewTag, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Update(ctx context.Context, reqObj *SecurityEdiscoveryReviewTag) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoveryReviewTag
func (r *SecurityEdiscoveryReviewTagRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityEdiscoverySearchRequestBuilder is request builder for SecurityEdiscoverySearch
type SecurityEdiscoverySearchRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityEdiscoverySearchRequest
func (b *SecurityEdiscoverySearchRequestBuilder) Request() *SecurityEdiscoverySearchRequest {
	return &SecurityEdiscoverySearchRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityEdiscoverySearchRequest is request for SecurityEdiscoverySearch
type SecurityEdiscoverySearchRequest struct{ BaseRequest }

// Get performs GET request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Get(ctx context.Context) (resObj *SecurityEdiscoverySearch, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Update(ctx context.Context, reqObj *SecurityEdiscoverySearch) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityEdiscoverySearch
func (r *SecurityEdiscoverySearchRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecuritySiteSourceRequestBuilder is request builder for SecuritySiteSource
type SecuritySiteSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecuritySiteSourceRequest
func (b *SecuritySiteSourceRequestBuilder) Request() *SecuritySiteSourceRequest {
	return &SecuritySiteSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecuritySiteSourceRequest is request for SecuritySiteSource
type SecuritySiteSourceRequest struct{ BaseRequest }

// Get performs GET request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Get(ctx context.Context) (resObj *SecuritySiteSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Update(ctx context.Context, reqObj *SecuritySiteSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecuritySiteSource
func (r *SecuritySiteSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUnifiedGroupSourceRequestBuilder is request builder for SecurityUnifiedGroupSource
type SecurityUnifiedGroupSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUnifiedGroupSourceRequest
func (b *SecurityUnifiedGroupSourceRequestBuilder) Request() *SecurityUnifiedGroupSourceRequest {
	return &SecurityUnifiedGroupSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUnifiedGroupSourceRequest is request for SecurityUnifiedGroupSource
type SecurityUnifiedGroupSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Get(ctx context.Context) (resObj *SecurityUnifiedGroupSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Update(ctx context.Context, reqObj *SecurityUnifiedGroupSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUnifiedGroupSource
func (r *SecurityUnifiedGroupSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// SecurityUserSourceRequestBuilder is request builder for SecurityUserSource
type SecurityUserSourceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityUserSourceRequest
func (b *SecurityUserSourceRequestBuilder) Request() *SecurityUserSourceRequest {
	return &SecurityUserSourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityUserSourceRequest is request for SecurityUserSource
type SecurityUserSourceRequest struct{ BaseRequest }

// Get performs GET request for SecurityUserSource
func (r *SecurityUserSourceRequest) Get(ctx context.Context) (resObj *SecurityUserSource, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SecurityUserSource
func (r *SecurityUserSourceRequest) Update(ctx context.Context, reqObj *SecurityUserSource) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SecurityUserSource
func (r *SecurityUserSourceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityApplyHold action undocumented
func (b *SecurityEdiscoveryCaseCustodiansCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequestBuilder) Request() *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest {
	return &SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryCustodianCollectionSecurityApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityRemoveHold action undocumented
func (b *SecurityEdiscoveryCaseCustodiansCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequestBuilder) Request() *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest {
	return &SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryCustodianCollectionSecurityRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityApplyHold action undocumented
func (b *SecurityEdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SecurityApplyHold action undocumented
func (b *SecurityEdiscoverySearchNoncustodialSourcesCollectionRequestBuilder) SecurityApplyHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityApplyHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityApplyHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder struct{ BaseRequestBuilder }

// SecurityRemoveHold action undocumented
func (b *SecurityEdiscoveryCaseNoncustodialDataSourcesCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// SecurityRemoveHold action undocumented
func (b *SecurityEdiscoverySearchNoncustodialSourcesCollectionRequestBuilder) SecurityRemoveHold(reqObj *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestParameter) *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder {
	bb := &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SecurityRemoveHold"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest struct{ BaseRequest }

func (b *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequestBuilder) Request() *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest {
	return &SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *SecurityEdiscoveryNoncustodialDataSourceCollectionSecurityRemoveHoldRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
