// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// PresenceRequestBuilder is request builder for Presence
type PresenceRequestBuilder struct{ BaseRequestBuilder }

// Request returns PresenceRequest
func (b *PresenceRequestBuilder) Request() *PresenceRequest {
	return &PresenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PresenceRequest is request for Presence
type PresenceRequest struct{ BaseRequest }

// Get performs GET request for Presence
func (r *PresenceRequest) Get(ctx context.Context) (resObj *Presence, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Presence
func (r *PresenceRequest) Update(ctx context.Context, reqObj *Presence) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Presence
func (r *PresenceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type PresenceClearPresenceRequestBuilder struct{ BaseRequestBuilder }

// ClearPresence action undocumented
func (b *PresenceRequestBuilder) ClearPresence(reqObj *PresenceClearPresenceRequestParameter) *PresenceClearPresenceRequestBuilder {
	bb := &PresenceClearPresenceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ClearPresence"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type PresenceClearPresenceRequest struct{ BaseRequest }

func (b *PresenceClearPresenceRequestBuilder) Request() *PresenceClearPresenceRequest {
	return &PresenceClearPresenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *PresenceClearPresenceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type PresenceClearUserPreferredPresenceRequestBuilder struct{ BaseRequestBuilder }

// ClearUserPreferredPresence action undocumented
func (b *PresenceRequestBuilder) ClearUserPreferredPresence(reqObj *PresenceClearUserPreferredPresenceRequestParameter) *PresenceClearUserPreferredPresenceRequestBuilder {
	bb := &PresenceClearUserPreferredPresenceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ClearUserPreferredPresence"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type PresenceClearUserPreferredPresenceRequest struct{ BaseRequest }

func (b *PresenceClearUserPreferredPresenceRequestBuilder) Request() *PresenceClearUserPreferredPresenceRequest {
	return &PresenceClearUserPreferredPresenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *PresenceClearUserPreferredPresenceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type PresenceSetPresenceRequestBuilder struct{ BaseRequestBuilder }

// SetPresence action undocumented
func (b *PresenceRequestBuilder) SetPresence(reqObj *PresenceSetPresenceRequestParameter) *PresenceSetPresenceRequestBuilder {
	bb := &PresenceSetPresenceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetPresence"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type PresenceSetPresenceRequest struct{ BaseRequest }

func (b *PresenceSetPresenceRequestBuilder) Request() *PresenceSetPresenceRequest {
	return &PresenceSetPresenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *PresenceSetPresenceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type PresenceSetUserPreferredPresenceRequestBuilder struct{ BaseRequestBuilder }

// SetUserPreferredPresence action undocumented
func (b *PresenceRequestBuilder) SetUserPreferredPresence(reqObj *PresenceSetUserPreferredPresenceRequestParameter) *PresenceSetUserPreferredPresenceRequestBuilder {
	bb := &PresenceSetUserPreferredPresenceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/SetUserPreferredPresence"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type PresenceSetUserPreferredPresenceRequest struct{ BaseRequest }

func (b *PresenceSetUserPreferredPresenceRequestBuilder) Request() *PresenceSetUserPreferredPresenceRequest {
	return &PresenceSetUserPreferredPresenceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *PresenceSetUserPreferredPresenceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
