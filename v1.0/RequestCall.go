// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// CallRequestBuilder is request builder for Call
type CallRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallRequest
func (b *CallRequestBuilder) Request() *CallRequest {
	return &CallRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallRequest is request for Call
type CallRequest struct{ BaseRequest }

// Get performs GET request for Call
func (r *CallRequest) Get(ctx context.Context) (resObj *Call, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Call
func (r *CallRequest) Update(ctx context.Context, reqObj *Call) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Call
func (r *CallRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallEndedEventMessageDetailRequestBuilder is request builder for CallEndedEventMessageDetail
type CallEndedEventMessageDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallEndedEventMessageDetailRequest
func (b *CallEndedEventMessageDetailRequestBuilder) Request() *CallEndedEventMessageDetailRequest {
	return &CallEndedEventMessageDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallEndedEventMessageDetailRequest is request for CallEndedEventMessageDetail
type CallEndedEventMessageDetailRequest struct{ BaseRequest }

// Get performs GET request for CallEndedEventMessageDetail
func (r *CallEndedEventMessageDetailRequest) Get(ctx context.Context) (resObj *CallEndedEventMessageDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallEndedEventMessageDetail
func (r *CallEndedEventMessageDetailRequest) Update(ctx context.Context, reqObj *CallEndedEventMessageDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallEndedEventMessageDetail
func (r *CallEndedEventMessageDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallMediaStateRequestBuilder is request builder for CallMediaState
type CallMediaStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallMediaStateRequest
func (b *CallMediaStateRequestBuilder) Request() *CallMediaStateRequest {
	return &CallMediaStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallMediaStateRequest is request for CallMediaState
type CallMediaStateRequest struct{ BaseRequest }

// Get performs GET request for CallMediaState
func (r *CallMediaStateRequest) Get(ctx context.Context) (resObj *CallMediaState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallMediaState
func (r *CallMediaStateRequest) Update(ctx context.Context, reqObj *CallMediaState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallMediaState
func (r *CallMediaStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallOptionsRequestBuilder is request builder for CallOptions
type CallOptionsRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallOptionsRequest
func (b *CallOptionsRequestBuilder) Request() *CallOptionsRequest {
	return &CallOptionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallOptionsRequest is request for CallOptions
type CallOptionsRequest struct{ BaseRequest }

// Get performs GET request for CallOptions
func (r *CallOptionsRequest) Get(ctx context.Context) (resObj *CallOptions, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallOptions
func (r *CallOptionsRequest) Update(ctx context.Context, reqObj *CallOptions) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallOptions
func (r *CallOptionsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallParticipantInfoRequestBuilder is request builder for CallParticipantInfo
type CallParticipantInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallParticipantInfoRequest
func (b *CallParticipantInfoRequestBuilder) Request() *CallParticipantInfoRequest {
	return &CallParticipantInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallParticipantInfoRequest is request for CallParticipantInfo
type CallParticipantInfoRequest struct{ BaseRequest }

// Get performs GET request for CallParticipantInfo
func (r *CallParticipantInfoRequest) Get(ctx context.Context) (resObj *CallParticipantInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallParticipantInfo
func (r *CallParticipantInfoRequest) Update(ctx context.Context, reqObj *CallParticipantInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallParticipantInfo
func (r *CallParticipantInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallRecordRequestBuilder is request builder for CallRecord
type CallRecordRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallRecordRequest
func (b *CallRecordRequestBuilder) Request() *CallRecordRequest {
	return &CallRecordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallRecordRequest is request for CallRecord
type CallRecordRequest struct{ BaseRequest }

// Get performs GET request for CallRecord
func (r *CallRecordRequest) Get(ctx context.Context) (resObj *CallRecord, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallRecord
func (r *CallRecordRequest) Update(ctx context.Context, reqObj *CallRecord) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallRecord
func (r *CallRecordRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallRecordingEventMessageDetailRequestBuilder is request builder for CallRecordingEventMessageDetail
type CallRecordingEventMessageDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallRecordingEventMessageDetailRequest
func (b *CallRecordingEventMessageDetailRequestBuilder) Request() *CallRecordingEventMessageDetailRequest {
	return &CallRecordingEventMessageDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallRecordingEventMessageDetailRequest is request for CallRecordingEventMessageDetail
type CallRecordingEventMessageDetailRequest struct{ BaseRequest }

// Get performs GET request for CallRecordingEventMessageDetail
func (r *CallRecordingEventMessageDetailRequest) Get(ctx context.Context) (resObj *CallRecordingEventMessageDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallRecordingEventMessageDetail
func (r *CallRecordingEventMessageDetailRequest) Update(ctx context.Context, reqObj *CallRecordingEventMessageDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallRecordingEventMessageDetail
func (r *CallRecordingEventMessageDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallRouteRequestBuilder is request builder for CallRoute
type CallRouteRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallRouteRequest
func (b *CallRouteRequestBuilder) Request() *CallRouteRequest {
	return &CallRouteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallRouteRequest is request for CallRoute
type CallRouteRequest struct{ BaseRequest }

// Get performs GET request for CallRoute
func (r *CallRouteRequest) Get(ctx context.Context) (resObj *CallRoute, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallRoute
func (r *CallRouteRequest) Update(ctx context.Context, reqObj *CallRoute) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallRoute
func (r *CallRouteRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallStartedEventMessageDetailRequestBuilder is request builder for CallStartedEventMessageDetail
type CallStartedEventMessageDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallStartedEventMessageDetailRequest
func (b *CallStartedEventMessageDetailRequestBuilder) Request() *CallStartedEventMessageDetailRequest {
	return &CallStartedEventMessageDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallStartedEventMessageDetailRequest is request for CallStartedEventMessageDetail
type CallStartedEventMessageDetailRequest struct{ BaseRequest }

// Get performs GET request for CallStartedEventMessageDetail
func (r *CallStartedEventMessageDetailRequest) Get(ctx context.Context) (resObj *CallStartedEventMessageDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallStartedEventMessageDetail
func (r *CallStartedEventMessageDetailRequest) Update(ctx context.Context, reqObj *CallStartedEventMessageDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallStartedEventMessageDetail
func (r *CallStartedEventMessageDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallTranscriptEventMessageDetailRequestBuilder is request builder for CallTranscriptEventMessageDetail
type CallTranscriptEventMessageDetailRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallTranscriptEventMessageDetailRequest
func (b *CallTranscriptEventMessageDetailRequestBuilder) Request() *CallTranscriptEventMessageDetailRequest {
	return &CallTranscriptEventMessageDetailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallTranscriptEventMessageDetailRequest is request for CallTranscriptEventMessageDetail
type CallTranscriptEventMessageDetailRequest struct{ BaseRequest }

// Get performs GET request for CallTranscriptEventMessageDetail
func (r *CallTranscriptEventMessageDetailRequest) Get(ctx context.Context) (resObj *CallTranscriptEventMessageDetail, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallTranscriptEventMessageDetail
func (r *CallTranscriptEventMessageDetailRequest) Update(ctx context.Context, reqObj *CallTranscriptEventMessageDetail) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallTranscriptEventMessageDetail
func (r *CallTranscriptEventMessageDetailRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CallTranscriptionInfoRequestBuilder is request builder for CallTranscriptionInfo
type CallTranscriptionInfoRequestBuilder struct{ BaseRequestBuilder }

// Request returns CallTranscriptionInfoRequest
func (b *CallTranscriptionInfoRequestBuilder) Request() *CallTranscriptionInfoRequest {
	return &CallTranscriptionInfoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CallTranscriptionInfoRequest is request for CallTranscriptionInfo
type CallTranscriptionInfoRequest struct{ BaseRequest }

// Get performs GET request for CallTranscriptionInfo
func (r *CallTranscriptionInfoRequest) Get(ctx context.Context) (resObj *CallTranscriptionInfo, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CallTranscriptionInfo
func (r *CallTranscriptionInfoRequest) Update(ctx context.Context, reqObj *CallTranscriptionInfo) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CallTranscriptionInfo
func (r *CallTranscriptionInfoRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

type CallCollectionLogTeleconferenceDeviceQualityRequestBuilder struct{ BaseRequestBuilder }

// LogTeleconferenceDeviceQuality action undocumented
func (b *CloudCommunicationsCallsCollectionRequestBuilder) LogTeleconferenceDeviceQuality(reqObj *CallCollectionLogTeleconferenceDeviceQualityRequestParameter) *CallCollectionLogTeleconferenceDeviceQualityRequestBuilder {
	bb := &CallCollectionLogTeleconferenceDeviceQualityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/logTeleconferenceDeviceQuality"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallCollectionLogTeleconferenceDeviceQualityRequest struct{ BaseRequest }

func (b *CallCollectionLogTeleconferenceDeviceQualityRequestBuilder) Request() *CallCollectionLogTeleconferenceDeviceQualityRequest {
	return &CallCollectionLogTeleconferenceDeviceQualityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallCollectionLogTeleconferenceDeviceQualityRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallRedirectRequestBuilder struct{ BaseRequestBuilder }

// Redirect action undocumented
func (b *CallRequestBuilder) Redirect(reqObj *CallRedirectRequestParameter) *CallRedirectRequestBuilder {
	bb := &CallRedirectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/redirect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallRedirectRequest struct{ BaseRequest }

func (b *CallRedirectRequestBuilder) Request() *CallRedirectRequest {
	return &CallRedirectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallRedirectRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallAddLargeGalleryViewRequestBuilder struct{ BaseRequestBuilder }

// AddLargeGalleryView action undocumented
func (b *CallRequestBuilder) AddLargeGalleryView(reqObj *CallAddLargeGalleryViewRequestParameter) *CallAddLargeGalleryViewRequestBuilder {
	bb := &CallAddLargeGalleryViewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/addLargeGalleryView"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallAddLargeGalleryViewRequest struct{ BaseRequest }

func (b *CallAddLargeGalleryViewRequestBuilder) Request() *CallAddLargeGalleryViewRequest {
	return &CallAddLargeGalleryViewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallAddLargeGalleryViewRequest) Post(ctx context.Context) (resObj *AddLargeGalleryViewOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallAnswerRequestBuilder struct{ BaseRequestBuilder }

// Answer action undocumented
func (b *CallRequestBuilder) Answer(reqObj *CallAnswerRequestParameter) *CallAnswerRequestBuilder {
	bb := &CallAnswerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/answer"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallAnswerRequest struct{ BaseRequest }

func (b *CallAnswerRequestBuilder) Request() *CallAnswerRequest {
	return &CallAnswerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallAnswerRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallCancelMediaProcessingRequestBuilder struct{ BaseRequestBuilder }

// CancelMediaProcessing action undocumented
func (b *CallRequestBuilder) CancelMediaProcessing(reqObj *CallCancelMediaProcessingRequestParameter) *CallCancelMediaProcessingRequestBuilder {
	bb := &CallCancelMediaProcessingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cancelMediaProcessing"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallCancelMediaProcessingRequest struct{ BaseRequest }

func (b *CallCancelMediaProcessingRequestBuilder) Request() *CallCancelMediaProcessingRequest {
	return &CallCancelMediaProcessingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallCancelMediaProcessingRequest) Post(ctx context.Context) (resObj *CancelMediaProcessingOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallChangeScreenSharingRoleRequestBuilder struct{ BaseRequestBuilder }

// ChangeScreenSharingRole action undocumented
func (b *CallRequestBuilder) ChangeScreenSharingRole(reqObj *CallChangeScreenSharingRoleRequestParameter) *CallChangeScreenSharingRoleRequestBuilder {
	bb := &CallChangeScreenSharingRoleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/changeScreenSharingRole"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallChangeScreenSharingRoleRequest struct{ BaseRequest }

func (b *CallChangeScreenSharingRoleRequestBuilder) Request() *CallChangeScreenSharingRoleRequest {
	return &CallChangeScreenSharingRoleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallChangeScreenSharingRoleRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallKeepAliveRequestBuilder struct{ BaseRequestBuilder }

// KeepAlive action undocumented
func (b *CallRequestBuilder) KeepAlive(reqObj *CallKeepAliveRequestParameter) *CallKeepAliveRequestBuilder {
	bb := &CallKeepAliveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/keepAlive"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallKeepAliveRequest struct{ BaseRequest }

func (b *CallKeepAliveRequestBuilder) Request() *CallKeepAliveRequest {
	return &CallKeepAliveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallKeepAliveRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallMuteRequestBuilder struct{ BaseRequestBuilder }

// Mute action undocumented
func (b *CallRequestBuilder) Mute(reqObj *CallMuteRequestParameter) *CallMuteRequestBuilder {
	bb := &CallMuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallMuteRequest struct{ BaseRequest }

func (b *CallMuteRequestBuilder) Request() *CallMuteRequest {
	return &CallMuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallMuteRequest) Post(ctx context.Context) (resObj *MuteParticipantOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallPlayPromptRequestBuilder struct{ BaseRequestBuilder }

// PlayPrompt action undocumented
func (b *CallRequestBuilder) PlayPrompt(reqObj *CallPlayPromptRequestParameter) *CallPlayPromptRequestBuilder {
	bb := &CallPlayPromptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/playPrompt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallPlayPromptRequest struct{ BaseRequest }

func (b *CallPlayPromptRequestBuilder) Request() *CallPlayPromptRequest {
	return &CallPlayPromptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallPlayPromptRequest) Post(ctx context.Context) (resObj *PlayPromptOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallRecordResponseRequestBuilder struct{ BaseRequestBuilder }

// RecordResponse action undocumented
func (b *CallRequestBuilder) RecordResponse(reqObj *CallRecordResponseRequestParameter) *CallRecordResponseRequestBuilder {
	bb := &CallRecordResponseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/recordResponse"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallRecordResponseRequest struct{ BaseRequest }

func (b *CallRecordResponseRequestBuilder) Request() *CallRecordResponseRequest {
	return &CallRecordResponseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallRecordResponseRequest) Post(ctx context.Context) (resObj *RecordOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallRejectRequestBuilder struct{ BaseRequestBuilder }

// Reject action undocumented
func (b *CallRequestBuilder) Reject(reqObj *CallRejectRequestParameter) *CallRejectRequestBuilder {
	bb := &CallRejectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reject"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallRejectRequest struct{ BaseRequest }

func (b *CallRejectRequestBuilder) Request() *CallRejectRequest {
	return &CallRejectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallRejectRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallSubscribeToToneRequestBuilder struct{ BaseRequestBuilder }

// SubscribeToTone action undocumented
func (b *CallRequestBuilder) SubscribeToTone(reqObj *CallSubscribeToToneRequestParameter) *CallSubscribeToToneRequestBuilder {
	bb := &CallSubscribeToToneRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/subscribeToTone"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallSubscribeToToneRequest struct{ BaseRequest }

func (b *CallSubscribeToToneRequestBuilder) Request() *CallSubscribeToToneRequest {
	return &CallSubscribeToToneRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallSubscribeToToneRequest) Post(ctx context.Context) (resObj *SubscribeToToneOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallTransferRequestBuilder struct{ BaseRequestBuilder }

// Transfer action undocumented
func (b *CallRequestBuilder) Transfer(reqObj *CallTransferRequestParameter) *CallTransferRequestBuilder {
	bb := &CallTransferRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/transfer"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallTransferRequest struct{ BaseRequest }

func (b *CallTransferRequestBuilder) Request() *CallTransferRequest {
	return &CallTransferRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallTransferRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

type CallUnmuteRequestBuilder struct{ BaseRequestBuilder }

// Unmute action undocumented
func (b *CallRequestBuilder) Unmute(reqObj *CallUnmuteRequestParameter) *CallUnmuteRequestBuilder {
	bb := &CallUnmuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unmute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallUnmuteRequest struct{ BaseRequest }

func (b *CallUnmuteRequestBuilder) Request() *CallUnmuteRequest {
	return &CallUnmuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallUnmuteRequest) Post(ctx context.Context) (resObj *UnmuteParticipantOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

type CallUpdateRecordingStatusRequestBuilder struct{ BaseRequestBuilder }

// UpdateRecordingStatus action undocumented
func (b *CallRequestBuilder) UpdateRecordingStatus(reqObj *CallUpdateRecordingStatusRequestParameter) *CallUpdateRecordingStatusRequestBuilder {
	bb := &CallUpdateRecordingStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/updateRecordingStatus"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

type CallUpdateRecordingStatusRequest struct{ BaseRequest }

func (b *CallUpdateRecordingStatusRequestBuilder) Request() *CallUpdateRecordingStatusRequest {
	return &CallUpdateRecordingStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

func (r *CallUpdateRecordingStatusRequest) Post(ctx context.Context) (resObj *UpdateRecordingStatusOperation, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
