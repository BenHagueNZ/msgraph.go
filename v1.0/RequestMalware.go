// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// MalwareRequestBuilder is request builder for Malware
type MalwareRequestBuilder struct{ BaseRequestBuilder }

// Request returns MalwareRequest
func (b *MalwareRequestBuilder) Request() *MalwareRequest {
	return &MalwareRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MalwareRequest is request for Malware
type MalwareRequest struct{ BaseRequest }

// Get performs GET request for Malware
func (r *MalwareRequest) Get(ctx context.Context) (resObj *Malware, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Malware
func (r *MalwareRequest) Update(ctx context.Context, reqObj *Malware) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Malware
func (r *MalwareRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// MalwareStateRequestBuilder is request builder for MalwareState
type MalwareStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns MalwareStateRequest
func (b *MalwareStateRequestBuilder) Request() *MalwareStateRequest {
	return &MalwareStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// MalwareStateRequest is request for MalwareState
type MalwareStateRequest struct{ BaseRequest }

// Get performs GET request for MalwareState
func (r *MalwareStateRequest) Get(ctx context.Context) (resObj *MalwareState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for MalwareState
func (r *MalwareStateRequest) Update(ctx context.Context, reqObj *MalwareState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for MalwareState
func (r *MalwareStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
