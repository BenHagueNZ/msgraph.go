// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import "context"

// TermRequestBuilder is request builder for Term
type TermRequestBuilder struct{ BaseRequestBuilder }

// Request returns TermRequest
func (b *TermRequestBuilder) Request() *TermRequest {
	return &TermRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TermRequest is request for Term
type TermRequest struct{ BaseRequest }

// Get performs GET request for Term
func (r *TermRequest) Get(ctx context.Context) (resObj *Term, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Term
func (r *TermRequest) Update(ctx context.Context, reqObj *Term) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Term
func (r *TermRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TermColumnRequestBuilder is request builder for TermColumn
type TermColumnRequestBuilder struct{ BaseRequestBuilder }

// Request returns TermColumnRequest
func (b *TermColumnRequestBuilder) Request() *TermColumnRequest {
	return &TermColumnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TermColumnRequest is request for TermColumn
type TermColumnRequest struct{ BaseRequest }

// Get performs GET request for TermColumn
func (r *TermColumnRequest) Get(ctx context.Context) (resObj *TermColumn, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TermColumn
func (r *TermColumnRequest) Update(ctx context.Context, reqObj *TermColumn) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TermColumn
func (r *TermColumnRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
